define("4df9bb86-ab0a-4aab-ab5f-48bf167048fb_1.1.1", ["@ms/sp-telemetry","@microsoft/sp-core-library","@microsoft/sp-http","@microsoft/sp-page-context","@ms/odsp-utilities-bundle","@microsoft/sp-extension-base","@microsoft/decorators","@microsoft/sp-loader"], function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_20__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 38);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(1);
var PlaceholderManager = (function () {
    function PlaceholderManager(serviceScope) {
        var _this = this;
        this._definitions = undefined;
        this.definitionsReadyPromise = new Promise(function (resolve, reject) {
            _this._resolveCallback = resolve;
        });
    }
    PlaceholderManager.prototype.registerPlaceholders = function () {
        var placeholderDivs = document.querySelectorAll("[" + PlaceholderManager.placeholderAttributeName + "]");
        var placeholderDefs = [];
        for (var i = 0; i < placeholderDivs.length; i++) {
            var div = placeholderDivs[i];
            if (div) {
                placeholderDefs.push({
                    name: div.getAttribute(PlaceholderManager.placeholderAttributeName),
                    domElement: div
                });
            }
        }
        this.initializePlaceholders(placeholderDefs);
    };
    PlaceholderManager.prototype.initializePlaceholders = function (definitions) {
        sp_core_library_1.Validate.isNotNullOrUndefined(definitions, 'definitions');
        if (this._definitions) {
            throw new Error('definePlaceholders() cannot be called more than once');
        }
        this._definitions = definitions;
        this._resolveCallback();
    };
    Object.defineProperty(PlaceholderManager.prototype, "definitions", {
        get: function () {
            return this._definitions;
        },
        enumerable: true,
        configurable: true
    });
    return PlaceholderManager;
}());
PlaceholderManager.serviceKey = sp_core_library_1.ServiceKey.create('sp-application-base:PlaceholderManager', PlaceholderManager);
PlaceholderManager.placeholderAttributeName = 'data-sp-placeholder';
exports.default = PlaceholderManager;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_6__;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavSource;
(function (SuiteNavSource) {
    SuiteNavSource[SuiteNavSource["SPO"] = 0] = "SPO";
    SuiteNavSource[SuiteNavSource["OnPrem"] = 1] = "OnPrem";
})(SuiteNavSource = exports.SuiteNavSource || (exports.SuiteNavSource = {}));


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sp_page_context_1 = __webpack_require__(3);
var sp_extension_base_1 = __webpack_require__(6);
var PlaceholderCollection_1 = __webpack_require__(12);
var ApplicationCustomizerContext = (function (_super) {
    __extends(ApplicationCustomizerContext, _super);
    function ApplicationCustomizerContext(extensionContextParameters, applicationCustomizerContextParameters) {
        var _this = _super.call(this, extensionContextParameters) || this;
        _this._placeholders = new PlaceholderCollection_1.default(_this.serviceScope);
        _this.serviceScope.whenFinished(function () {
            _this._pageContext = _this.serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
        });
        return _this;
    }
    Object.defineProperty(ApplicationCustomizerContext.prototype, "pageContext", {
        get: function () {
            return this._pageContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationCustomizerContext.prototype, "placeholders", {
        get: function () {
            return this._placeholders;
        },
        enumerable: true,
        configurable: true
    });
    return ApplicationCustomizerContext;
}(sp_extension_base_1.ExtensionContext));
exports.default = ApplicationCustomizerContext;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(13);
var sp_extension_base_1 = __webpack_require__(6);
var BaseApplicationCustomizer = (function (_super) {
    __extends(BaseApplicationCustomizer, _super);
    function BaseApplicationCustomizer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BaseApplicationCustomizer.prototype.onRender = function () {
    };
    return BaseApplicationCustomizer;
}(sp_extension_base_1.BaseExtension));
__decorate([
    decorators_1.virtual
], BaseApplicationCustomizer.prototype, "onRender", null);
exports.default = BaseApplicationCustomizer;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DialogManagerConfiguration = (function () {
    function DialogManagerConfiguration() {
    }
    Object.defineProperty(DialogManagerConfiguration, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new DialogManagerConfiguration();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManagerConfiguration.prototype, "allowDialogs", {
        get: function () {
            return this._allowDialogs;
        },
        set: function (value) {
            this._allowDialogs = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManagerConfiguration.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    DialogManagerConfiguration.prototype.initialize = function (domElement, allowDialogs) {
        if (allowDialogs === void 0) { allowDialogs = true; }
        this._allowDialogs = allowDialogs;
        this._domElement = domElement;
    };
    DialogManagerConfiguration.prototype.dispose = function () {
        this._allowDialogs = undefined;
        this._domElement = undefined;
    };
    return DialogManagerConfiguration;
}());
exports.default = DialogManagerConfiguration;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(1);
var sp_telemetry_1 = __webpack_require__(0);
var Placeholder = (function () {
    function Placeholder(definition) {
        this._disposeHandler = undefined;
        sp_core_library_1.Validate.isNotNullOrUndefined(definition, 'definition');
        sp_core_library_1.Validate.isNonemptyString(definition.name, 'definition.name');
        sp_core_library_1.Validate.isNotNullOrUndefined(definition.domElement, 'definition.domElement');
        this._name = definition.name;
        this._parentElement = definition.domElement;
    }
    Object.defineProperty(Placeholder.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Placeholder.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    Placeholder.prototype._tryAttach = function (options) {
        if (this._domElement) {
            return false;
        }
        this._domElement = document.createElement('div');
        this._parentElement.appendChild(this._domElement);
        this._disposeHandler = options.onDispose;
        return true;
    };
    Placeholder.prototype.dispose = function () {
        if (this._domElement) {
            if (this._disposeHandler) {
                try {
                    this._disposeHandler(this);
                }
                catch (error) {
                    sp_telemetry_1._TraceLogger.logError(Placeholder._logSource, new Error("The onDispose API threw an exception for placeholder '" + this._name + "'. Error information is '" + error.message + "'")); 
                }
                this._disposeHandler = undefined;
            }
            this._parentElement.removeChild(this._domElement);
            this._domElement = undefined;
        }
    };
    return Placeholder;
}());
Placeholder._logSource = sp_telemetry_1._LogSource.create('Placeholder');
exports.default = Placeholder;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PlaceholderManager_1 = __webpack_require__(5);
var Placeholder_1 = __webpack_require__(11);
var PlaceholderCollection = (function () {
    function PlaceholderCollection(serviceScope) {
        var _this = this;
        this._placeholders = undefined;
        serviceScope.whenFinished(function () {
            _this._placeholderManager = serviceScope.consume(PlaceholderManager_1.default.serviceKey);
        });
    }
    PlaceholderCollection.prototype.tryAttach = function (name, options) {
        if (!this._tryInitialize() || !this._placeholders.has(name)) {
            return undefined;
        }
        var placeholder = this._placeholders.get(name);
        if (!placeholder) {
            throw new Error('PlaceHolder dictionary has only the key but not the value for the placeholder');
        }
        var isAttached = placeholder._tryAttach(options);
        if (!isAttached) {
            throw new Error('Trying to attach the placeholder twice before being disposed. This is not allowed.');
        }
        return placeholder;
    };
    Object.defineProperty(PlaceholderCollection.prototype, "placeholderNames", {
        get: function () {
            if (!this._tryInitialize()) {
                return [];
            }
            var array = [];
            var iterator = this._placeholders.keys();
            for (var result = iterator.next(); !result.done; result = iterator.next()) {
                array.push(result.value);
            }
            return array;
        },
        enumerable: true,
        configurable: true
    });
    PlaceholderCollection.prototype._tryInitialize = function () {
        if (this._placeholders) {
            return true;
        }
        if (this._placeholderManager && this._placeholderManager.definitions) {
            this._placeholders = new Map();
            for (var _i = 0, _a = this._placeholderManager.definitions; _i < _a.length; _i++) {
                var definition = _a[_i];
                var placeholder = new Placeholder_1.default(definition);
                this._placeholders.set(definition.name, placeholder);
            }
            return true;
        }
        return false;
    };
    return PlaceholderCollection;
}());
exports.default = PlaceholderCollection;


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(1);
var SPThemeProvider_1 = __webpack_require__(27);
var SPGlobalErrorHandler_1 = __webpack_require__(23);
var DialogManagerConfiguration_1 = __webpack_require__(10);
var SPPageChrome_module_scss_1 = __webpack_require__(26);
var SPPageChrome = (function () {
    function SPPageChrome(serviceScope) {
        this._createPageChrome();
        DialogManagerConfiguration_1.default.instance.initialize(this.dialogContainerDiv);
        if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('48CB5A9D-4E94-40F0-B51F-24480C28E565'), '7/13/2016', 'EnableTheming')) {
            this._spThemeProvider = new SPThemeProvider_1.default(serviceScope);
            this._spThemeProvider.loadThemedStyles();
        }
    }
    SPPageChrome.getInstance = function (serviceScope) {
        if (SPPageChrome._instance === undefined) {
            SPPageChrome._instance = new SPPageChrome(serviceScope);
        }
        return SPPageChrome._instance;
    };
    SPPageChrome.prototype.changeSuiteNavHeight = function (pixels) {
        var top = parseInt(pixels, 10) + 'px';
        if (!this._isFlexLayoutEnabled) {
            this.appDiv.style.top = top;
            this.appDiv.style.height = "calc(100% - " + top + ")";
            this.propertyPaneContainerDiv.style.top = top;
        }
        this.suiteNavDiv.style.height = top;
    };
    SPPageChrome.prototype._createPageChrome = function () {
        document.body.className = 'ms-font-m';
        var pageChromeDiv = document.createElement('div');
        pageChromeDiv.setAttribute('class', this._isFlexLayoutEnabled ? 'SPPageChrome' : 'SPPageChromeNoFlexbox');
        this.suiteNavDiv = document.createElement('div');
        this.suiteNavDiv.setAttribute('id', 'SuiteNavPlaceHolder');
        this.appDiv = document.createElement('div');
        this.appDiv.setAttribute('class', this._isFlexLayoutEnabled ? "SPPageChrome-app" : "SPPageChromeNoFlexbox-app " + SPPageChrome_module_scss_1.default.spPageContentTransition);
        this.appDiv.setAttribute('id', 'spPageChromeAppDiv');
        this.propertyPaneContainerDiv = document.createElement('div');
        if (this._isFlexLayoutEnabled) {
            this.propertyPaneContainerDiv.setAttribute('class', "spPropertyPaneContainer " + SPPageChrome_module_scss_1.default.spPageContentTransition);
            this.propertyPaneContainerDiv.setAttribute('id', 'spPropertyPaneContainer');
        }
        else {
            this.propertyPaneContainerDiv.setAttribute('class', "spPropertyPaneContainerNoFlexbox " + SPPageChrome_module_scss_1.default.spPageContentTransition);
            this.propertyPaneContainerDiv.setAttribute('id', 'spPropertyPaneContainerNoFlexbox');
        }
        pageChromeDiv.appendChild(this.suiteNavDiv);
        if (this._isFlexLayoutEnabled) {
            this.appAndPropertyPaneDiv = document.createElement('div');
            this.appAndPropertyPaneDiv.setAttribute('class', "spAppAndPropertyPanelContainer");
            pageChromeDiv.appendChild(this.appAndPropertyPaneDiv);
            this.appAndPropertyPaneDiv.appendChild(this.appDiv);
            this.appAndPropertyPaneDiv.appendChild(this.propertyPaneContainerDiv);
        }
        else {
            pageChromeDiv.appendChild(this.appDiv);
            pageChromeDiv.appendChild(this.propertyPaneContainerDiv);
        }
        this.dialogContainerDiv = document.createElement('div');
        this.dialogContainerDiv.setAttribute('id', 'spDialogContainerDiv');
        pageChromeDiv.appendChild(this.dialogContainerDiv);
        document.body.appendChild(pageChromeDiv);
        if (this._shouldHandleGlobalErrors && !window.onerror) {
            window.onerror = SPGlobalErrorHandler_1.default.basicTracingHandler;
        }
    };
    Object.defineProperty(SPPageChrome.prototype, "_shouldHandleGlobalErrors", {
        get: function () {
            return !sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('BAC66CD5-F1C1-4BDD-9FFD-A8C6044EB285'), '10/13/2016', 'GlobalErrorHandler');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPPageChrome.prototype, "_isFlexLayoutEnabled", {
        get: function () {
            return !sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('E17AF313-E05B-4055-BDF7-7CD508F8853F'), '5/9/2017', 'Switch to flexbox');
        },
        enumerable: true,
        configurable: true
    });
    return SPPageChrome;
}());
exports.default = SPPageChrome;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(0);
var sp_http_1 = __webpack_require__(2);
var sp_loader_1 = __webpack_require__(20);
var odsp_utilities_bundle_1 = __webpack_require__(4);
var ISuiteNavDataSource_1 = __webpack_require__(7);
var SPOSuiteNavDataSource_1 = __webpack_require__(35);
var OnPremSuiteNavDataSource_1 = __webpack_require__(34);
var O365ShellWrapper_1 = __webpack_require__(32);
var SPPageChrome_1 = __webpack_require__(14);
var SuiteNavManager = (function () {
    function SuiteNavManager(suiteNavManagerConfiguration, suiteNavDiv, serviceScope) {
        var _this = this;
        this._suiteNavManagerConfiguration = suiteNavManagerConfiguration;
        this._suiteNavDataSource = undefined;
        this._o365Shell = undefined;
        this._suiteNavManagerConfiguration.o365ShellRenderSettings.top = suiteNavDiv.id;
        this._suiteNavDiv = suiteNavDiv;
        this._serviceScope = serviceScope;
        serviceScope.whenFinished(function () {
            _this._httpClient = serviceScope.consume(sp_http_1.SPHttpClient.serviceKey);
        });
        if (!suiteNavManagerConfiguration.isSuiteNavDisabled()) {
            SPPageChrome_1.default.getInstance(this._serviceScope).changeSuiteNavHeight(SuiteNavManager._defaultSuiteNavHeight);
        }
    }
    SuiteNavManager._updateCache = function (model, service) {
        SuiteNavManager._cache.setValue(SuiteNavManager.DATA_KEY, model);
        SuiteNavManager._cache.setValue(SuiteNavManager.DATE_KEY, new Date());
        SuiteNavManager._cache.setValue(SuiteNavManager.VERSION_KEY, SuiteNavManager.CACHE_VERSION);
        SuiteNavManager._cache.setValue(SuiteNavManager.SESSION_KEY, true, odsp_utilities_bundle_1.DataStoreCachingType.session);
        SuiteNavManager._cache.setValue(SuiteNavManager.SERVICE_KEY, service);
    };
    SuiteNavManager._clearCache = function () {
        SuiteNavManager._cache.remove(SuiteNavManager.DATA_KEY);
        SuiteNavManager._cache.remove(SuiteNavManager.DATE_KEY);
        SuiteNavManager._cache.remove(SuiteNavManager.VERSION_KEY);
        SuiteNavManager._cache.remove(SuiteNavManager.SERVICE_KEY);
    };
    SuiteNavManager.prototype.setComponentVisibility = function (setVisible) {
        var _this = this;
        this._suiteNavDiv.hidden = !setVisible;
        if (this._suiteNavModel) {
            this._suiteNavModel.then(function (model) {
                SPPageChrome_1.default.getInstance(_this._serviceScope).changeSuiteNavHeight(setVisible ?
                    model.NavBarData.Dimensions.Top :
                    '0px');
            });
        }
    };
    SuiteNavManager.prototype.loadSuiteNav = function () {
        var _this = this;
        this._suiteNavModel = this._getSuiteNavModel();
        this._suiteNavModel
            .then(function (suiteNavModel) { return _this._modifySuiteNavModel(suiteNavModel); })
            .then(function (suiteNavModel) { return _this._getSuiteNavShell(suiteNavModel); })
            .then(function (o365ShellWrapper) { return _this._renderSuiteNav(o365ShellWrapper); });
    };
    SuiteNavManager.prototype._getSuiteNavModel = function () {
        if (this._isCacheValid() && !this._isCacheOutdated()) {
            return this._loadSuiteNavFromCache();
        }
        else {
            SuiteNavManager._clearCache();
            return this._loadSuiteNavFromServer();
        }
    };
    SuiteNavManager.prototype._loadSuiteNavFromCache = function () {
        var _this = this;
        return new Promise(function (complete) {
            SuiteNavManager._cache.getValue(SuiteNavManager.SERVICE_KEY) ===
                ISuiteNavDataSource_1.SuiteNavSource.SPO ?
                _this._suiteNavDataSource = _this._createSPODataSource() :
                _this._suiteNavDataSource = _this._createOnPremDataSource();
            complete(SuiteNavManager._cache.getValue(SuiteNavManager.DATA_KEY));
        });
    };
    SuiteNavManager.prototype._loadSuiteNavFromServer = function () {
        var _this = this;
        this._suiteNavDataSource = this._createSPODataSource();
        var onPremDataSource = this._createOnPremDataSource();
        var onPremSuiteNavResponse = onPremDataSource.loadData();
        onPremSuiteNavResponse.catch(function () {
            _this._createSuiteNavErrorLogEntry('loadData', 'Failed to retrieve Hybrid SuiteNavData');
        });
        return this._suiteNavDataSource.loadData().then(function (response) {
            return response;
        }).catch(function () {
            _this._createSuiteNavErrorLogEntry('loadData', 'Failed to retrieve SPO SuiteNavData');
            _this._suiteNavDataSource = onPremDataSource;
            return onPremSuiteNavResponse;
        });
    };
    SuiteNavManager.prototype._modifySuiteNavModel = function (suiteNavResponse) {
        suiteNavResponse.NavBarData =
            this._suiteNavManagerConfiguration.modifySuiteNavData(suiteNavResponse.NavBarData);
        return suiteNavResponse;
    };
    SuiteNavManager.prototype._getSuiteNavShell = function (suiteNavModel) {
        if (!suiteNavModel) {
            this._createSuiteNavErrorLogEntry('getO365Shell', 'SuiteNavModel is undefined');
        }
        suiteNavModel.CacheToken = this._suiteNavManagerConfiguration.cacheToken;
        suiteNavModel.UserIdentifier = this._suiteNavManagerConfiguration.systemUserKey;
        SuiteNavManager._updateCache(suiteNavModel, this._suiteNavDataSource.suiteNavService);
        SPPageChrome_1.default.getInstance(this._serviceScope).changeSuiteNavHeight(suiteNavModel.NavBarData.Dimensions.Top);
        var element = document.createElement('link');
        element.rel = 'stylesheet';
        element.type = 'text/css';
        element.href = suiteNavModel.CssUrl;
        document.head.appendChild(element);
        var promise = new Promise(function (complete) {
            sp_loader_1.SPComponentLoader.loadScript(suiteNavModel.JsUrl).then(function () {
                var o365Shell = new O365ShellWrapper_1.default();
                o365Shell.SetData(suiteNavModel.NavBarData);
                complete(o365Shell);
            });
        });
        return promise;
    };
    SuiteNavManager.prototype._renderSuiteNav = function (o365Shell) {
        var _this = this;
        this._o365Shell = o365Shell;
        this._o365Shell.RenderAsync(this._suiteNavManagerConfiguration.o365ShellRenderSettings, function () {
            _this._onRender(o365Shell);
        }, function () {
            _this._onPostRender();
        });
        this._o365Shell.OnHasMember('LoadShellPlus', function () {
            _this._loadShellPlus(_this._o365Shell);
        });
    };
    SuiteNavManager.prototype._onRender = function (o365Shell) {
        if (this._suiteNavManagerConfiguration.hamburgerCallback) {
            if (o365Shell.Navigation.OnHamburgerButtonClick) {
                o365Shell.Navigation.OnHamburgerButtonClick(this._suiteNavManagerConfiguration.hamburgerCallback);
            }
        }
    };
    SuiteNavManager.prototype._onPostRender = function () {
        if (this._suiteNavManagerConfiguration.suiteNavPostRenderCallback) {
            this._suiteNavManagerConfiguration.suiteNavPostRenderCallback();
        }
    };
    SuiteNavManager.prototype._loadShellPlus = function (o365Shell) {
        var _this = this;
        return new Promise(function () {
            o365Shell.LoadShellPlus();
        }).catch(function (errorMessage) {
            _this._createSuiteNavErrorLogEntry('loadShellPlus', errorMessage);
        });
    };
    SuiteNavManager.prototype._isCacheValid = function () {
        var model = SuiteNavManager._cache.getValue(SuiteNavManager.DATA_KEY);
        var oldVersion = SuiteNavManager._cache.getValue(SuiteNavManager.VERSION_KEY);
        return (model && model.NavBarData &&
            ((model.JsUrl && model.CssUrl)) &&
            oldVersion === SuiteNavManager.CACHE_VERSION &&
            model.UserIdentifier &&
            model.UserIdentifier === this._suiteNavManagerConfiguration.systemUserKey &&
            model.CacheToken === this._suiteNavManagerConfiguration.cacheToken);
    };
    SuiteNavManager.prototype._isCacheOutdated = function () {
        var cacheDate = Date.parse(SuiteNavManager._cache.getValue(SuiteNavManager.DATE_KEY));
        var currentDate = new Date();
        var cachedThisSession = SuiteNavManager._cache.getValue(SuiteNavManager.SESSION_KEY, odsp_utilities_bundle_1.DataStoreCachingType.session);
        return (isNaN(cacheDate) ||
            currentDate.getTime() - cacheDate > 24 * 60 * 60 * 1000 ||
            (odsp_utilities_bundle_1.DataStore.hasStorageType(odsp_utilities_bundle_1.DataStoreCachingType.session) && !cachedThisSession));
    };
    SuiteNavManager.prototype._createSPODataSource = function () {
        return new SPOSuiteNavDataSource_1.default(this._httpClient, this._suiteNavManagerConfiguration.currentUICultureName, this._suiteNavManagerConfiguration.webServerRelativeUrl);
    };
    SuiteNavManager.prototype._createOnPremDataSource = function () {
        return new OnPremSuiteNavDataSource_1.default(this._httpClient, this._suiteNavManagerConfiguration.currentUICultureName, this._suiteNavManagerConfiguration.webServerRelativeUrl);
    };
    SuiteNavManager.prototype._createSuiteNavErrorLogEntry = function (moduleName, errorMessage) {
        sp_telemetry_1._TraceLogger.logVerbose(SuiteNavManager._logSource, 'SuiteNavManager ' + moduleName + ' ' + errorMessage);
    };
    return SuiteNavManager;
}());
SuiteNavManager._defaultSuiteNavHeight = '50px';
SuiteNavManager.CACHE_PREFIX = 'SPPPLATSuiteNav';
SuiteNavManager.SERVICE_KEY = 'SuiteNavService';
SuiteNavManager.DATA_KEY = 'Data';
SuiteNavManager.DATE_KEY = 'CacheDate';
SuiteNavManager.VERSION_KEY = 'CacheVersion';
SuiteNavManager.SESSION_KEY = 'CachedThisSession';
SuiteNavManager.CACHE_VERSION = 1;
SuiteNavManager._cache = new odsp_utilities_bundle_1.DataStore(SuiteNavManager.CACHE_PREFIX, odsp_utilities_bundle_1.DataStoreCachingType.local);
SuiteNavManager._logSource = sp_telemetry_1._LogSource.create('SuiteNavManager');
exports.default = SuiteNavManager;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/**
 * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value
 * to use if that slot is not specified by the theme.
 */

Object.defineProperty(exports, "__esModule", { value: true });
// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this
// value will initialize as undefined, and later will be set once on first loadStyles injection.
var _injectStylesWithCssText;
// Store the theming state in __themeState__ global scope for reuse in the case of duplicate
// load-themed-styles hosted on the page.
var _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any
var _themeState = _root.__themeState__ = _root.__themeState__ || {
    theme: undefined,
    lastStyleElement: undefined,
    registeredStyles: []
};
/**
 * Matches theming tokens. For example, "[theme: themeSlotName, default: #FFF]" (including the quotes).
 */
// tslint:disable-next-line:max-line-length
var _themeTokenRegex = /[\'\"]\[theme:\s*(\w+)\s*(?:\,\s*default:\s*([\\"\']?[\.\,\(\)\#\-\s\w]*[\.\,\(\)\#\-\w][\"\']?))?\s*\][\'\"]/g;
/** Maximum style text length, for supporting IE style restrictions. */
var MAX_STYLE_CONTENT_SIZE = 10000;
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load
 * event is fired.
 * @param {string | ThemableArray} styles Themable style text to register.
 */
function loadStyles(styles) {
    var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);
    if (_injectStylesWithCssText === undefined) {
        _injectStylesWithCssText = shouldUseCssText();
    }
    applyThemableStyles(styleParts);
}
exports.loadStyles = loadStyles;
/**
 * Allows for customizable loadStyles logic. e.g. for server side rendering application
 * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}
 * a loadStyles callback that gets called when styles are loaded or reloaded
 */
function configureLoadStyles(loadStyles) {
    _themeState.loadStyles = loadStyles;
}
exports.configureLoadStyles = configureLoadStyles;
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load event
 * is fired.
 * @param {string} styleText Style to register.
 * @param {IStyleRecord} styleRecord Existing style record to re-apply.
 */
function applyThemableStyles(stylesArray, styleRecord) {
    if (_themeState.loadStyles) {
        _themeState.loadStyles(resolveThemableArray(stylesArray), stylesArray);
    }
    else {
        _injectStylesWithCssText ?
            registerStylesIE(stylesArray, styleRecord) :
            registerStyles(stylesArray, styleRecord);
    }
}
/**
 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
 * replaced.
 * @param {theme} theme JSON object of theme tokens to values.
 */
function loadTheme(theme) {
    _themeState.theme = theme;
    // reload styles.
    reloadStyles();
}
exports.loadTheme = loadTheme;
/**
 * Clear already registered style elements and style records in theme_State object
 */
function clearStyles() {
    _themeState.registeredStyles.forEach(function (styleRecord) {
        var styleElement = styleRecord && styleRecord.styleElement;
        if (styleElement && styleElement.parentElement) {
            styleElement.parentElement.removeChild(styleElement);
        }
    });
    _themeState.registeredStyles = [];
}
exports.clearStyles = clearStyles;
/**
 * Reloads styles.
 */
function reloadStyles() {
    if (_themeState.theme) {
        for (var _i = 0, _a = _themeState.registeredStyles; _i < _a.length; _i++) {
            var styleRecord = _a[_i];
            applyThemableStyles(styleRecord.themableStyle, styleRecord);
        }
    }
}
/**
 * Find theme tokens and replaces them with provided theme values.
 * @param {string} styles Tokenized styles to fix.
 */
function detokenize(styles) {
    if (styles) {
        styles = resolveThemableArray(splitStyles(styles));
    }
    return styles;
}
exports.detokenize = detokenize;
/**
 * Resolves ThemingInstruction objects in an array and joins the result into a string.
 * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.
 */
function resolveThemableArray(splitStyleArray) {
    var theme = _themeState.theme;
    // Resolve the array of theming instructions to an array of strings.
    // Then join the array to produce the final CSS string.
    var resolvedArray = (splitStyleArray || []).map(function (currentValue) {
        var themeSlot = currentValue.theme;
        if (themeSlot) {
            // A theming annotation. Resolve it.
            var themedValue = theme ? theme[themeSlot] : undefined;
            var defaultValue = currentValue.defaultValue || 'inherit';
            // Warn to console if we hit an unthemed value even when themes are provided, unless "DEBUG" is false
            // Allow the themedValue to be undefined to explicitly request the default value.
            if (theme && !themedValue && console && !(themeSlot in theme) && ("boolean" === 'undefined' || true)) {
                console.warn("Theming value not provided for \"" + themeSlot + "\". Falling back to \"" + defaultValue + "\".");
            }
            return themedValue || defaultValue;
        }
        else {
            // A non-themable string. Preserve it.
            return currentValue.rawString;
        }
    });
    return resolvedArray.join('');
}
/**
 * Split tokenized CSS into an array of strings and theme specification objects
 * @param {string} styles Tokenized styles to split.
 */
function splitStyles(styles) {
    var result = [];
    if (styles) {
        var pos = 0; // Current position in styles.
        var tokenMatch = void 0; // tslint:disable-line:no-null-keyword
        while (tokenMatch = _themeTokenRegex.exec(styles)) {
            var matchIndex = tokenMatch.index;
            if (matchIndex > pos) {
                result.push({
                    rawString: styles.substring(pos, matchIndex)
                });
            }
            result.push({
                theme: tokenMatch[1],
                defaultValue: tokenMatch[2] // May be undefined
            });
            // index of the first character after the current match
            pos = _themeTokenRegex.lastIndex;
        }
        // Push the rest of the string after the last match.
        result.push({
            rawString: styles.substring(pos)
        });
    }
    return result;
}
exports.splitStyles = splitStyles;
/**
 * Registers a set of style text. If it is registered too early, we will register it when the
 * window.load event is fired.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStyles(styleArray, styleRecord) {
    var head = document.getElementsByTagName('head')[0];
    var styleElement = document.createElement('style');
    styleElement.type = 'text/css';
    styleElement.appendChild(document.createTextNode(resolveThemableArray(styleArray)));
    if (styleRecord) {
        head.replaceChild(styleElement, styleRecord.styleElement);
        styleRecord.styleElement = styleElement;
    }
    else {
        head.appendChild(styleElement);
    }
    if (!styleRecord) {
        _themeState.registeredStyles.push({
            styleElement: styleElement,
            themableStyle: styleArray
        });
    }
}
/**
 * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need
 * to register slightly differently.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStylesIE(styleArray, styleRecord) {
    var head = document.getElementsByTagName('head')[0];
    var registeredStyles = _themeState.registeredStyles;
    var lastStyleElement = _themeState.lastStyleElement;
    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : undefined;
    var lastStyleContent = stylesheet ? stylesheet.cssText : '';
    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];
    var resolvedStyleText = resolveThemableArray(styleArray);
    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {
        lastStyleElement = document.createElement('style');
        lastStyleElement.type = 'text/css';
        if (styleRecord) {
            head.replaceChild(lastStyleElement, styleRecord.styleElement);
            styleRecord.styleElement = lastStyleElement;
        }
        else {
            head.appendChild(lastStyleElement);
        }
        if (!styleRecord) {
            lastRegisteredStyle = {
                styleElement: lastStyleElement,
                themableStyle: styleArray
            };
            registeredStyles.push(lastRegisteredStyle);
        }
    }
    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);
    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place
    // Preserve the theme state.
    _themeState.lastStyleElement = lastStyleElement;
}
/**
 * Checks to see if styleSheet exists as a property off of a style element.
 * This will determine if style registration should be done via cssText (<= IE9) or not
 */
function shouldUseCssText() {
    var useCSSText = false;
    if (typeof document !== 'undefined') {
        var emptyStyle = document.createElement('style');
        emptyStyle.type = 'text/css';
        useCSSText = !!emptyStyle.styleSheet;
    }
    return useCSSText;
}


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37)))

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(0);
var decorators_1 = __webpack_require__(13);
var sp_core_library_1 = __webpack_require__(1);
var SuiteNavManagerConfiguration_1 = __webpack_require__(33);
var ApplicationCustomizerLoader_1 = __webpack_require__(24);
var BaseApplication = (function () {
    function BaseApplication() {
        this._shell = undefined;
        this._domElement = undefined;
        this._applicationCustomizerLoader = undefined;
        this['__type'] = 'BaseApplication';
    }
    Object.defineProperty(BaseApplication.prototype, "shell", {
        get: function () {
            return this._shell;
        },
        set: function (value) {
            throw new Error('The property cannot be assigned because it is read-only');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseApplication.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        set: function (value) {
            throw new Error('The property cannot be assigned because it is read-only');
        },
        enumerable: true,
        configurable: true
    });
    BaseApplication.prototype._load = function (shell) {
        this._shell = shell;
        this.onLoad();
    };
    BaseApplication.prototype.onLoad = function () {
    };
    BaseApplication.prototype._render = function (domElement) {
        this._domElement = domElement;
        this.onRender();
        if (this._shell.manifestPreloads.clientSideApplicationId !== BaseApplication.classicPagesComponentId
            && this._shell.manifestPreloads.clientSideApplicationId !== BaseApplication.workbenchComponentId) {
            this._loadApplicationCustomizers();
        }
    };
    BaseApplication.prototype.onRender = function () {
    };
    BaseApplication.prototype.getBrowserCompatibility = function () {
        return {
            supportLevel: sp_core_library_1.BrowserSupportLevel.None,
            warning: undefined
        };
    };
    BaseApplication.prototype.suiteNavConfiguration = function () {
        return new SuiteNavManagerConfiguration_1.default({
            currentUICultureName: this._shell.pageContext.cultureInfo.currentUICultureName,
            disableSuiteNav: this._shouldDisableSuiteNav(),
            settingsData: this._shell.pageContext.legacyPageContext.MenuData ?
                this._shell.pageContext.legacyPageContext.MenuData.SettingsData :
                undefined,
            signoutUrl: this._shell.pageContext.legacyPageContext.MenuData ?
                this._shell.pageContext.legacyPageContext.MenuData.SignOutUrl :
                undefined,
            siteClientTag: this._shell.pageContext.legacyPageContext.siteClientTag,
            systemUserKey: this._shell.pageContext.legacyPageContext.systemUserKey,
            webServerRelativeUrl: this._shell.pageContext.web.serverRelativeUrl
        });
    };
    BaseApplication.prototype._shouldDisableSuiteNav = function () {
        var urlQueryParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        return window.location.hostname === 'localhost' ||
            urlQueryParams.getValue('disableSuiteNav') === 'true' ?
            true :
            false;
    };
    BaseApplication.prototype._loadApplicationCustomizers = function () {
        if (true) {
            this._applicationCustomizerLoader =
                new ApplicationCustomizerLoader_1.default(this.shell.serviceScope, this.shell.pageContext, this.shell.spHttpClient, this.shell.manifestPreloads.customActions);
            this._applicationCustomizerLoader.loadExtensions();
            this._applicationCustomizerLoader.notifyRendered();
        }
        else {
            sp_telemetry_1._TraceLogger.logVerbose(BaseApplication.logSource, 'Application Customizer is not supported for OnPrem and local workbench.');
        }
    };
    return BaseApplication;
}());
BaseApplication.classicPagesComponentId = 'eb4b666b-5c29-4dad-9a99-23613f21a2b7';
BaseApplication.workbenchComponentId = '8be81a5c-af38-4bb2-af97-afa3b64dfbed';
BaseApplication.logSource = sp_telemetry_1._LogSource.create('BaseApplication');
__decorate([
    decorators_1.virtual
], BaseApplication.prototype, "getBrowserCompatibility", null);
exports.default = BaseApplication;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Shell_1 = __webpack_require__(29);
var _spShell = Shell_1.default.getInstance();
exports.default = _spShell;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(22)();
// imports


// module
exports.push([module.i, "body{height:100vh;margin:0;padding:0}.SPPageChrome{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%}#SuiteNavPlaceHolder{background-color:#333;width:100%;z-index:5}#SuiteNavPlaceHolder:empty{display:none}.SPPageChrome-app,.SPPageChrome-app>div{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:100%}.SPPageChromeNoFlexbox-app{position:absolute;right:0;bottom:0;left:0;overflow:visible}.spAppAndPropertyPanelContainer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;height:100%}.spPropertyPaneContainer{width:0;position:relative;z-index:999}.spPropertyPaneContainer button{display:none}.spPropertyPaneContainerNoFlexbox{top:50px;position:fixed;right:-340px;bottom:0;z-index:999}.spPageContentTransition_8e515d1a{transition:width 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:width 367ms cubic-bezier(.1,.9,.2,1)}", ""]);

// exports


/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_20__;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(19);
var loader = __webpack_require__(16);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(0);
var SPGlobalErrorHandler = (function () {
    function SPGlobalErrorHandler() {
    }
    SPGlobalErrorHandler.basicTracingHandler = function (message, filename, lineno, colno, error) {
        var eventName = 'window.onerror';
        if (SPGlobalErrorHandler._isFromFile(filename, 'QUILL')) {
            SPGlobalErrorHandler._logErrorFromFile(message, lineno, colno, error, eventName, SPGlobalErrorHandler._quillLogSource);
        }
        else if (SPGlobalErrorHandler._isFromFile(filename, 'CKEDITOR')) {
            SPGlobalErrorHandler._logErrorFromFile(message, lineno, colno, error, eventName, SPGlobalErrorHandler._ckLogSource);
        }
        else {
            var genericError = error ||
                new Error("Error:" + message + ", file:" + filename + ", line:" + lineno + ", column:" + colno);
            sp_telemetry_1._TraceLogger.logError(SPGlobalErrorHandler._genericLogSource, genericError, eventName);
        }
    };
    SPGlobalErrorHandler._isFromFile = function (filename, match) {
        return filename && filename.toUpperCase().indexOf(match) !== -1;
    };
    SPGlobalErrorHandler._logErrorFromFile = function (message, lineno, colno, error, eventName, logSource) {
        var fileError = error ||
            new Error("Error:" + message + ", line:" + lineno + ", column:" + colno);
        sp_telemetry_1._TraceLogger.logError(logSource, fileError, eventName);
    };
    return SPGlobalErrorHandler;
}());
SPGlobalErrorHandler._quillLogSource = sp_telemetry_1._LogSource.create('QuillGlobalError');
SPGlobalErrorHandler._ckLogSource = sp_telemetry_1._LogSource.create('CKGlobalError');
SPGlobalErrorHandler._genericLogSource = sp_telemetry_1._LogSource.create('OtherGlobalError');
exports.default = SPGlobalErrorHandler;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(1);
var sp_extension_base_1 = __webpack_require__(6);
var BaseApplicationCustomizer_1 = __webpack_require__(9);
var ApplicationCustomizerContext_1 = __webpack_require__(8);
var ClientSideCustomAction_1 = __webpack_require__(25);
var PlaceholderManager_1 = __webpack_require__(5);
var ApplicationCustomizerLoader = (function () {
    function ApplicationCustomizerLoader(serviceScope, pageContext, spHttpClient, customActions) {
        var _this = this;
        this._customActionContext = new ClientSideCustomAction_1.ClientSideCustomActionContext();
        sp_core_library_1.Validate.isNotNullOrUndefined(serviceScope, 'serviceScope');
        sp_core_library_1.Validate.isNotNullOrUndefined(pageContext, 'pageContext');
        sp_core_library_1.Validate.isNotNullOrUndefined(spHttpClient, 'spHttpClient');
        this._extensionManager = new sp_extension_base_1._ExtensionManager(serviceScope, BaseApplicationCustomizer_1.default);
        this._pageContext = pageContext;
        this._spHttpClient = spHttpClient;
        this._customActions = customActions ? customActions : [];
        for (var _i = 0, _a = this._customActions; _i < _a.length; _i++) {
            var customAction = _a[_i];
            if (customAction.location === ClientSideCustomAction_1.CustomActionLocations.APPLICATION_CUSTOMIZER) {
                var clientSideCustomAction = ClientSideCustomAction_1.default._tryCreateFromPreloadedCustomAction(customAction);
                if (clientSideCustomAction) {
                    this._customActionContext.customActions.push(clientSideCustomAction);
                }
            }
        }
        serviceScope.whenFinished(function () {
            _this._placeholderManager = serviceScope.consume(PlaceholderManager_1.default.serviceKey);
        });
    }
    ApplicationCustomizerLoader.prototype.loadExtensions = function () {
        this._parseCustomActionsQueryParameter();
        var customActions = this._customActionContext.getAll();
        for (var _i = 0, customActions_1 = customActions; _i < customActions_1.length; _i++) {
            var customAction = customActions_1[_i];
            if (customAction.location === ClientSideCustomAction_1.CustomActionLocations.APPLICATION_CUSTOMIZER) {
                this._createApplicationCustomizer(customAction);
            }
        }
    };
    ApplicationCustomizerLoader.prototype.notifyRendered = function () {
        this._extensionManager.waitForInitialization()
            .then(function (extensions) {
            for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {
                var extension = extensions_1[_i];
                try {
                    extension.onRender();
                }
                catch (error) {
                    var manifest = extension.context.manifest;
                    sp_telemetry_1._TraceLogger.logError(ApplicationCustomizerLoader._logSource, new Error("The onRender() API threw an exception for application customizer '" + manifest.alias + "'. Error information is '" + error.message + ".")); 
                }
            }
        });
    };
    ApplicationCustomizerLoader.prototype._createApplicationCustomizer = function (customAction) {
        this._extensionManager.createExtension(customAction.clientSideComponentId.toString(), customAction.clientSideComponentProperties, function (extensionContextParameters) {
            return new ApplicationCustomizerContext_1.default(extensionContextParameters, {});
        }).catch(function (error) {
            sp_telemetry_1._TraceLogger.logError(ApplicationCustomizerLoader._logSource, new Error("Failed to create application customizer '" + customAction.tag + "'. Error information is '" + error.message + "'.")); 
        });
    };
    ApplicationCustomizerLoader.prototype._parseCustomActionsQueryParameter = function () {
        var parameters = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        var parameterValue = parameters.getValue('customActions');
        if (parameterValue) {
            try {
                var decodedParameterValue = decodeURIComponent(parameterValue);
                var queryValue = JSON.parse(decodedParameterValue);
                if (queryValue) {
                    for (var _i = 0, _a = Object.keys(queryValue); _i < _a.length; _i++) {
                        var key = _a[_i];
                        var clientSideComponentId = sp_core_library_1.Guid.tryParse(key);
                        var location_1 = queryValue[key].location;
                        var properties = queryValue[key].properties;
                        this._customActionContext.debugCustomActions.push(ClientSideCustomAction_1.default._tryCreateFromDebugData(location_1, clientSideComponentId, properties ? JSON.stringify(properties) : ''));
                    }
                }
            }
            catch (e) {
                sp_telemetry_1._TraceLogger.logError(ApplicationCustomizerLoader._logSource, new Error('Failed to parse the "customActions" URL query parameter:' + e.message));
                console.error('The "customActions" URL query parameter is improperly formatted: '
                    + decodeURIComponent(parameterValue));
            }
        }
    };
    return ApplicationCustomizerLoader;
}());
ApplicationCustomizerLoader._logSource = sp_telemetry_1._LogSource.create('ApplicationCustomizerLoader');
exports.default = ApplicationCustomizerLoader;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(0);
var sp_page_context_1 = __webpack_require__(3);
var sp_core_library_1 = __webpack_require__(1);
var ClientSideCustomAction = (function () {
    function ClientSideCustomAction() {
    }
    ClientSideCustomAction._tryCreateFromPreloadedCustomAction = function (customAction) {
        var typedCustomAction = undefined;
        try {
            typedCustomAction = new ClientSideCustomAction();
            sp_core_library_1.Validate.isNonemptyString(customAction.clientSideComponentId, 'customAction.clientSideComponentId');
            sp_core_library_1.Validate.isNonemptyString(customAction.location, 'customAction.location');
            typedCustomAction.title = customAction.title;
            typedCustomAction.location = customAction.location;
            typedCustomAction.clientSideComponentId = sp_core_library_1.Guid.parse(customAction.clientSideComponentId);
            typedCustomAction.clientSideComponentProperties = customAction.clientSideComponentProperties;
            typedCustomAction.registrationType = customAction.registrationType;
            typedCustomAction.registrationId = customAction.registrationId;
            typedCustomAction.sequence = customAction.sequence;
            typedCustomAction.requireSiteAdministrator = customAction.requireSiteAdministrator;
            var rights = customAction.rights;
            if (rights && rights.High !== undefined && rights.Low !== undefined) {
                typedCustomAction.rights = new sp_page_context_1.SPPermission(customAction.rights);
            }
            else {
                sp_telemetry_1._TraceLogger.logVerbose(ClientSideCustomAction._logSource, "The rights object has invalid format. One of High or Low fields cannot be undefined. Object value is '" + JSON.stringify(rights)); 
            }
        }
        catch (error) {
            sp_telemetry_1._TraceLogger.logError(ClientSideCustomAction._logSource, new Error("Failed to create client side custom action. Error information is " + error.message)); 
        }
        return typedCustomAction;
    };
    ClientSideCustomAction._tryCreateFromDebugData = function (location, clientSideComponentId, clientSideComponentProperties) {
        sp_core_library_1.Validate.isNotNullOrUndefined(clientSideComponentId, 'clientSideComponentId');
        sp_core_library_1.Validate.isNonemptyString(location, 'location');
        var customAction = new ClientSideCustomAction();
        customAction.location = location;
        customAction.clientSideComponentId = clientSideComponentId;
        customAction.clientSideComponentProperties = clientSideComponentProperties;
        return customAction;
    };
    Object.defineProperty(ClientSideCustomAction.prototype, "tag", {
        get: function () {
            return this.location + "." + this.clientSideComponentId.toString();
        },
        enumerable: true,
        configurable: true
    });
    return ClientSideCustomAction;
}());
ClientSideCustomAction._logSource = sp_telemetry_1._LogSource.create('ClientSideCustomAction');
exports.default = ClientSideCustomAction;
var ClientSideCustomActionContext = (function () {
    function ClientSideCustomActionContext() {
        this.customActions = [];
        this.debugCustomActions = [];
    }
    ClientSideCustomActionContext.prototype.getAll = function () {
        return this.debugCustomActions.concat(this.customActions);
    };
    return ClientSideCustomActionContext;
}());
exports.ClientSideCustomActionContext = ClientSideCustomActionContext;
var CustomActionLocations = (function () {
    function CustomActionLocations() {
    }
    return CustomActionLocations;
}());
CustomActionLocations.APPLICATION_CUSTOMIZER = 'ClientSideExtension.ApplicationCustomizer';
CustomActionLocations.LISTVIEW_COMMANDSET_CONTEXTMENU = 'ClientSideExtension.ListViewCommandSet.ContextMenu';
CustomActionLocations.LISTVIEW_COMMANDSET_COMMANDBAR = 'ClientSideExtension.ListViewCommandSet.CommandBar';
CustomActionLocations.LISTVIEW_COMMANDSET_DEFAULT = 'ClientSideExtension.ListViewCommandSet';
exports.CustomActionLocations = CustomActionLocations;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(21);
var styles = {
    spPageContentTransition: 'spPageContentTransition_8e515d1a',
};
exports.default = styles;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var odsp_utilities_bundle_1 = __webpack_require__(4);
var odsp_utilities_bundle_2 = __webpack_require__(4);
var odsp_utilities_bundle_3 = __webpack_require__(4);
var sp_telemetry_1 = __webpack_require__(0);
var sp_http_1 = __webpack_require__(2);
var sp_page_context_1 = __webpack_require__(3);
var SPWebTemplateIds_1 = __webpack_require__(28);
var load_themed_styles_1 = __webpack_require__(16);
var SPThemeProvider = (function () {
    function SPThemeProvider(serviceScope) {
        var _this = this;
        if (true) {
            window['__loadTheme'] = load_themed_styles_1.loadTheme; 
        }
        serviceScope.whenFinished(function () {
            _this._pageContext = serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
            _this._httpClient = serviceScope.consume(sp_http_1.SPHttpClient.serviceKey);
            _this._themeProvider = new odsp_utilities_bundle_3.ThemeProvider(_this.loadData.bind(_this));
            try {
                var contextUri = new odsp_utilities_bundle_3.Uri(window.location.href);
                _this._themeOverride = contextUri.getQueryParameter('ThemeOverride');
            }
            catch (ignoredUrlException) {
            }
        });
    }
    SPThemeProvider.prototype.loadThemedStyles = function () {
        var cacheToken = this.getCacheToken();
        this._themeProvider.loadThemeTokenMap(cacheToken)
            .then(function (palette) {
            load_themed_styles_1.loadTheme(palette);
        });
    };
    SPThemeProvider.prototype.loadData = function () {
        var _this = this;
        var tagName = 'SPThemeProvider.loadData';
        var qosMonitor = new sp_telemetry_1._QosMonitor(tagName);
        if (this._pageContext.legacyPageContext.themedCssFolderUrl) {
            var getThemeDataUrl_1 = odsp_utilities_bundle_3.WebTheme.makeWebThemeRestUrl(this._pageContext.site.serverRelativeUrl, this._pageContext.cultureInfo.currentUICultureName, this._themeOverride);
            return new odsp_utilities_bundle_1.Promise(function (resolve, reject) {
                _this._httpClient.get(getThemeDataUrl_1, sp_http_1.SPHttpClient.configurations.v1)
                    .then(function (response) {
                    if (response.status === 200) {
                        return response.json()
                            .then(function (json) {
                            var themeDataRaw = JSON.parse(json.value);
                            if (themeDataRaw) {
                                var themeData = odsp_utilities_bundle_3.WebTheme.processRawThemeData(themeDataRaw);
                                themeData.cacheToken = _this._pageContext.legacyPageContext.themedCssFolderUrl;
                                qosMonitor.writeSuccess();
                                resolve(themeData);
                            }
                            else {
                                qosMonitor.writeUnexpectedFailure();
                                resolve(undefined);
                            }
                        });
                    }
                    else {
                        qosMonitor.writeUnexpectedFailure(tagName, new Error(response.statusText));
                        resolve(undefined);
                    }
                });
            });
        }
        else if (this._pageContext.legacyPageContext.groupColor) {
            var htmlThemeColor = this._pageContext.legacyPageContext.groupColor;
            var rgbaThemeColor = odsp_utilities_bundle_2.RgbaColor.fromHtmlColor(htmlThemeColor);
            if (rgbaThemeColor) {
                var fabTheme = {
                    backgroundImageUri: undefined,
                    cacheToken: this.getCacheToken(),
                    isDefault: false,
                    isInverted: false,
                    palette: odsp_utilities_bundle_2.FabricTheming.generateFabricColors(rgbaThemeColor),
                    version: '1'
                };
                return odsp_utilities_bundle_1.Promise.wrap(fabTheme);
            }
            else {
                return odsp_utilities_bundle_1.Promise.wrap();
            }
        }
        else {
            qosMonitor.writeSuccess();
            return odsp_utilities_bundle_1.Promise.wrap(this.createDefaultTheme());
        }
    };
    SPThemeProvider.prototype.createDefaultTheme = function () {
        var themeData = {
            backgroundImageUri: undefined,
            cacheToken: undefined,
            isDefault: undefined,
            isInverted: false,
            palette: undefined,
            version: '1.0'
        };
        return themeData;
    };
    SPThemeProvider.prototype.getCacheToken = function () {
        var webTemplate = String(this._pageContext.web.templateName);
        var groupColor = webTemplate === SPWebTemplateIds_1.default.teamSite ||
            webTemplate === SPWebTemplateIds_1.default.groupSite ? this._pageContext.legacyPageContext.groupColor : undefined;
        var groupColorToken = groupColor && (groupColor + ';web#' + webTemplate);
        return this._themeOverride || this._pageContext.legacyPageContext.themedCssFolderUrl || groupColorToken;
    };
    return SPThemeProvider;
}());
exports.default = SPThemeProvider;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SPWebTemplateIds = (function () {
    function SPWebTemplateIds() {
    }
    return SPWebTemplateIds;
}());
SPWebTemplateIds.teamSite = '1';
SPWebTemplateIds.groupSite = '64';
exports.default = SPWebTemplateIds;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(1);
var sp_page_context_1 = __webpack_require__(3);
var sp_http_1 = __webpack_require__(2);
var SuiteNavManager_1 = __webpack_require__(15);
var SPPageChrome_1 = __webpack_require__(14);
var Shell = (function () {
    function Shell() {
    }
    Shell.getInstance = function () {
        if (Shell._instance === undefined) {
            Shell._instance = new Shell();
        }
        return Shell._instance;
    };
    Object.defineProperty(Shell.prototype, "serviceScope", {
        get: function () {
            return this._rootServiceScope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "pageContext", {
        get: function () {
            return this._pageContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "httpClient", {
        get: function () {
            return this._httpClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "spHttpClient", {
        get: function () {
            return this._spHttpClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "suiteNavManager", {
        get: function () {
            return this._suiteNav;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "environment", {
        get: function () {
            return this._environment;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "manifestPreloads", {
        get: function () {
            return this._manifestPreloads;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "pageManager", {
        get: function () {
            return this._pageManager;
        },
        enumerable: true,
        configurable: true
    });
    Shell.prototype.start = function (module, preloadedData) {
        var application = module.default ||
            module;
        this._initializePreload(preloadedData, application);
        sp_telemetry_1._PerformanceLogger.markApplicationStart();
        return this._startApplication(application, preloadedData);
    };
    Shell.prototype._startApplication = function (application, preloadedData) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (application['__type'] !== 'BaseApplication') {
                reject(new Error('The application is not a subclass of BaseApplication'));
                return;
            }
            var qosMonitor = new sp_telemetry_1._QosMonitor('ClientApplication');
            var qosApplicationData = {
                alias: application.alias || preloadedData.manifests[0].alias,
                isInternal: preloadedData.manifests[0].isInternal,
                manifestId: preloadedData.manifests[0].id
            };
            try {
                _this._application = application;
                _this._application._load(_this);
                if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint) {
                    _this._spPageChrome = SPPageChrome_1.default.getInstance(_this._rootServiceScope);
                    _this._suiteNav = new SuiteNavManager_1.default(_this._application.suiteNavConfiguration(), _this._spPageChrome.suiteNavDiv, _this.serviceScope);
                    if (!_this._application.suiteNavConfiguration().isSuiteNavDisabled()) {
                        _this.suiteNavManager.loadSuiteNav();
                    }
                    _this._application._render(_this._spPageChrome.appDiv);
                }
                qosMonitor.writeSuccess(qosApplicationData);
                resolve(_this._application);
            }
            catch (e) {
                qosMonitor.writeUnexpectedFailure('GeneralError', e, qosApplicationData);
                reject(e);
            }
        });
    };
    Shell.prototype._initializePreload = function (preloadedData, application) {
        sp_telemetry_1._TraceLogger.logVerbose(Shell._logSource, 'Starting sp-client-preview');
        this._rootServiceScope = sp_core_library_1.ServiceScope.startNewRoot();
        this._rootServiceScope.provide(sp_telemetry_1._logSourceServiceKey, Shell._logSource);
        this._pageManager = this._rootServiceScope
            .createDefaultAndProvide(sp_page_context_1.PageManager.serviceKey);
        this._pageContext = this._rootServiceScope
            .createDefaultAndProvide(sp_page_context_1.PageContext.serviceKey);
        this._httpClient = this._rootServiceScope.createAndProvide(sp_http_1.HttpClient.serviceKey, sp_http_1.HttpClient);
        this._spHttpClient = this._rootServiceScope.createAndProvide(sp_http_1.SPHttpClient.serviceKey, sp_http_1.SPHttpClient);
        var graphContext;
        if (true) {
            this._rootServiceScope.createAndProvide(sp_http_1.GraphHttpClient.serviceKey, sp_http_1.GraphHttpClient);
            graphContext = this._rootServiceScope.createAndProvide(sp_http_1._GraphHttpClientContext.serviceKey, sp_http_1._GraphHttpClientContext);
        }
        this._rootServiceScope.finish();
        var INVALID_PAGE_ITEM_ID = -1;
        if (preloadedData.spPageContextInfo.pageItemId === INVALID_PAGE_ITEM_ID &&
            preloadedData.item &&
            preloadedData.item.ID !== INVALID_PAGE_ITEM_ID) {
            preloadedData.spPageContextInfo.pageItemId = preloadedData.item.ID;
        }
        this._pageManager.navigateToPage(preloadedData.spPageContextInfo.webServerRelativeUrl, 
        sp_page_context_1.SharePointPageContextDataProvider._createPageContextData(preloadedData.spPageContextInfo), 
        preloadedData.spPageContextInfo);
        if (true) {
            graphContext.initialize(this._pageManager.pageContext.web.serverRelativeUrl);
        }
        this._initializeDigestCache(this._rootServiceScope, preloadedData);
        this._manifestPreloads = preloadedData;
        this._manifestPreloads.spPageContextInfo = undefined;
    };
    Shell.prototype._initializeDigestCache = function (serviceScope, preloadedData) {
        if (preloadedData.contextWebInfo && preloadedData.spPageContextInfo) {
            serviceScope.whenFinished(function () {
                var digestCache = serviceScope.consume(sp_http_1.DigestCache.serviceKey);
                sp_telemetry_1._TraceLogger.logVerbose(Shell._logSource, 'Shell: Added preloaded FormDigestValue to cache');
                var expirationTimestamp = performance.now()
                    + 1000 * preloadedData.contextWebInfo.FormDigestTimeoutSeconds;
                digestCache.addDigestToCache(preloadedData.spPageContextInfo.webServerRelativeUrl, preloadedData.contextWebInfo.FormDigestValue, expirationTimestamp);
                digestCache.addDigestToCache(preloadedData.spPageContextInfo.webAbsoluteUrl, preloadedData.contextWebInfo.FormDigestValue, expirationTimestamp);
            });
        }
    };
    return Shell;
}());
Shell._logSource = sp_telemetry_1._LogSource.create('Shell');
Shell._instance = undefined;
exports.default = Shell;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(0);
var FlexPaneWrapper = (function () {
    function FlexPaneWrapper() {
    }
    FlexPaneWrapper.prototype.OnFlexPaneVisibilityChanged = function (callback) {
        try {
            return O365Shell.FlexPane.OnFlexPaneVisibilityChanged(callback);
        }
        catch (e) {
            this._createFlexPaneWrapperErrorLogEntry('OnFlexPaneVisibilityChanged', e);
        }
    };
    FlexPaneWrapper.prototype.OpenFlexPaneForProvider = function (provider) {
        try {
            O365Shell.FlexPane.OpenFlexPaneForProvider(provider);
        }
        catch (e) {
            this._createFlexPaneWrapperErrorLogEntry('OpenFlexPaneForProvider', e);
        }
    };
    FlexPaneWrapper.prototype._createFlexPaneWrapperErrorLogEntry = function (moduleName, errorMessage) {
        sp_telemetry_1._TraceLogger.logVerbose(FlexPaneWrapper.logSource, 'FlexPaneWrapper ' + moduleName + ' ' + errorMessage);
    };
    return FlexPaneWrapper;
}());
FlexPaneWrapper.logSource = sp_telemetry_1._LogSource.create('FlexPaneWrapper');
exports.default = FlexPaneWrapper;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var NavigationWrapper = (function () {
    function NavigationWrapper() {
    }
    NavigationWrapper.prototype.OnLinkClick = function (callback) {
        return O365Shell.Navigation.OnLinkClick(callback);
    };
    NavigationWrapper.prototype.OnHamburgerButtonClick = function (callback) {
        return O365Shell.Navigation.OnHamburgerButtonClick(callback);
    };
    return NavigationWrapper;
}());
exports.default = NavigationWrapper;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FlexPaneWrapper_1 = __webpack_require__(30);
var NavigationWrapper_1 = __webpack_require__(31);
var O365ShellWrapper = (function () {
    function O365ShellWrapper() {
        this._postRenderSignal = new Promise(function () {
            return;
        });
        this.FlexPane = new FlexPaneWrapper_1.default();
        this.Navigation = new NavigationWrapper_1.default();
    }
    O365ShellWrapper.prototype.SetData = function (shellData) {
        O365Shell.SetData(shellData);
    };
    O365ShellWrapper.prototype.Render = function (renderSettings, postRendercallback) {
        O365Shell.Render(renderSettings, postRendercallback);
    };
    O365ShellWrapper.prototype.RenderAsync = function (renderSettings, renderCallback, postRenderCallback) {
        O365Shell.RenderAsync(renderSettings, renderCallback, postRenderCallback);
    };
    O365ShellWrapper.prototype.LoadShellPlus = function () {
        O365Shell.LoadShellPlus();
    };
    O365ShellWrapper.prototype.DoesShellExist = function () {
        return typeof O365Shell !== 'undefined';
    };
    O365ShellWrapper.prototype.OnHasMember = function (memberName, callback) {
        var _this = this;
        if (this._hasMember(memberName)) {
            callback();
        }
        else {
            this._postRenderSignal.then(function () { return _this.OnHasMember(memberName, callback); });
        }
    };
    O365ShellWrapper.prototype._hasMember = function (memberName) {
        return this.DoesShellExist() && Boolean(O365Shell[memberName]);
    };
    return O365ShellWrapper;
}());
exports.default = O365ShellWrapper;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavLinkIds_1 = __webpack_require__(36);
var SuiteNavManagerConfiguration = (function () {
    function SuiteNavManagerConfiguration(suiteNavConfig) {
        this._currentUICultureName = suiteNavConfig.currentUICultureName;
        this._settingsLinks = suiteNavConfig.settingsData;
        this._signoutUrl = suiteNavConfig.signoutUrl;
        this._siteClientTag = suiteNavConfig.siteClientTag;
        this._systemUserKey = suiteNavConfig.systemUserKey;
        this._webServerRelativeUrl = suiteNavConfig.webServerRelativeUrl;
        this._isSuiteNavDisabled = suiteNavConfig.disableSuiteNav ? true : false;
        this._o365ShellRenderSettings = {
            disableDelayLoad: false,
            disableShellPlus: false,
            layout: 'Mouse',
            top: undefined
        };
        this._hamburgerMenuCallback = undefined;
        this._suiteNavPostRenderCallback = undefined;
    }
    SuiteNavManagerConfiguration.prototype.isSuiteNavDisabled = function () {
        return this._isSuiteNavDisabled;
    };
    SuiteNavManagerConfiguration.prototype.disableSuiteNav = function () {
        this._isSuiteNavDisabled = true;
    };
    SuiteNavManagerConfiguration.prototype.modifySuiteNavData = function (suiteNavData) {
        suiteNavData.CurrentMainLinkElementID = SuiteNavLinkIds_1.default.SITES;
        suiteNavData.CurrentWorkloadSettingsSubLinks =
            this._settingsLinks && this._settingsLinks.length > 0 ? this._settingsLinks : undefined;
        suiteNavData.FeedbackLink = undefined;
        if (suiteNavData.SignOutLink) {
            suiteNavData.SignOutLink.Url = this._signoutUrl;
        }
        if (suiteNavData.HelpLink) {
            suiteNavData.HelpLink.Url = 'https://go.microsoft.com/fwlink/p/?linkid=827181';
        }
        return suiteNavData;
    };
    ;
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "systemUserKey", {
        get: function () {
            return this._systemUserKey || '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "cacheToken", {
        get: function () {
            var clientTag = this._siteClientTag;
            if (clientTag !== undefined) {
                return clientTag.substring(0, clientTag.indexOf('$$'));
            }
            return '';
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "o365ShellRenderSettings", {
        get: function () {
            return this._o365ShellRenderSettings;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "currentUICultureName", {
        get: function () {
            return this._currentUICultureName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "webServerRelativeUrl", {
        get: function () {
            return this._webServerRelativeUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "hamburgerCallback", {
        get: function () {
            return this._hamburgerMenuCallback;
        },
        set: function (hamburgerCallback) {
            this._hamburgerMenuCallback = hamburgerCallback;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "suiteNavPostRenderCallback", {
        get: function () {
            return this._suiteNavPostRenderCallback;
        },
        set: function (suiteNavPostRenderCallback) {
            this._suiteNavPostRenderCallback = suiteNavPostRenderCallback;
        },
        enumerable: true,
        configurable: true
    });
    return SuiteNavManagerConfiguration;
}());
exports.default = SuiteNavManagerConfiguration;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavManager_1 = __webpack_require__(15);
var ISuiteNavDataSource_1 = __webpack_require__(7);
var sp_telemetry_1 = __webpack_require__(0);
var sp_http_1 = __webpack_require__(2);
var OnPremSuiteNavDataSource = (function () {
    function OnPremSuiteNavDataSource(httpClient, currentUICultureName, webServerRelativeUrl) {
        this.suiteNavService = ISuiteNavDataSource_1.SuiteNavSource.OnPrem;
        this._currentUICultureName = currentUICultureName;
        this._spHttpClient = httpClient;
        this._siteRelUrl = webServerRelativeUrl === '/' ? '' : webServerRelativeUrl;
    }
    OnPremSuiteNavDataSource.prototype.loadData = function () {
        var _this = this;
        var url = this._siteRelUrl
            + '/_api/Microsoft.SharePoint.Portal.SuiteNavData.GetSuiteNavData?v=2&Locale='
            + this._currentUICultureName;
        return this._spHttpClient.get(url, sp_http_1.SPHttpClient.configurations.v1)
            .then(function (response) {
            if (response.status !== 200) {
                _this._logAndThrowSuiteNavLoadingError();
            }
            return response.json().then(function (jsonString) {
                if (jsonString.value === '') {
                    _this._logAndThrowSuiteNavLoadingError();
                }
                else {
                    var suiteNavResponse = JSON.parse(jsonString.value);
                    if (!suiteNavResponse.NavBarData.Dimensions) {
                        suiteNavResponse.NavBarData.Dimensions = { Top: SuiteNavManager_1.default._defaultSuiteNavHeight };
                    }
                    return suiteNavResponse;
                }
            });
        });
    };
    OnPremSuiteNavDataSource.prototype._logAndThrowSuiteNavLoadingError = function () {
        sp_telemetry_1._TraceLogger.logVerbose(OnPremSuiteNavDataSource._logSource, 'Failed to retrieve Hybrid SuiteNavData');
        throw new Error('Failed to retrieve Hybrid SuiteNavData');
    };
    return OnPremSuiteNavDataSource;
}());
OnPremSuiteNavDataSource._logSource = sp_telemetry_1._LogSource.create('OnPremSuiteNavDataSource');
exports.default = OnPremSuiteNavDataSource;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ISuiteNavDataSource_1 = __webpack_require__(7);
var sp_telemetry_1 = __webpack_require__(0);
var sp_http_1 = __webpack_require__(2);
var SPOSuiteNavDataSource = (function () {
    function SPOSuiteNavDataSource(httpClient, currentUICultureName, webServerRelativeUrl) {
        this.suiteNavService = ISuiteNavDataSource_1.SuiteNavSource.SPO;
        this._currentUICultureName = currentUICultureName;
        this._spHttpClient = httpClient;
        this._siteRelUrl = webServerRelativeUrl === '/' ? '' : webServerRelativeUrl;
    }
    SPOSuiteNavDataSource.prototype.loadData = function () {
        var url = this._siteRelUrl
            + '/_layouts/15/online/handlers/SpoSuiteLinks.ashx?Locale='
            + this._currentUICultureName
            + '&v=2&mobilereq=0&msajax=1';
        return this._spHttpClient.post(url, sp_http_1.SPHttpClient.configurations.v1, {})
            .then(function (response) {
            if (response.status !== 200 || response.headers.get('SharePointError')) {
                sp_telemetry_1._TraceLogger.logVerbose(SPOSuiteNavDataSource._logSource, 'Failed to retrieve SPO SuiteNavData');
                return Promise.reject('Failed to retrieve SPO SuiteNavData');
            }
            return response.json().then(function (jsonResponse) {
                return jsonResponse;
            });
        });
    };
    return SPOSuiteNavDataSource;
}());
SPOSuiteNavDataSource._logSource = sp_telemetry_1._LogSource.create('SPOSuiteNavDataSource');
exports.default = SPOSuiteNavDataSource;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavLinkIds = (function () {
    function SuiteNavLinkIds() {
    }
    return SuiteNavLinkIds;
}());
SuiteNavLinkIds.CUSTOM_SETTINGS_1 = 'WorkloadSettingsSubLinks1';
SuiteNavLinkIds.CUSTOM_SETTINGS_2 = 'WorkloadSettingsSubLinks2';
SuiteNavLinkIds.CUSTOM_SETTINGS_3 = 'WorkloadSettingsSubLinks3';
SuiteNavLinkIds.FEEDBACK = 'ShellFeedback';
SuiteNavLinkIds.DIAGNOSTICS = 'Diagnostics';
SuiteNavLinkIds.O365_SETTINGS = 'ShellO365Settings'; 
SuiteNavLinkIds.ADD_APP = 'SuiteMenu_zz5_MenuItemCreate'; 
SuiteNavLinkIds.CREATE_PAGE = 'SuiteMenu_MenuItemCreatePage'; 
SuiteNavLinkIds.SITE_CONTENTS = 'SuiteMenu_zz6_MenuItem_ViewAllSiteContents'; 
SuiteNavLinkIds.SITE_SETTINGS = 'SuiteMenu_zz7_MenuItem_Settings'; 
SuiteNavLinkIds.USER_ACTIVITY = 'UserActivity'; 
SuiteNavLinkIds.ABOUT_ME = 'ShellAboutMe'; 
SuiteNavLinkIds.SETTINGS = 'ShellSettings'; 
SuiteNavLinkIds.MY_SETTINGS = 'SuiteMenu_zz2_ID_PersonalInformation'; 
SuiteNavLinkIds.SIGN_OUT = 'ShellSignout';
SuiteNavLinkIds.HELP = 'HelpLink';
SuiteNavLinkIds.COMMUNITY = 'ShellCommunity';
SuiteNavLinkIds.PRIVACY = 'ShellPrivacy';
SuiteNavLinkIds.LEGAL = 'ShellLegal';
SuiteNavLinkIds.MAIL = 'ShellMail'; 
SuiteNavLinkIds.CALENDAR = 'ShellCalendar';
SuiteNavLinkIds.PEOPLE = 'ShellPeople';
SuiteNavLinkIds.ONEDRIVE = 'ShellDocuments'; 
SuiteNavLinkIds.WORD = 'ShellWordOnline';
SuiteNavLinkIds.EXCEL = 'ShellExcelOnline';
SuiteNavLinkIds.POWERPOINT = 'ShellPowerPointOnline';
SuiteNavLinkIds.ONENOTE = 'ShellOneNoteOnline';
SuiteNavLinkIds.SITES = 'ShellSites';
SuiteNavLinkIds.YAMMER = 'ShellYammer';
SuiteNavLinkIds.TASKS = 'ShellTasks';
SuiteNavLinkIds.POWER_BI = 'ShellPowerBI';
SuiteNavLinkIds.DELVE = 'ShellOfficeGraph'; 
SuiteNavLinkIds.VIDEO = 'ShellVideo';
SuiteNavLinkIds.ALCHEMY = 'ShellAlchemy';
SuiteNavLinkIds.SMILE = 'ShellSendASmile';
exports.default = SuiteNavLinkIds;


/***/ }),
/* 37 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ApplicationCustomizerContext_1 = __webpack_require__(8);
exports.ApplicationCustomizerContext = ApplicationCustomizerContext_1.default;
var BaseApplicationCustomizer_1 = __webpack_require__(9);
exports.BaseApplicationCustomizer = BaseApplicationCustomizer_1.default;
var Placeholder_1 = __webpack_require__(11);
exports.Placeholder = Placeholder_1.default;
var PlaceholderCollection_1 = __webpack_require__(12);
exports.PlaceholderCollection = PlaceholderCollection_1.default;
var PlaceholderManager_1 = __webpack_require__(5);
exports._PlaceholderManager = PlaceholderManager_1.default;
var DialogManagerConfiguration_1 = __webpack_require__(10);
exports._DialogManagerConfiguration = DialogManagerConfiguration_1.default;
var _spShell_1 = __webpack_require__(18);
exports._spShell = _spShell_1.default;
var BaseApplication_1 = __webpack_require__(17);
exports.BaseApplication = BaseApplication_1.default;


/***/ })
/******/ ])});;
//# sourceMappingURL=sp-application-base.js.map