"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var Placeholder = (function () {
    function Placeholder(definition) {
        this._disposeHandler = undefined;
        sp_core_library_1.Validate.isNotNullOrUndefined(definition, 'definition');
        sp_core_library_1.Validate.isNonemptyString(definition.name, 'definition.name');
        sp_core_library_1.Validate.isNotNullOrUndefined(definition.domElement, 'definition.domElement');
        this._name = definition.name;
        this._parentElement = definition.domElement;
    }
    Object.defineProperty(Placeholder.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Placeholder.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    Placeholder.prototype._tryAttach = function (options) {
        if (this._domElement) {
            return false;
        }
        this._domElement = document.createElement('div');
        this._parentElement.appendChild(this._domElement);
        this._disposeHandler = options.onDispose;
        return true;
    };
    Placeholder.prototype.dispose = function () {
        if (this._domElement) {
            if (this._disposeHandler) {
                try {
                    this._disposeHandler(this);
                }
                catch (error) {
                    sp_telemetry_1._TraceLogger.logError(Placeholder._logSource, new Error("The onDispose API threw an exception for placeholder '" + this._name + "'. Error information is '" + error.message + "'")); 
                }
                this._disposeHandler = undefined;
            }
            this._parentElement.removeChild(this._domElement);
            this._domElement = undefined;
        }
    };
    return Placeholder;
}());
Placeholder._logSource = sp_telemetry_1._LogSource.create('Placeholder');
exports.default = Placeholder;
