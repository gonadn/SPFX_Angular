"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = require("@microsoft/sp-core-library");
var PlaceholderManager = (function () {
    function PlaceholderManager(serviceScope) {
        var _this = this;
        this._definitions = undefined;
        this.definitionsReadyPromise = new Promise(function (resolve, reject) {
            _this._resolveCallback = resolve;
        });
    }
    PlaceholderManager.prototype.registerPlaceholders = function () {
        var placeholderDivs = document.querySelectorAll("[" + PlaceholderManager.placeholderAttributeName + "]");
        var placeholderDefs = [];
        for (var i = 0; i < placeholderDivs.length; i++) {
            var div = placeholderDivs[i];
            if (div) {
                placeholderDefs.push({
                    name: div.getAttribute(PlaceholderManager.placeholderAttributeName),
                    domElement: div
                });
            }
        }
        this.initializePlaceholders(placeholderDefs);
    };
    PlaceholderManager.prototype.initializePlaceholders = function (definitions) {
        sp_core_library_1.Validate.isNotNullOrUndefined(definitions, 'definitions');
        if (this._definitions) {
            throw new Error('definePlaceholders() cannot be called more than once');
        }
        this._definitions = definitions;
        this._resolveCallback();
    };
    Object.defineProperty(PlaceholderManager.prototype, "definitions", {
        get: function () {
            return this._definitions;
        },
        enumerable: true,
        configurable: true
    });
    return PlaceholderManager;
}());
PlaceholderManager.serviceKey = sp_core_library_1.ServiceKey.create('sp-application-base:PlaceholderManager', PlaceholderManager);
PlaceholderManager.placeholderAttributeName = 'data-sp-placeholder';
exports.default = PlaceholderManager;
