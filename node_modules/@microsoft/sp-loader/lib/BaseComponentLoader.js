"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var SPApplicationLoader_1 = require("./SPApplicationLoader");
var debugManifestProvider_1 = require("./debug/debugManifestProvider");
var ManifestStore_1 = require("./stores/ManifestStore");
var telemetryConstants = require("./utilities/telemetryConstants");
var BaseComponentLoader = (function () {
    function BaseComponentLoader() {
        if (!BaseComponentLoader._headElement) {
            BaseComponentLoader._headElement = document.getElementsByTagName('head')[0];
        }
    }
    BaseComponentLoader.prototype.start = function (preloadedData) {
        return this._initialize(preloadedData, undefined).then(function () {
            return SPApplicationLoader_1.default.startApplication(preloadedData);
        }).catch(function (error) {
            sp_telemetry_1._TraceLogger.logError(telemetryConstants.startLogSource, error);
            throw error;
        });
    };
    BaseComponentLoader.prototype.loadComponentById = function (id, version) {
        sp_core_library_1.Validate.isNonemptyString(id, 'id');
        var parsedId = sp_core_library_1.Guid.parse(id).toString();
        var manifest = ManifestStore_1.default.instance.getManifest(parsedId, version);
        return this.loadComponent(manifest);
    };
    BaseComponentLoader.prototype.registerManifests = function (manifests) {
        ManifestStore_1.default.instance.registerManifests(manifests, false);
    };
    Object.defineProperty(BaseComponentLoader.prototype, "manifests", {
        get: function () {
            return ManifestStore_1.default.instance.getRegisteredManifests();
        },
        enumerable: true,
        configurable: true
    });
    BaseComponentLoader.prototype.loadCss = function (url) {
        sp_core_library_1.Validate.isNonemptyString(url, 'url');
        var linkTag = document.createElement('link');
        linkTag.rel = 'stylesheet';
        linkTag.type = 'text/css';
        linkTag.href = url;
        BaseComponentLoader._headElement.appendChild(linkTag);
    };
    BaseComponentLoader.prototype._forceLocalManifests = function () {
        return debugManifestProvider_1.loadDebugManifests(this, ['https://localhost:4321/temp/manifests.js', 'http://localhost:4321/temp/manifests.js'], 
 true, 
 true, 
 true, 
 true);
    };
    BaseComponentLoader.prototype.tryGetManifestById = function (id, version) {
        sp_core_library_1.Validate.isNonemptyString(id, 'id');
        var parsedId = sp_core_library_1.Guid.parse(id).toString();
        return ManifestStore_1.default.instance.tryGetManifest(parsedId, version);
    };
    return BaseComponentLoader;
}());
exports.BaseComponentLoader = BaseComponentLoader;
