import { IClientSideComponentManifest } from '@microsoft/sp-module-interfaces';
import { ISPComponentLoader, ILoadScriptOptions } from '../ISPComponentLoader';
import { BaseComponentLoader } from '../BaseComponentLoader';
import { IPreloadedData } from '../IPreloadedData';
/**
 * The component loader for SPFx.
 * This implementation uses RequireJS as the internal module loader.
 *
 * @alpha
 */
export default class SPRequireJsComponentLoader extends BaseComponentLoader implements ISPComponentLoader {
    private _requireJsLoader;
    private _isInitialized;
    /**
     * @internal
     */
    constructor();
    _initialize(preloadedData: IPreloadedData, bundledComponents: Map<string, Object> | undefined): Promise<void>;
    loadScript<TModule>(url: string, options?: ILoadScriptOptions | undefined): Promise<TModule>;
    loadComponent<TComponent>(manifest: IClientSideComponentManifest): Promise<TComponent>;
}
