define("8be81a5c-af38-4bb2-af97-afa3b64dfbed_1.1.0", ["office-ui-fabric-react","react","@microsoft/sp-core-library","@ms/sp-telemetry","@ms/odsp-utilities-bundle","resx-strings","@microsoft/sp-lodash-subset","react-dom","@microsoft/sp-webpart-base","@microsoft/sp-http","@microsoft/sp-page-context","@microsoft/sp-extension-base","@microsoft/sp-loader","@microsoft/decorators","@microsoft/office-ui-fabric-react-bundle"], function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_33__, __WEBPACK_EXTERNAL_MODULE_35__, __WEBPACK_EXTERNAL_MODULE_71__, __WEBPACK_EXTERNAL_MODULE_254__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp8be81a5c_af38_4bb2_af97_afa3b64dfbed_1_1_0"];
/******/ 	window["webpackJsonp8be81a5c_af38_4bb2_af97_afa3b64dfbed_1_1_0"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length)
/******/ 			resolves.shift()();
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		2: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return Promise.resolve();
/******/
/******/ 		// an Promise means "currently loading".
/******/ 		if(installedChunks[chunkId]) {
/******/ 			return installedChunks[chunkId][2];
/******/ 		}
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + ({"0":"sp-canvas-ckeditor","1":"sp-canvas-quill"}[chunkId]||chunkId) + "_" + {"0":"ae5b73534bfa299d37d8","1":"5390fb2c413f0f1340fe"}[chunkId] + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunks[chunkId][2] = promise;
/******/
/******/ 		head.appendChild(script);
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Set the webpack public path
/******/ 	(function () {
/******/ 	  var scripts = document.getElementsByTagName('script');
/******/ 	  var regex = new RegExp('sp-webpart-workbench_?[a-zA-Z0-9-_]*.js', 'i');
/******/ 	  var found = false;
/******/ 	
/******/ 	  if (scripts && scripts.length) {
/******/ 	    for (var i = 0; i < scripts.length; i++) {
/******/ 	      if (!scripts[i]) continue;
/******/ 	      var path = scripts[i].getAttribute('src');
/******/ 	      if (path && path.match(regex)) {
/******/ 	        __webpack_require__.p = path.substring(0, path.lastIndexOf('/') + 1);
/******/ 	        found = true;
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	
/******/ 	  if (!found) {
/******/ 	    for (var global in window.__setWebpackPublicPathLoaderSrcRegistry__) {
/******/ 	      if (global && global.match(regex)) {
/******/ 	        __webpack_require__.p = global.substring(0, global.lastIndexOf('/') + 1);
/******/ 	        break;
/******/ 	      }
/******/ 	    }
/******/ 	  }
/******/ 	})();
/******/ 	
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 255);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/**
 * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value
 * to use if that slot is not specified by the theme.
 */

Object.defineProperty(exports, "__esModule", { value: true });
// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this
// value will initialize as undefined, and later will be set once on first loadStyles injection.
var _injectStylesWithCssText;
// Store the theming state in __themeState__ global scope for reuse in the case of duplicate
// load-themed-styles hosted on the page.
var _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any
var _themeState = _root.__themeState__ = _root.__themeState__ || {
    theme: undefined,
    lastStyleElement: undefined,
    registeredStyles: []
};
/**
 * Matches theming tokens. For example, "[theme: themeSlotName, default: #FFF]" (including the quotes).
 */
// tslint:disable-next-line:max-line-length
var _themeTokenRegex = /[\'\"]\[theme:\s*(\w+)\s*(?:\,\s*default:\s*([\\"\']?[\.\,\(\)\#\-\s\w]*[\.\,\(\)\#\-\w][\"\']?))?\s*\][\'\"]/g;
/** Maximum style text length, for supporting IE style restrictions. */
var MAX_STYLE_CONTENT_SIZE = 10000;
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load
 * event is fired.
 * @param {string | ThemableArray} styles Themable style text to register.
 */
function loadStyles(styles) {
    var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);
    if (_injectStylesWithCssText === undefined) {
        _injectStylesWithCssText = shouldUseCssText();
    }
    applyThemableStyles(styleParts);
}
exports.loadStyles = loadStyles;
/**
 * Allows for customizable loadStyles logic. e.g. for server side rendering application
 * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}
 * a loadStyles callback that gets called when styles are loaded or reloaded
 */
function configureLoadStyles(loadStyles) {
    _themeState.loadStyles = loadStyles;
}
exports.configureLoadStyles = configureLoadStyles;
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load event
 * is fired.
 * @param {string} styleText Style to register.
 * @param {IStyleRecord} styleRecord Existing style record to re-apply.
 */
function applyThemableStyles(stylesArray, styleRecord) {
    if (_themeState.loadStyles) {
        _themeState.loadStyles(resolveThemableArray(stylesArray), stylesArray);
    }
    else {
        _injectStylesWithCssText ?
            registerStylesIE(stylesArray, styleRecord) :
            registerStyles(stylesArray, styleRecord);
    }
}
/**
 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
 * replaced.
 * @param {theme} theme JSON object of theme tokens to values.
 */
function loadTheme(theme) {
    _themeState.theme = theme;
    // reload styles.
    reloadStyles();
}
exports.loadTheme = loadTheme;
/**
 * Clear already registered style elements and style records in theme_State object
 */
function clearStyles() {
    _themeState.registeredStyles.forEach(function (styleRecord) {
        var styleElement = styleRecord && styleRecord.styleElement;
        if (styleElement && styleElement.parentElement) {
            styleElement.parentElement.removeChild(styleElement);
        }
    });
    _themeState.registeredStyles = [];
}
exports.clearStyles = clearStyles;
/**
 * Reloads styles.
 */
function reloadStyles() {
    if (_themeState.theme) {
        for (var _i = 0, _a = _themeState.registeredStyles; _i < _a.length; _i++) {
            var styleRecord = _a[_i];
            applyThemableStyles(styleRecord.themableStyle, styleRecord);
        }
    }
}
/**
 * Find theme tokens and replaces them with provided theme values.
 * @param {string} styles Tokenized styles to fix.
 */
function detokenize(styles) {
    if (styles) {
        styles = resolveThemableArray(splitStyles(styles));
    }
    return styles;
}
exports.detokenize = detokenize;
/**
 * Resolves ThemingInstruction objects in an array and joins the result into a string.
 * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.
 */
function resolveThemableArray(splitStyleArray) {
    var theme = _themeState.theme;
    // Resolve the array of theming instructions to an array of strings.
    // Then join the array to produce the final CSS string.
    var resolvedArray = (splitStyleArray || []).map(function (currentValue) {
        var themeSlot = currentValue.theme;
        if (themeSlot) {
            // A theming annotation. Resolve it.
            var themedValue = theme ? theme[themeSlot] : undefined;
            var defaultValue = currentValue.defaultValue || 'inherit';
            // Warn to console if we hit an unthemed value even when themes are provided, unless "DEBUG" is false
            // Allow the themedValue to be undefined to explicitly request the default value.
            if (theme && !themedValue && console && !(themeSlot in theme) && ("boolean" === 'undefined' || true)) {
                console.warn("Theming value not provided for \"" + themeSlot + "\". Falling back to \"" + defaultValue + "\".");
            }
            return themedValue || defaultValue;
        }
        else {
            // A non-themable string. Preserve it.
            return currentValue.rawString;
        }
    });
    return resolvedArray.join('');
}
/**
 * Split tokenized CSS into an array of strings and theme specification objects
 * @param {string} styles Tokenized styles to split.
 */
function splitStyles(styles) {
    var result = [];
    if (styles) {
        var pos = 0; // Current position in styles.
        var tokenMatch = void 0; // tslint:disable-line:no-null-keyword
        while (tokenMatch = _themeTokenRegex.exec(styles)) {
            var matchIndex = tokenMatch.index;
            if (matchIndex > pos) {
                result.push({
                    rawString: styles.substring(pos, matchIndex)
                });
            }
            result.push({
                theme: tokenMatch[1],
                defaultValue: tokenMatch[2] // May be undefined
            });
            // index of the first character after the current match
            pos = _themeTokenRegex.lastIndex;
        }
        // Push the rest of the string after the last match.
        result.push({
            rawString: styles.substring(pos)
        });
    }
    return result;
}
exports.splitStyles = splitStyles;
/**
 * Registers a set of style text. If it is registered too early, we will register it when the
 * window.load event is fired.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStyles(styleArray, styleRecord) {
    var head = document.getElementsByTagName('head')[0];
    var styleElement = document.createElement('style');
    styleElement.type = 'text/css';
    styleElement.appendChild(document.createTextNode(resolveThemableArray(styleArray)));
    if (styleRecord) {
        head.replaceChild(styleElement, styleRecord.styleElement);
        styleRecord.styleElement = styleElement;
    }
    else {
        head.appendChild(styleElement);
    }
    if (!styleRecord) {
        _themeState.registeredStyles.push({
            styleElement: styleElement,
            themableStyle: styleArray
        });
    }
}
/**
 * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need
 * to register slightly differently.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStylesIE(styleArray, styleRecord) {
    var head = document.getElementsByTagName('head')[0];
    var registeredStyles = _themeState.registeredStyles;
    var lastStyleElement = _themeState.lastStyleElement;
    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : undefined;
    var lastStyleContent = stylesheet ? stylesheet.cssText : '';
    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];
    var resolvedStyleText = resolveThemableArray(styleArray);
    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {
        lastStyleElement = document.createElement('style');
        lastStyleElement.type = 'text/css';
        if (styleRecord) {
            head.replaceChild(lastStyleElement, styleRecord.styleElement);
            styleRecord.styleElement = lastStyleElement;
        }
        else {
            head.appendChild(lastStyleElement);
        }
        if (!styleRecord) {
            lastRegisteredStyle = {
                styleElement: lastStyleElement,
                themableStyle: styleArray
            };
            registeredStyles.push(lastRegisteredStyle);
        }
    }
    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);
    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place
    // Preserve the theme state.
    _themeState.lastStyleElement = lastStyleElement;
}
/**
 * Checks to see if styleSheet exists as a property off of a style element.
 * This will determine if style registration should be done via cssText (<= IE9) or not
 */
function shouldUseCssText() {
    var useCSSText = false;
    if (typeof document !== 'undefined') {
        var emptyStyle = document.createElement('style');
        emptyStyle.type = 'text/css';
        useCSSText = !!emptyStyle.styleSheet;
    }
    return useCSSText;
}


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(80)))

/***/ }),
/* 3 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_5__;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasControlType;
(function (CanvasControlType) {
    CanvasControlType[CanvasControlType["WebPartZone"] = 3] = "WebPartZone";
    CanvasControlType[CanvasControlType["RTE"] = 4] = "RTE";
    CanvasControlType[CanvasControlType["TwoColumns"] = 5] = "TwoColumns";
    CanvasControlType[CanvasControlType["ThreeColumns"] = 6] = "ThreeColumns";
    CanvasControlType[CanvasControlType["OneThirdColumnRight"] = 7] = "OneThirdColumnRight";
    CanvasControlType[CanvasControlType["OneThirdColumnLeft"] = 8] = "OneThirdColumnLeft";
    CanvasControlType[CanvasControlType["FullWidth"] = 9] = "FullWidth";
    CanvasControlType[CanvasControlType["OneColumn"] = 10] = "OneColumn";
})(CanvasControlType || (CanvasControlType = {}));
exports.default = CanvasControlType;


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_7__;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_jP9TaPNRkCXWU4OplNcN+w'];


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_1 = __webpack_require__(4);
var sp_webpart_base_1 = __webpack_require__(17);
var sp_lodash_subset_1 = __webpack_require__(11);
var CreateEmptyZoneLayout_1 = __webpack_require__(25);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasSectionPart_1 = __webpack_require__(48);
var CanvasZonePart_1 = __webpack_require__(49);
var CanvasWebPartHost_1 = __webpack_require__(199);
var CanvasLayout_1 = __webpack_require__(16);
var CanvasFullWidthSection_1 = __webpack_require__(21);
var CanvasStrings_resx_1 = __webpack_require__(8);
var HTMLCleanupUtils_1 = __webpack_require__(62);
var CanvasStore = (function () {
    function CanvasStore(serviceScope, render, mode, serializedCanvas, handleCanvasChanged, scrollThreshold, onViewportRendered, shouldCenterAlign) {
        var _this = this;
        this._webPartsCount = 0;
        sp_core_library_1.Validate.isNotNullOrUndefined(serviceScope, 'serviceScope');
        sp_core_library_1.Validate.isNotNullOrUndefined(render, 'render');
        sp_core_library_1.Validate.isNotNullOrUndefined(mode, 'mode');
        this._addReference = this._addReference.bind(this);
        this._notifyChanged = this._notifyChanged.bind(this);
        this.handleToolboxItemClick = this.handleToolboxItemClick.bind(this);
        this.closeToolbox = this.closeToolbox.bind(this);
        this.createQosScope = this.createQosScope.bind(this);
        this.deleteControl = this.deleteControl.bind(this);
        this.handleConfigureButtonClicked = this.handleConfigureButtonClicked.bind(this);
        this.handleConfigureZoneButtonClicked = this.handleConfigureZoneButtonClicked.bind(this);
        this.handleDeleteControlButtonClicked = this.handleDeleteControlButtonClicked.bind(this);
        this.handleDeleteControlDialogConfirmation = this.handleDeleteControlDialogConfirmation.bind(this);
        this.handleDeleteControlDialogDismiss = this.handleDeleteControlDialogDismiss.bind(this);
        this.handleDeleteZoneButtonClicked = this.handleDeleteZoneButtonClicked.bind(this);
        this.handleDeleteZoneDialogConfirmation = this.handleDeleteZoneDialogConfirmation.bind(this);
        this.handleDeleteZoneDialogDismiss = this.handleDeleteZoneDialogDismiss.bind(this);
        this.handleWindowBlur = this.handleWindowBlur.bind(this);
        this.reclaimFocus = this.reclaimFocus.bind(this);
        this.scrollIntoView = this.scrollIntoView.bind(this);
        this.openToolbox = this.openToolbox.bind(this);
        this._handleViewportRendered = onViewportRendered;
        this._render = render;
        this._controlComponentMap = new Map();
        this._controlsProps = [];
        this._displayMode = mode;
        this._shouldCenterAlign = shouldCenterAlign;
        this._handleCanvasChanged = handleCanvasChanged;
        this._pollActiveElement = this._pollActiveElement.bind(this);
        this._scrollThreshold = scrollThreshold || 0;
        this._webpartManager = sp_webpart_base_1.ClientSideWebPartManagerFactory.create(new CanvasWebPartHost_1.default(serviceScope, this.scrollIntoView.bind(this, 'full'), handleCanvasChanged, this.reclaimFocus, function (id) {
            _this._selectedControlIdInternal = id;
        }));
        var defaultLayout = undefined;
        if (CanvasStore.isLayoutSupported) {
            this._canvasLayout = new CanvasLayout_1.default(this._webpartManager, this._render);
            defaultLayout = CanvasLayout_1.default.undefinedControlPosition;
        }
        this._dialogProps = {
            isOpen: false,
            message: undefined,
            onConfirmation: undefined,
            onDismiss: undefined,
            title: undefined
        };
        this._toolboxProps = {
            isLoading: true,
            isOpen: false,
            onItemClick: this.handleToolboxItemClick.bind(this, CanvasStore.isLayoutSupported ? defaultLayout : 0),
            row: undefined,
            toolboxItems: [],
            verticalPosition: undefined,
            controlPosition: defaultLayout
        };
        this.fetchWebparts();
    }
    Object.defineProperty(CanvasStore, "_isCanvasJsonFlightEnabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(957 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "_isWebPartSerializationV1Enabled", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(974 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "isLayoutSupported", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(963 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "isReorderingSupported", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(951 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "isCanvasFullWidthSectionSupported", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(946 );
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore, "isPolarisMultiColumnEditEnabled", {
        get: function () {
            return this.isLayoutSupported && sp_core_library_1._SPFlight.isEnabled(967 );
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.isFullWidth = function (position) {
        return CanvasStore.isCanvasFullWidthSectionSupported &&
            CanvasFullWidthSection_1.default.isFullWidth(position);
    };
    Object.defineProperty(CanvasStore.prototype, "addReference", {
        get: function () {
            return this._addReference;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "a11yManager", {
        get: function () {
            return this._a11yManager;
        },
        set: function (elem) {
            this._a11yManager = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasElement", {
        get: function () {
            return this._canvasElement;
        },
        set: function (elem) {
            this._canvasElement = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "confirmationDialogProps", {
        get: function () {
            return this._dialogProps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "controlsProps", {
        get: function () {
            return this._canvasControls;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "canvasLayout", {
        get: function () {
            return this._canvasLayout;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "deletedRow", {
        get: function () {
            return this._deletedRow;
        },
        set: function (row) {
            this._deletedRow = row;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "deletedControlLayout", {
        get: function () {
            return CanvasStore.isLayoutSupported ?
                this._canvasLayout.controlsState.deletedControlLayout :
                undefined;
        },
        set: function (layout) {
            if (CanvasStore.isLayoutSupported) {
                this._canvasLayout.controlsState.deletedControlLayout = layout;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "displayMode", {
        get: function () {
            return this._displayMode;
        },
        set: function (newMode) {
            if (this._displayMode !== newMode) {
                this._displayMode = newMode;
                for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                    var control = _a[_i];
                    control.displayMode = newMode;
                    var controlComponent = this._getControlComponentById(control.id);
                    if (controlComponent) {
                        controlComponent.setDisplayMode(newMode);
                    }
                }
                if (this._displayMode === sp_core_library_1.DisplayMode.Read) {
                    this._selectedControlIdInternal = undefined;
                    this.webPartManager.setPropertyPaneState(undefined, sp_webpart_base_1.PropertyPaneState.Close);
                    this._toolboxProps.isOpen = false;
                }
                this.fetchWebparts();
                this._render();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "shouldCenterAlign", {
        get: function () {
            return this._shouldCenterAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "siteSupportsFullWidth", {
        get: function () {
            return CanvasStore.isCanvasFullWidthSectionSupported &&
                this._shouldCenterAlign;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "notifyChanged", {
        get: function () {
            return this._notifyChanged;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "scrollableParent", {
        get: function () {
            return this._scrollableParentElement;
        },
        set: function (elem) {
            this._scrollableParentElement = elem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "scrollThreshold", {
        get: function () {
            return this._scrollThreshold;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "selectedZoneIndex", {
        get: function () {
            return this._canvasLayout.controlsState.selectedZoneIndex;
        },
        set: function (zoneIndex) {
            this._selectedControlIdInternal = undefined;
            this._canvasLayout.controlsState.selectedZoneIndex = zoneIndex;
            this._webpartManager.setPropertyPaneState(zoneIndex.toString());
            this._render();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "hoveredControlId", {
        get: function () {
            return CanvasStore.isLayoutSupported ?
                this._canvasLayout.controlsState.hoveredControlId :
                this._hoveredControlId;
        },
        set: function (id) {
            if (CanvasStore.isLayoutSupported) {
                this._canvasLayout.controlsState.hoveredControlId = id;
            }
            else {
                this._hoveredControlId = id;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "selectedControlId", {
        get: function () {
            return this._selectedControlIdInternal;
        },
        set: function (id) {
            if (this._selectedControlIdInternal !== id) {
                this._selectedControlIdInternal = id;
                var controlComponent = this._getControlComponentById(id);
                if (controlComponent && controlComponent.props.controlType !== CanvasControlType_1.default.WebPartZone) {
                    this._webpartManager.setPropertyPaneState(undefined);
                }
                else {
                    this._webpartManager.setPropertyPaneState(id);
                }
                this._render();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "toolboxProps", {
        get: function () {
            return this._toolboxProps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "webPartManager", {
        get: function () {
            return this._webpartManager;
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype.handleToolboxItemClick = function (position, itemProps) {
        var qos = this.createQosScope('ToolboxItemClicked');
        if (this._displayMode === sp_core_library_1.DisplayMode.Edit) {
            this._selectedControlIdInternal = itemProps.id = sp_core_library_1.Guid.newGuid().toString();
            this.addControlToCanvas(position, itemProps);
            if (itemProps.controlType === CanvasControlType_1.default.WebPartZone) {
                var webPartZoneProps = itemProps;
                if (webPartZoneProps.webPartManifest) {
                    var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'AddWebPart', sp_telemetry_1._LogType.Event, {
                        'manifestId': webPartZoneProps.webPartManifest.id
                    });
                    sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
                }
            }
            else if (itemProps.controlType === CanvasControlType_1.default.RTE) {
                sp_telemetry_1._EngagementLogger.logEvent('AddRTE.Click');
            }
            else {
                var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'AddZone', sp_telemetry_1._LogType.Event, {
                    'layout': itemProps.controlType && itemProps.controlType.toString()
                });
                sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
            }
            this._render();
            this._notifyChanged();
            qos.writeSuccess();
        }
        else {
            qos.writeUnexpectedFailure('ReadMode');
        }
    };
    CanvasStore.prototype.deleteControl = function (row, layout) {
        this.deletedRow = row;
        this.deletedControlLayout = layout;
        if (CanvasStore.isLayoutSupported) {
            var control = this._canvasLayout.fetchControl(this.deletedControlLayout);
            if (control && CanvasControlType_1.default.WebPartZone === control.controlType) {
                this._webPartsCount--;
            }
            this._canvasLayout.removeControl(this.deletedControlLayout);
        }
        else {
            var removedControls = this._controlsProps.splice(row, 1);
            if (removedControls && CanvasControlType_1.default.WebPartZone === removedControls[0].controlType) {
                this._webPartsCount--;
            }
        }
        if (this._canvasControls.length === 0) {
            this._webpartManager.setPropertyPaneState(undefined, sp_webpart_base_1.PropertyPaneState.Close);
        }
        this._render();
        this._notifyChanged();
    };
    CanvasStore.prototype.getControl = function (id) {
        return this._getControlComponentById(id);
    };
    CanvasStore.prototype.openToolbox = function (position, verticalPosition, horizontalPosition, onClose) {
        if (this._toolboxProps.isOpen) {
            this.closeToolbox();
        }
        this.fillToolboxItems();
        this._toolboxProps.isOpen = true;
        this._toolboxProps.onItemClick = this.handleToolboxItemClick.bind(this, position);
        this._toolboxProps.verticalPosition = verticalPosition;
        this._toolboxProps.horizontalPosition = horizontalPosition;
        this._toolboxProps.onClose = onClose;
        if (CanvasStore.isLayoutSupported) {
            var pos = position;
            this._toolboxProps.controlPosition = pos;
            this._toolboxProps.row = pos.zoneIndex - 1;
        }
        else {
            this._toolboxProps.row = position;
        }
        document.addEventListener('click', this.closeToolbox);
        this._render();
    };
    CanvasStore.prototype.closeToolbox = function () {
        if (typeof this._toolboxProps.onClose === 'function') {
            this._toolboxProps.onClose();
        }
        this._toolboxProps.isOpen = false;
        this._toolboxProps.row = undefined;
        if (CanvasStore.isLayoutSupported) {
            this._toolboxProps.controlPosition = CanvasLayout_1.default.undefinedControlPosition;
        }
        document.removeEventListener('click', this.closeToolbox);
        this._render();
    };
    CanvasStore.prototype.createQosScope = function (scope) {
        return new sp_telemetry_1._QosMonitor("Canvas" + scope);
    };
    CanvasStore.prototype.handleConfigureButtonClicked = function (id) {
        var isCurrentlySelected = this._selectedControlIdInternal === id;
        var controlComponent = this._getControlComponentById(id);
        if (controlComponent) {
            controlComponent.handleConfigureButtonClicked(isCurrentlySelected);
            this._selectedControlIdInternal = id;
            this._render();
        }
    };
    CanvasStore.prototype.handleConfigureZoneButtonClicked = function (id, zoneFocusHandler) {
        sp_telemetry_1._EngagementLogger.logEvent('Canvas.ConfigureZone.Click');
        var isCurrentlySelected = this._editedZoneIndex === +id;
        this._webpartManager.setPropertyPaneState(id, isCurrentlySelected ? sp_webpart_base_1.PropertyPaneState.Toggle : sp_webpart_base_1.PropertyPaneState.Open);
        this._editedZoneIndex = +id;
        this._editedZoneFocusHandler = zoneFocusHandler;
    };
    CanvasStore.prototype.handleDeleteControlButtonClicked = function (row, layout) {
        this._rowToBeDeleted = row;
        this._positionCandidateForDeletion = layout;
        var selectedControl = CanvasStore.isLayoutSupported ?
            this._canvasLayout.fetchControl(this._positionCandidateForDeletion) :
            this._controlsProps[this._rowToBeDeleted];
        this._selectedControlIdInternal = selectedControl.id;
        this._webpartManager.setPropertyPaneState(selectedControl.controlType === CanvasControlType_1.default.WebPartZone ? this._selectedControlIdInternal : undefined);
        this._openDialogMessage(CanvasStrings_resx_1.default.DeleteConfirmationDialogTitle, CanvasStrings_resx_1.default.DeleteConfirmationDialogMessage, this.handleDeleteControlDialogConfirmation, this.handleDeleteControlDialogDismiss, true);
    };
    CanvasStore.prototype.handleDeleteControlDialogConfirmation = function () {
        var qos = this.createQosScope('DeleteWebPart');
        var selectedControl;
        try {
            selectedControl = CanvasStore.isLayoutSupported ?
                this._canvasLayout.fetchControl(this._positionCandidateForDeletion) :
                this._controlsProps[this._rowToBeDeleted];
            if (selectedControl.controlType === CanvasControlType_1.default.WebPartZone) {
                var controlComponent = this._getControlComponentById(selectedControl.id);
                controlComponent.handleDeleteButtonClicked();
            }
            this._closeDialogMessage();
            this.deleteControl(this._rowToBeDeleted, this._positionCandidateForDeletion);
            qos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(qos, err, selectedControl);
        }
    };
    CanvasStore.prototype.handleDeleteControlDialogDismiss = function () {
        this._rowToBeDeleted = undefined;
        this._positionCandidateForDeletion = CanvasLayout_1.default.undefinedControlPosition;
        this._closeDialogMessage(true);
    };
    CanvasStore.prototype.handleDeleteZoneButtonClicked = function (row, layout) {
        this._zoneDeleteQos = this.createQosScope('DeleteZone');
        this._selectedControlIdInternal = undefined;
        this._positionCandidateForDeletion = layout;
        this._openDialogMessage(CanvasStrings_resx_1.default.DeleteConfirmationDialogTitle, CanvasStrings_resx_1.default.DeleteZoneConfirmationDialogMessage, this.handleDeleteZoneDialogConfirmation, this.handleDeleteZoneDialogDismiss, true);
        sp_telemetry_1._EngagementLogger.logEvent('Canvas.DeleteZone.Click');
    };
    CanvasStore.prototype.handleDeleteZoneDialogConfirmation = function () {
        try {
            this._webpartManager.disposeWebparts(this._positionCandidateForDeletion.zoneIndex.toString());
            this._canvasLayout.removeZone(this._positionCandidateForDeletion.zoneIndex);
            this._closeDialogMessage(true);
            this._zoneDeleteQos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(this._zoneDeleteQos, err);
        }
    };
    CanvasStore.prototype.handleDeleteZoneDialogDismiss = function () {
        try {
            this._positionCandidateForDeletion = CanvasLayout_1.default.undefinedControlPosition;
            this._closeDialogMessage(true);
            this._zoneDeleteQos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(this._zoneDeleteQos, err);
        }
    };
    CanvasStore.prototype.handleWindowBlur = function (e) {
        if (this._hoveredControlId && document.activeElement && document.activeElement.tagName === 'IFRAME') {
            this.selectedControlId = this.hoveredControlId;
            this._oldActiveElement = document.activeElement;
            window.clearInterval(this._pollId);
            this._pollId = window.setInterval(this._pollActiveElement, 250);
        }
    };
    CanvasStore.prototype.deserialize = function (serializedCanvas) {
        var qos = this.createQosScope('Deserialize');
        var controlProps;
        try {
            this._controlsProps = [];
            this._controlComponentMap = new Map();
            if (CanvasStore.isLayoutSupported) {
                this._canvasLayout.dispose();
            }
            if (serializedCanvas) {
                var controlAttribute = 'data-sp-canvascontrol';
                var tryJson = true;
                if (serializedCanvas.indexOf(controlAttribute) !== -1) {
                    var wrapper = document.createElement('div');
                    wrapper.innerHTML = this._replaceImageTagsInHtmlString(serializedCanvas);
                    if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('6416768b-6758-49a1-9457-46b0265b8e55'), '1/23/2017', 'HTMLCleanup')) {
                        wrapper.innerHTML = HTMLCleanupUtils_1.StripOutNewLinesAndSpacesFromInnerHTML(wrapper.innerHTML);
                    }
                    var rows = wrapper.querySelectorAll("[" + controlAttribute + "]");
                    var rowLength = rows.length;
                    if (rowLength > 0) {
                        tryJson = false;
                        var lastZoneIndex = 1, lastSectionIndex = 1, lastControlIndex = 1;
                        var hasNonLayoutData = false, hasLayoutData = false;
                        for (var i = 0; i < rowLength; ++i) {
                            var row = rows[i];
                            var isLegacyHtml = !row.hasAttribute('data-sp-canvasdataversion');
                            if (isLegacyHtml) {
                                controlProps = this._deserializeLegacyCanvasControlHtml(row);
                            }
                            else {
                                controlProps = this._deserializeCanvasControlHtml(row);
                            }
                            if (controlProps) {
                                if (controlProps.position) {
                                    lastZoneIndex = controlProps.position.zoneIndex || lastZoneIndex;
                                    lastSectionIndex = controlProps.position.sectionIndex || lastSectionIndex;
                                    lastControlIndex = controlProps.position.controlIndex || lastControlIndex;
                                    hasLayoutData = true;
                                }
                                else {
                                    hasNonLayoutData = true;
                                }
                                if (hasLayoutData === hasNonLayoutData) {
                                    sp_telemetry_1._TraceLogger.logVerbose(CanvasStore._logSource, "Canvas layout data mismatch is found");
                                }
                                this.addControlToCanvas(
                                CanvasStore.isLayoutSupported ?
                                    CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(lastZoneIndex, lastSectionIndex, ++lastControlIndex) : i, controlProps);
                            }
                        }
                    }
                }
                if (tryJson && CanvasStore._isCanvasJsonFlightEnabled) {
                    this._processCanvasContent(serializedCanvas);
                }
            }
            qos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(qos, err, controlProps);
        }
    };
    CanvasStore.prototype.dispose = function () {
        this._webpartManager.dispose();
        if (CanvasStore.isLayoutSupported) {
            this._canvasLayout.dispose();
        }
    };
    CanvasStore.prototype.reclaimFocus = function () {
        if (this._selectedControlIdInternal) {
            var controlComponent = this._getControlComponentById(this._selectedControlIdInternal);
            if (controlComponent) {
                controlComponent.focus();
            }
        }
        else if (this._editedZoneIndex && this._editedZoneFocusHandler) {
            this._editedZoneFocusHandler();
        }
    };
    CanvasStore.prototype.scrollIntoView = function (type, element, duration, margin, allowScrollUp) {
        if (margin === void 0) { margin = 0; }
        if (!this.scrollableParent || !element) {
            return;
        }
        var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
        var frameBottom = Math.min(viewportHeight, this.scrollableParent.getBoundingClientRect().bottom);
        var elementClientRect = element.getBoundingClientRect();
        if ((type === 'partial' ? elementClientRect.bottom : elementClientRect.top) > frameBottom ||
            allowScrollUp && frameBottom > elementClientRect.top) {
            this._scrollElementIntoView(frameBottom, element, duration, margin);
        }
    };
    CanvasStore.prototype.serialize = function (toJson) {
        if (toJson) {
            return this._serializeAsJson();
        }
        return CanvasStore._isCanvasJsonFlightEnabled ?
            this._serializeAsJson() :
            this._serializeAsHtml();
    };
    CanvasStore.prototype.tryGeneratePreviewImageUrl = function () {
        var qos = this.createQosScope('GeneratePreviewImageUrl');
        try {
            var webpartIds = [];
            for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (control.controlType === CanvasControlType_1.default.WebPartZone) {
                    webpartIds.push(control.id);
                }
            }
            var previewUrl = this.webPartManager.tryGeneratePreviewImageUrl(webpartIds);
            qos.writeSuccess();
            return previewUrl;
        }
        catch (err) {
            var pathLengthErrorKey = 'PathLengthError';
            if (err && err.message && err.message.indexOf(pathLengthErrorKey) > -1) {
                qos.writeExpectedFailure(pathLengthErrorKey, err);
                return undefined;
            }
            else {
                this._handleMonitoredException(qos, err);
            }
        }
    };
    CanvasStore.prototype.addControlToCanvas = function (position, control, shouldRender) {
        if (!control.id) {
            control.id = sp_core_library_1.Guid.newGuid().toString();
        }
        var isWebpartZone = control.controlType === CanvasControlType_1.default.WebPartZone;
        if (isWebpartZone) {
            this._webPartsCount++;
        }
        if (isWebpartZone && control.addedFromPersistedData) {
            var webPartProps = control;
            webPartProps.webPartManifest = this._getManifestMap().get(webPartProps.webPartId);
        }
        if (CanvasStore.isLayoutSupported) {
            control.position = control.position || position;
            if (CanvasStore.isFullWidth(control.position) &&
                CanvasFullWidthSection_1.default.isFullWidthControl(control)) {
                if (this.siteSupportsFullWidth) {
                    CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, true);
                }
                else {
                    var sectionFactor = CanvasZonePart_1.default.columnDefinitionMap.get(CanvasControlType_1.default.OneColumn).factor[0];
                    var newPosition = CanvasLayout_1.default.cloneMergePosition(control.position, { sectionFactor: sectionFactor });
                    control.position = newPosition;
                    CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, false);
                }
            }
            this._canvasLayout.addControl(control);
        }
        else {
            this.controlsProps.splice(position, 0, control);
        }
        if (shouldRender) {
            this._render();
            this._notifyChanged();
        }
    };
    CanvasStore.prototype.getToolBoxItem = function (id) {
        var toolboxItems = this._toolboxProps.toolboxItems;
        var currentIndex = sp_lodash_subset_1.findIndex(toolboxItems, function (toolboxItem) {
            return id === toolboxItem.itemProps.webPartId;
        });
        if (currentIndex !== -1) {
            return sp_lodash_subset_1.clone(toolboxItems[currentIndex].itemProps);
        }
        return undefined;
    };
    Object.defineProperty(CanvasStore.prototype, "webPartsCount", {
        get: function () {
            return this._webPartsCount;
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype.onViewportWebPartsRendered = function (endTime) {
        if (this._handleViewportRendered) {
            this._handleViewportRendered(endTime);
        }
    };
    CanvasStore.prototype.fetchWebparts = function (force) {
        var _this = this;
        if (!this._fetchedWebparts && (sp_core_library_1.DisplayMode.Edit === this._displayMode || force)) {
            return this._webpartManager.fetchWebPartManifests().then(function () {
                _this._fetchedWebparts = true;
                _this._toolboxProps.errorMessage = undefined;
                _this.fillToolboxItems();
            }, function (error) {
                _this._toolboxProps.errorMessage = CanvasStrings_resx_1.default.ToolboxErrorMessage;
                _this.fillToolboxItems();
            });
        }
        else {
            return Promise.resolve();
        }
    };
    CanvasStore.prototype.fillToolboxItems = function (isFullWidth, newToolboxProps) {
        var _this = this;
        var qos = this.createQosScope('LoadWebPartsInToolbox');
        var toolboxProps = newToolboxProps || this._toolboxProps;
        try {
            toolboxProps.toolboxItems = [];
            this._getManifestMap().forEach(function (manifest, cid) {
                var i = 0;
                for (var _i = 0, _a = manifest.preconfiguredEntries; _i < _a.length; _i++) {
                    var entry = _a[_i];
                    var itemProps = {
                        controlType: CanvasControlType_1.default.WebPartZone,
                        displayMode: sp_core_library_1.DisplayMode.Edit,
                        id: undefined,
                        webPartId: cid,
                        webPartData: _this._extractWebPartData(manifest, entry),
                        webPartManifest: manifest
                    };
                    var toolboxItem = {
                        itemProps: itemProps,
                        description: entry.description.default,
                        displayName: entry.title.default,
                        msIconName: entry.officeFabricIconFontName,
                        imageSrc: entry.iconImageUrl,
                        key: manifest.id + "_" + i++
                    };
                    if ((isFullWidth && CanvasFullWidthSection_1.default.isFullWidthControl(itemProps)) || (!isFullWidth)) {
                        toolboxProps.toolboxItems.push(toolboxItem);
                    }
                }
            });
            toolboxProps.isLoading = false;
            qos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(qos, err);
        }
        if (toolboxProps.isOpen) {
            this._render();
        }
    };
    CanvasStore.prototype._deserializeLegacyCanvasControlHtml = function (row) {
        var controlProps = JSON.parse(decodeURI(row.getAttribute('data-sp-controldata')));
        if (controlProps) {
            controlProps.displayMode = this._displayMode;
            controlProps.addedFromPersistedData = true;
            if (controlProps.controlType === CanvasControlType_1.default.RTE) {
                controlProps.innerHTML = row.innerHTML;
            }
            var webPartData = controlProps.webPartData;
            if (webPartData) {
                var htmlString = webPartData.htmlProperties; 
                var htmlPropsDiv = row.querySelector('[data-sp-htmlproperties]');
                if (htmlPropsDiv) {
                    htmlString = htmlPropsDiv.innerHTML;
                }
                if (htmlString) {
                    htmlString = this._replaceImageTagsInHtmlString(htmlString);
                }
                webPartData.serverProcessedContent = sp_webpart_base_1.WebPartDataConverter.convertServerProcessedHtmlToData(htmlString);
            }
        }
        return controlProps || undefined;
    };
    CanvasStore.prototype._deserializeCanvasControlHtml = function (row) {
        var controlProps = JSON.parse(row.getAttribute('data-sp-controldata'));
        controlProps.displayMode = this._displayMode;
        controlProps.addedFromPersistedData = true;
        var webPartDiv = row.querySelector('[data-sp-webpart]');
        if (webPartDiv) {
            var webPartDivWrapper = document.createElement('div');
            webPartDivWrapper.appendChild(webPartDiv);
            controlProps.webPartData =
                sp_webpart_base_1.WebPartDataConverter.convertHtmlToWebPartData(webPartDivWrapper.innerHTML);
        }
        else {
            var rteDiv = row.querySelector('[data-sp-rte]');
            if (rteDiv) {
                controlProps.innerHTML = rteDiv.innerHTML;
            }
        }
        return controlProps;
    };
    CanvasStore.prototype._initializeHtmlDivs = function () {
        this._canvasControlDiv = document.createElement('div');
        this._canvasControlLegacyDiv = document.createElement('div');
        this._componentIdDiv = document.createElement('div');
        this._htmlPropsDiv = document.createElement('div');
        this._rteDiv = document.createElement('div');
        this._canvasControlDiv.setAttribute('data-sp-canvascontrol', '');
        this._canvasControlDiv.setAttribute('data-sp-canvasdataversion', '1.0');
        this._canvasControlLegacyDiv.setAttribute('data-sp-canvascontrol', '');
        this._componentIdDiv.setAttribute('data-sp-componentid', '');
        this._htmlPropsDiv.setAttribute('data-sp-htmlproperties', '');
        this._rteDiv.setAttribute('data-sp-rte', '');
    };
    CanvasStore.prototype._replaceImageTagsInHtmlString = function (htmlString) {
        return htmlString.replace(/<img((\s+[^\t\n\f \/>"'=]+(\s*=\s*(?:".*?"|'.*?'|[\^'">\s]+))?)+\s*|\s*)\/?>/gi, '<spimg$1></spimg>');
    };
    CanvasStore.prototype._serializeControlAsLegacyHtml = function (controlType, controlData) {
        if (!this._canvasControlLegacyDiv) {
            this._initializeHtmlDivs();
        }
        var row = this._canvasControlLegacyDiv.cloneNode();
        var componentIdElement = this._componentIdDiv.cloneNode();
        var htmlPropertiesElement = this._htmlPropsDiv.cloneNode();
        if (controlType === CanvasControlType_1.default.RTE) {
            row.innerHTML = controlData.innerHTML;
        }
        else if (controlType === CanvasControlType_1.default.WebPartZone) {
            var componentId = componentIdElement.cloneNode();
            componentId.textContent = controlData.webPartId;
            row.appendChild(componentId);
            var webPartData = controlData.webPartData;
            if (webPartData) {
                var htmlProperties = htmlPropertiesElement.cloneNode();
                htmlProperties.innerHTML =
                    sp_webpart_base_1.WebPartDataConverter.convertServerProcessedDataToHtml(webPartData.serverProcessedContent);
                row.appendChild(htmlProperties);
            }
        }
        row.setAttribute('data-sp-controldata', encodeURI(JSON.stringify(controlData)));
        return row;
    };
    CanvasStore.prototype._serializeControlAsHtml = function (controlType, controlData) {
        if (!this._canvasControlDiv) {
            this._initializeHtmlDivs();
        }
        var row = this._canvasControlDiv.cloneNode();
        if (controlType === CanvasControlType_1.default.RTE) {
            var rteHtmlDiv = this._rteDiv.cloneNode();
            rteHtmlDiv.innerHTML = controlData.innerHTML;
            controlData.innerHTML = undefined;
            row.appendChild(rteHtmlDiv);
        }
        else if (controlType === CanvasControlType_1.default.WebPartZone) {
            var wpdata = controlData.webPartData;
            row.innerHTML = sp_webpart_base_1.WebPartDataConverter.convertWebPartDataToHtml(wpdata);
            controlData.webPartData = undefined;
        }
        controlData.displayMode = undefined;
        row.setAttribute('data-sp-controldata', JSON.stringify(controlData));
        return row;
    };
    CanvasStore.prototype._getControlComponentById = function (id) {
        return CanvasStore.isLayoutSupported ?
            this._canvasLayout.fetchControlComponentById(id) :
            this._controlComponentMap.get(id);
    };
    CanvasStore.prototype._setControlComponentById = function (id, component) {
        if (CanvasStore.isLayoutSupported) {
            this._canvasLayout.addControlComponent(id, component);
        }
        else {
            this._controlComponentMap.set(id, component);
        }
    };
    Object.defineProperty(CanvasStore.prototype, "_canvasControls", {
        get: function () {
            return CanvasStore.isLayoutSupported ?
                this._canvasLayout.fetchAllControls() :
                this._controlsProps;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "_selectedControlIdInternal", {
        get: function () {
            return CanvasStore.isLayoutSupported ?
                this._canvasLayout.controlsState.selectedControlId :
                this._selectedControlId;
        },
        set: function (id) {
            if (CanvasStore.isLayoutSupported) {
                this._canvasLayout.controlsState.selectedControlId = id;
            }
            else {
                this._selectedControlId = id;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasStore.prototype, "_positionCandidateForDeletion", {
        get: function () {
            return CanvasStore.isLayoutSupported ?
                this._canvasLayout.controlsState.deleteCandidateControlLayout :
                undefined;
        },
        set: function (layout) {
            if (CanvasStore.isLayoutSupported) {
                this._canvasLayout.controlsState.deleteCandidateControlLayout = layout;
            }
        },
        enumerable: true,
        configurable: true
    });
    CanvasStore.prototype._serializeAsHtml = function () {
        var qos = this.createQosScope('Serialize');
        var controlData;
        var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'SerializeContentHTML', sp_telemetry_1._LogType.Event, {});
        try {
            var body = document.createElement('div');
            for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (control.id === CanvasSectionPart_1.default.emptySectionId) {
                    control.id = undefined;
                    controlData = control;
                }
                else {
                    var controlComponent = this._getControlComponentById(control.id);
                    controlData = controlComponent.serialize();
                    controlData.webPartManifest = undefined;
                    if (!CanvasStore.isLayoutSupported &&
                        controlData.position) {
                        controlData.position = undefined;
                    }
                }
                this._tryAddControlDataToLogEntry(controlData, logEntry);
                var row = CanvasStore._isWebPartSerializationV1Enabled ?
                    this._serializeControlAsHtml(control.controlType, controlData) :
                    this._serializeControlAsLegacyHtml(control.controlType, controlData);
                body.appendChild(row);
            }
            var wrapper = document.createElement('div');
            wrapper.appendChild(body);
            qos.writeSuccess();
            return wrapper.innerHTML;
        }
        catch (err) {
            this._handleMonitoredException(qos, err, controlData);
            throw err;
        }
        finally {
            sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
        }
    };
    CanvasStore.prototype._serializeAsJson = function () {
        var qos = this.createQosScope('SerializeAsJson');
        var controlDataCollection = [];
        var controlData;
        var logEntry = new sp_telemetry_1._LogEntry('CanvasStore', 'SerializeContentJSON', sp_telemetry_1._LogType.Event, {});
        try {
            for (var _i = 0, _a = this._canvasControls; _i < _a.length; _i++) {
                var control = _a[_i];
                if (control.id === CanvasSectionPart_1.default.emptySectionId) {
                    control.id = undefined;
                    controlData = control;
                }
                else {
                    var controlComponent = this._getControlComponentById(control.id);
                    controlData = controlComponent.serialize();
                    controlData.webPartManifest = undefined;
                    if (!CanvasStore.isLayoutSupported &&
                        controlData.position) {
                        controlData.position = undefined;
                    }
                }
                this._tryAddControlDataToLogEntry(controlData, logEntry);
                controlDataCollection.push(controlData);
            }
            qos.writeSuccess();
        }
        catch (err) {
            this._handleMonitoredException(qos, err, controlData);
            throw err;
        }
        finally {
            sp_telemetry_1._EngagementLogger.logEventWithLogEntry(logEntry);
        }
        return encodeURI(JSON.stringify(controlDataCollection));
    };
    CanvasStore.prototype._tryAddControlDataToLogEntry = function (controlData, logEntry) {
        if (!CanvasStore.isLayoutSupported || !controlData.controlType) {
            return;
        }
        try {
            var position = controlData.position;
            var positionAsString = "Zone:" + position.zoneIndex + "|Section:" + position.sectionIndex + "|SectionFactor:" + position.sectionFactor + "|Index:" + position.controlIndex;
            var title = controlData.controlType === CanvasControlType_1.default.RTE ?
                CanvasControlType_1.default[controlData.controlType].toString() :
                controlData.webPartData.title;
            logEntry.logProperties[title + "_" + controlData.id] = positionAsString;
        }
        catch (ex) {
        }
    };
    CanvasStore.prototype._processCanvasContent = function (serializedCanvas) {
        var _this = this;
        var canvasControls = JSON.parse(serializedCanvas);
        if (canvasControls) {
            canvasControls.forEach(function (control, index) {
                var controlProp = control;
                if (controlProp) {
                    controlProp.displayMode = _this.displayMode;
                    controlProp.addedFromPersistedData = true;
                    _this.addControlToCanvas(CanvasStore._isCanvasJsonFlightEnabled ? CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(index) : index, controlProp);
                }
            });
        }
    };
    CanvasStore.prototype._addReference = function (ref) {
        if (ref) {
            this._setControlComponentById(ref.props.id, ref);
        }
    };
    CanvasStore.prototype._calculateEasing = function (time, start, diff, duration) {
        time /= duration / 2;
        if (time < 1) {
            return diff / 2 * time * time + start;
        }
        else {
            --time;
            return -diff / 2 * (time * (time - 2) - 1) + start;
        }
    };
    CanvasStore.prototype._extractWebPartData = function (manifest, entry) {
        var webPartData = {
            id: manifest.id,
            instanceId: undefined,
            title: entry.title.default,
            description: entry.description.default,
            dataVersion: entry.dataVersion,
            properties: entry.properties
        };
        return webPartData;
    };
    CanvasStore.prototype._getManifestMap = function () {
        var tempMap = new Map();
        var manifests = this._webpartManager.getWebPartManifests();
        for (var _i = 0, manifests_1 = manifests; _i < manifests_1.length; _i++) {
            var manifest = manifests_1[_i];
            tempMap.set(manifest.id, manifest);
        }
        return tempMap;
    };
    CanvasStore.prototype._pollActiveElement = function () {
        var activeElement = document.activeElement;
        if (activeElement.tagName !== 'IFRAME') {
            window.clearInterval(this._pollId);
        }
        else if (this._oldActiveElement !== activeElement && this.hoveredControlId) {
            this._oldActiveElement = activeElement;
            this._selectedControlIdInternal = this.hoveredControlId;
        }
    };
    CanvasStore.prototype._scroll = function (start, end, duration, time) {
        var _this = this;
        if (time === void 0) { time = 0; }
        var diff = end - start;
        var deltaTime = 20;
        if (time < duration) {
            requestAnimationFrame(function () {
                time += deltaTime;
                _this.scrollableParent.scrollTop = _this._calculateEasing(time, start, diff, duration);
                _this._scroll(start, end, duration, time);
            });
        }
    };
    CanvasStore.prototype._scrollElementIntoView = function (frameBottom, element, duration, margin) {
        var elementClientRect = element.getBoundingClientRect();
        var scrollPosition = elementClientRect.bottom - this.canvasElement.getBoundingClientRect().top;
        var frameTop = Math.max(0, this.scrollableParent.getBoundingClientRect().top);
        var offset = frameTop - frameBottom + this._scrollThreshold + margin;
        var newScrollTop = scrollPosition + offset + this._scrollThreshold;
        this._scroll(this.scrollableParent.scrollTop, newScrollTop, duration);
    };
    CanvasStore.prototype._notifyChanged = function () {
        if (this._handleCanvasChanged) {
            this._handleCanvasChanged();
        }
    };
    CanvasStore.prototype._handleMonitoredException = function (qos, err, props) {
        var extraData; 
        if (props && props.controlType === CanvasControlType_1.default.WebPartZone) {
            extraData = { 'id': props.webPartId };
        }
        qos.writeUnexpectedFailure('Exception', err, extraData);
    };
    CanvasStore.prototype._closeDialogMessage = function (shouldRender) {
        this._dialogProps.isOpen = false;
        if (shouldRender) {
            this._render();
        }
    };
    CanvasStore.prototype._openDialogMessage = function (title, message, onConfirmation, onDismiss, shouldRender) {
        this._dialogProps = {
            message: message,
            onConfirmation: onConfirmation,
            onDismiss: onDismiss,
            title: title,
            isOpen: true
        };
        if (shouldRender) {
            this._render();
        }
    };
    return CanvasStore;
}());
CanvasStore._logSource = sp_telemetry_1._LogSource.create('CanvasStore');
exports.default = CanvasStore;


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_yMeGkKybrchrRl4dKHORJw'];


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
    KeyCodes[KeyCodes["Tab"] = 9] = "Tab";
    KeyCodes[KeyCodes["F10"] = 121] = "F10";
    KeyCodes[KeyCodes["P"] = 80] = "P";
})(KeyCodes = exports.KeyCodes || (exports.KeyCodes = {}));
function isEscape(e) {
    return isKey(KeyCodes.Escape, e);
}
exports.isEscape = isEscape;
function isEnter(e) {
    return isKey(KeyCodes.Enter, e);
}
exports.isEnter = isEnter;
function isShiftTab(e) {
    return isKey(KeyCodes.Tab, e, false, false, true);
}
exports.isShiftTab = isShiftTab;
function isTab(e) {
    return isKey(KeyCodes.Tab, e);
}
exports.isTab = isTab;
function isKey(keyCode, e, allowAlt, allowCtrl, allowShift) {
    if (allowAlt === void 0) { allowAlt = false; }
    if (allowCtrl === void 0) { allowCtrl = false; }
    if (allowShift === void 0) { allowShift = false; }
    return e.keyCode === keyCode &&
        ((allowAlt && e.altKey) || (!allowAlt && !e.altKey)) &&
        ((allowCtrl && e.ctrlKey) || (!allowCtrl && !e.ctrlKey)) &&
        ((allowShift && e.shiftKey) || (!allowShift && !e.shiftKey));
}
exports.isKey = isKey;
function getFocusableChildren(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var children = [];
    for (var _i = 0, _a = getFocusableDescendants(elem, ignoreTabIndex); _i < _a.length; _i++) {
        var descendant = _a[_i];
        if (isElementFocusableChildOf(descendant, elem)) {
            children.push(descendant);
        }
    }
    return children;
}
exports.getFocusableChildren = getFocusableChildren;
function isElementFocusable(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var tagName = elem.tagName.toLowerCase();
    if (elem
        && !elem.hidden
        && elem.offsetParent
        && window.getComputedStyle(elem).display !== 'none'
        && window.getComputedStyle(elem).visibility !== 'hidden') {
        var hasTabIndex = elem.hasAttribute('tabindex');
        var tabindex = parseInt(elem.getAttribute('tabindex'), 10);
        if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
            return false;
        }
        if (tagName === 'a' && !!elem.href ||
            elem.isContentEditable) {
            return true;
        }
        if ((tagName === 'button' ||
            tagName === 'input' ||
            tagName === 'select' ||
            tagName === 'textarea') && !elem.disabled) {
            return true;
        }
        if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
            return true;
        }
        if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
            return true;
        }
    }
    return false;
}
exports.isElementFocusable = isElementFocusable;
function getFocusableParent(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var parent = elem;
    do {
        parent = parent.parentElement;
    } while (!isElementFocusable(parent) && parent !== topElement);
    return parent;
}
exports.getFocusableParent = getFocusableParent;
function queryFocusableSelector(elem) {
    var selector = 'button,input,textarea,select,a[href]:not([href=\'\']),\
      [tabindex],[contenteditable=\'true\'], [data-is-focusable=\'true\']';
    return elem.querySelectorAll(selector);
}
function getFirstFocusableChild(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            return node;
        }
    }
    return undefined;
}
exports.getFirstFocusableChild = getFirstFocusableChild;
function getFocusableDescendants(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var descendants = [];
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            descendants.push(node);
        }
    }
    return descendants;
}
exports.getFocusableDescendants = getFocusableDescendants;
function getFocusableSiblings(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var children = getFocusableChildren(getFocusableParent(elem, topElement));
    var siblings = [];
    var insertPointer = 0;
    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
        var child = children_1[_i];
        if (child !== elem) {
            siblings.splice(insertPointer++, 0, child);
        }
        else {
            insertPointer = 0;
        }
    }
    return siblings;
}
exports.getFocusableSiblings = getFocusableSiblings;
function getNextFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[0];
}
exports.getNextFocusableElement = getNextFocusableElement;
function getPrevFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[siblings.length - 1];
}
exports.getPrevFocusableElement = getPrevFocusableElement;
function isElementFocusableChildOf(elem, ancestor) {
    var parent = elem.parentElement;
    while (parent.tagName !== 'BODY') {
        if (parent === ancestor) {
            return true;
        }
        if (isElementFocusable(parent)) {
            break;
        }
        parent = parent.parentElement;
    }
    return false;
}
exports.isElementFocusableChildOf = isElementFocusableChildOf;
function navigateInside(elem) {
    var children = getFocusableChildren(elem);
    if (children.length) {
        children[0].focus();
        return true;
    }
    else {
        return false;
    }
}
exports.navigateInside = navigateInside;
function navigateTo(elem) {
    if (isElementFocusable(elem)) {
        elem.focus();
        return true;
    }
    else {
        return navigateInside(elem);
    }
}
exports.navigateTo = navigateTo;
function navigateOutOf(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    topElement = topElement || document.body;
    getFocusableParent(elem, topElement).focus();
}
exports.navigateOutOf = navigateOutOf;
var CanvasA11yManager = (function () {
    function CanvasA11yManager(canvasElement, shouldHandleKeyDown) {
        if (shouldHandleKeyDown === void 0) { shouldHandleKeyDown = true; }
        this._canvasElement = canvasElement;
        this._handleKeyDown = this._handleKeyDown.bind(this);
        this._randId = Math.floor(Math.random() * 1000000);
        if (shouldHandleKeyDown) {
            this._canvasElement.addEventListener('keydown', this._handleKeyDown);
        }
    }
    CanvasA11yManager.prototype.ariaAlert = function (message) {
        var divId = 'aria_alert_' + this._randId;
        var oldAlert = document.querySelector('#' + divId);
        if (oldAlert) {
            document.body.removeChild(oldAlert);
        }
        var alertNode = document.createElement('p');
        alertNode.classList.add('Canvas-screenReaderOnly');
        alertNode.setAttribute('role', 'alert');
        alertNode.setAttribute('id', divId);
        var alertText = document.createTextNode(message);
        alertNode.appendChild(alertText);
        document.body.appendChild(alertNode);
    };
    CanvasA11yManager.prototype.navigateInside = function (elem) {
        return navigateInside(elem);
    };
    CanvasA11yManager.prototype.navigateTo = function (elem) {
        return navigateTo(elem);
    };
    CanvasA11yManager.prototype.navigateOutOf = function (elem) {
        navigateOutOf(elem);
    };
    CanvasA11yManager.prototype.clearState = function () {
        this._savedFocusedElement = undefined;
    };
    CanvasA11yManager.prototype.restoreState = function () {
        return this.navigateTo(this._savedFocusedElement);
    };
    CanvasA11yManager.prototype.saveState = function (elem) {
        elem = elem || document.activeElement;
        this._savedFocusedElement = elem;
    };
    CanvasA11yManager.prototype.skipEvent = function (e) {
        e[CanvasA11yManager._SKIP_FLAG] = true;
    };
    CanvasA11yManager.prototype._shouldSkipEvent = function (e) {
        return e[CanvasA11yManager._SKIP_FLAG];
    };
    CanvasA11yManager.prototype._handleKeyDown = function (e) {
        if (this._shouldSkipEvent(e)) {
            return;
        }
        var currentElement = isElementFocusable(e.target) ?
            e.target : getFocusableParent(e.target, this._canvasElement);
        var elementToGo;
        if (isTab(e)) {
            var children = getFocusableChildren(this._canvasElement);
            if (children.length && currentElement !== children[children.length - 1]) {
                elementToGo = getNextFocusableElement(currentElement, this._canvasElement);
            }
        }
        else if (isShiftTab(e)) {
            var children = getFocusableChildren(this._canvasElement);
            if (children.length && currentElement !== children[0]) {
                elementToGo = getPrevFocusableElement(currentElement, this._canvasElement);
            }
        }
        else if (isEnter(e)) {
            var children = getFocusableChildren(currentElement);
            elementToGo = children.length ? children[0] : undefined;
        }
        else if (isEscape(e)) {
            elementToGo = getFocusableParent(currentElement, this._canvasElement);
        }
        if (elementToGo) {
            elementToGo.focus();
            e.preventDefault();
            e.stopPropagation();
        }
    };
    return CanvasA11yManager;
}());
CanvasA11yManager._SKIP_FLAG = 'a11y-skip';
exports.CanvasA11yManager = CanvasA11yManager;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_bundle_1 = __webpack_require__(254);
var dragZone_1 = __webpack_require__(193);
var sp_telemetry_1 = __webpack_require__(5);
var CanvasDragIcon_1 = __webpack_require__(195);
var CanvasStrings_resx_1 = __webpack_require__(8);
var CanvasDragZone_module_scss_1 = __webpack_require__(47);
var LINE_OFFSET_BOTTOM = 10;
var LINE_OFFSET_TOP = 13;
var CanvasDragZone = (function (_super) {
    __extends(CanvasDragZone, _super);
    function CanvasDragZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._dragIcon = new CanvasDragIcon_1.default();
        return _this;
    }
    CanvasDragZone._getZoneFromDragZonePosition = function (position, layout) {
        var zoneIndex = position[2];
        var zone = layout.zones && layout.zones.length > zoneIndex && layout.zones[zoneIndex];
        if (!zone) {
            throw new Error("ZoneNotFound, zoneIndex: " + zoneIndex);
        }
        return zone;
    };
    CanvasDragZone._getSectionFromDragZonePosition = function (position, zone) {
        var sectionIndex = position[1];
        var section = zone.sections && zone.sections.length > sectionIndex &&
            zone.sections[sectionIndex];
        if (!section) {
            throw new Error('SectionNotFound, sectionIndex: ${sectionIndex}');
        }
        return section;
    };
    CanvasDragZone._droppedOnTheSamePosition = function (oldPosition, newPosition) {
        var oldControlIndex = oldPosition[0], oldSectionIndex = oldPosition[1], oldZoneIndex = oldPosition[2];
        var newControlIndex = newPosition[0], newSectionIndex = newPosition[1], newZoneIndex = newPosition[2];
        return oldZoneIndex === newZoneIndex &&
            oldSectionIndex === newSectionIndex &&
            (oldControlIndex === newControlIndex - 1 ||
                oldControlIndex === newControlIndex);
    };
    CanvasDragZone._isValidWebpartPosition = function (position) {
        return position && position.length === 3;
    };
    CanvasDragZone._isValidZonePosition = function (position) {
        return position && position.length === 1;
    };
    CanvasDragZone.prototype.render = function () {
        var dragZoneStrings = {
            handleTitle: CanvasStrings_resx_1.default.DragZoneHandleTitle,
            moveStarted: CanvasStrings_resx_1.default.DragZoneMoveStarted,
            moveComplete: CanvasStrings_resx_1.default.DragZoneMoveComplete,
            moveCancelled: CanvasStrings_resx_1.default.DragZoneMoveCancelled,
            moveNotAllowed: CanvasStrings_resx_1.default.DragZoneMoveNotAllowed,
            moveInsideLevel: [
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelControl,
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelSection,
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelZone
            ]
        };
        var sectionDragZoneStrings = {
            handleTitle: CanvasStrings_resx_1.default.DragZoneHandleTitle,
            moveStarted: CanvasStrings_resx_1.default.DragZoneMoveStarted,
            moveComplete: CanvasStrings_resx_1.default.DragZoneMoveCompleteZone,
            moveCancelled: CanvasStrings_resx_1.default.DragZoneMoveCancelled,
            moveNotAllowed: CanvasStrings_resx_1.default.DragZoneMoveNotAllowed,
            moveInsideLevel: [
                CanvasStrings_resx_1.default.DragZoneMoveInsideLevelControl
            ]
        };
        var dragZoneProps = {
            treeLevelTagsBottomUp: [CanvasDragZone.controlZoneDragTag, CanvasDragZone.sectionDragTag, CanvasDragZone.zoneDragTag],
            dropPositionOffsetBottomPx: LINE_OFFSET_BOTTOM,
            dropPositionOffsetTopPx: LINE_OFFSET_TOP,
            onMoved: this._onWebpartMoved,
            onMoving: this._onWebpartMoveStart,
            canDropOnEmptyParent: true,
            dragHandleTag: CanvasDragZone.webpartDragHandleTag,
            isEnabled: this.props.isEnabled,
            icon: this._dragIcon.HTMLIcon,
            dragZoneStrings: dragZoneStrings,
            dataDragDisallowed: CanvasDragZone.fullWidthSectionTag,
            dataDragAreaDisallowedCss: CanvasDragZone_module_scss_1.default.disabledArea,
            scrollIntoView: this.props.store.scrollIntoView
        };
        var sectionDragZoneProps = {
            treeLevelTagsBottomUp: [CanvasDragZone.zoneDragTag],
            dropPositionOffsetBottomPx: LINE_OFFSET_BOTTOM,
            dropPositionOffsetTopPx: LINE_OFFSET_TOP,
            onMoved: this._onZoneMoved,
            onMoving: this._onZoneMoveStart,
            canDropOnEmptyParent: false,
            dragHandleTag: CanvasDragZone.zoneDragHandleTag,
            isEnabled: this.props.isEnabled,
            icon: this._dragIcon.HTMLIcon,
            dragZoneStrings: sectionDragZoneStrings,
            scrollIntoView: this.props.store.scrollIntoView
        };
        return (React.createElement(dragZone_1.DragZone, __assign({}, sectionDragZoneProps),
            React.createElement(dragZone_1.DragZone, __assign({}, dragZoneProps), this.props.children)));
    };
    CanvasDragZone.prototype._onWebpartMoveStart = function (position) {
        if (!CanvasDragZone._isValidWebpartPosition(position)) {
            return;
        }
        var control = this._getControlFromDragZonePosition(position);
        this._dragIcon.setMoveIconBasedOnControl(control);
    };
    CanvasDragZone.prototype._onZoneMoveStart = function (position) {
        if (!CanvasDragZone._isValidZonePosition(position)) {
            return;
        }
        var layout = this.props.store.canvasLayout;
        var zones = layout.zones;
        var oldZone = zones[position[0]];
        this._dragIcon.setMoveIconBasedOnZone(oldZone);
    };
    CanvasDragZone.prototype._onZoneMoved = function (oldPosition, newPosition) {
        if (oldPosition === newPosition ||
            !CanvasDragZone._isValidZonePosition(oldPosition) ||
            !CanvasDragZone._isValidZonePosition(newPosition) ||
            oldPosition[0] === newPosition[0] - 1 || oldPosition[0] === newPosition[0]) {
            return;
        }
        var moveMonitor = new sp_telemetry_1._QosMonitor('CanvasZoneMove');
        var layout = this.props.store.canvasLayout;
        var zones = layout.zones;
        try {
            var oldIndex = oldPosition[0];
            var newIndex = newPosition[0];
            var oldZone = zones[oldIndex];
            var newZoneIndex = 0;
            if (newIndex < zones.length) {
                newZoneIndex = zones[newIndex].index;
            }
            else {
                newZoneIndex = zones[zones.length - 1].index + 1;
            }
            layout.moveZone(oldZone, newZoneIndex);
            moveMonitor.writeSuccess();
        }
        catch (err) {
            moveMonitor.writeUnexpectedFailure('ExceptionMovingZone', err);
        }
    };
    CanvasDragZone.prototype._onWebpartMoved = function (oldPosition, newPosition) {
        if (oldPosition === newPosition ||
            !CanvasDragZone._isValidWebpartPosition(oldPosition) ||
            !CanvasDragZone._isValidWebpartPosition(newPosition) ||
            CanvasDragZone._droppedOnTheSamePosition(oldPosition, newPosition)) {
            return;
        }
        var moveMonitor = new sp_telemetry_1._QosMonitor('CanvasControlMove');
        try {
            var oldControl = this._getControlFromDragZonePosition(oldPosition);
            var oldCanvasPosition = oldControl.position;
            var newCanvasPosition = this._getNewPositionFromDragZonePosition(newPosition);
            this.props.store.canvasLayout.moveControl(oldControl, newCanvasPosition);
            moveMonitor.writeSuccess();
        }
        catch (err) {
            moveMonitor.writeUnexpectedFailure('ExceptionMovingControl', err);
        }
    };
    CanvasDragZone.prototype._getControlFromDragZonePosition = function (position) {
        var zone = CanvasDragZone._getZoneFromDragZonePosition(position, this.props.store.canvasLayout);
        var section = CanvasDragZone._getSectionFromDragZonePosition(position, zone);
        var ctrlIdx = position[0];
        var control = section.controls && section.controls.length > ctrlIdx &&
            section.controls[ctrlIdx];
        if (!control) {
            throw new Error('ControlNotFound, controlIndex: ${ctrlIdx}');
        }
        return control;
    };
    CanvasDragZone.prototype._getNewPositionFromDragZonePosition = function (position) {
        var zone = CanvasDragZone._getZoneFromDragZonePosition(position, this.props.store.canvasLayout);
        var section = zone &&
            CanvasDragZone._getSectionFromDragZonePosition(position, zone);
        var controlIndex = position[0];
        if (section.controls.length === 0) {
            controlIndex = 1;
        }
        else if (controlIndex === section.controls.length) {
            controlIndex = section.controls[section.controls.length - 1].position.controlIndex + 1;
        }
        else {
            controlIndex = section.controls[controlIndex].position.controlIndex;
        }
        var newCanvasPosition = {
            controlIndex: controlIndex,
            sectionIndex: section.index,
            sectionFactor: section.factor,
            zoneIndex: zone.index
        };
        return newCanvasPosition;
    };
    return CanvasDragZone;
}(React.Component));
CanvasDragZone.controlZoneDragTag = 'ControlZone';
CanvasDragZone.sectionDragTag = 'CanvasSection';
CanvasDragZone.zoneDragTag = 'CanvasZone';
CanvasDragZone.webpartDragHandleTag = 'WebpartHandle';
CanvasDragZone.zoneDragHandleTag = 'ZoneHandle';
CanvasDragZone.fullWidthSectionTag = 'CanvasFullWidth';
__decorate([
    office_ui_fabric_react_bundle_1.autobind
], CanvasDragZone.prototype, "_onWebpartMoveStart", null);
__decorate([
    office_ui_fabric_react_bundle_1.autobind
], CanvasDragZone.prototype, "_onZoneMoveStart", null);
__decorate([
    office_ui_fabric_react_bundle_1.autobind
], CanvasDragZone.prototype, "_onZoneMoved", null);
__decorate([
    office_ui_fabric_react_bundle_1.autobind
], CanvasDragZone.prototype, "_onWebpartMoved", null);
exports.default = CanvasDragZone;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasZonePropertyPaneControl_1 = __webpack_require__(196);
var sp_core_library_1 = __webpack_require__(4);
var sp_lodash_subset_1 = __webpack_require__(11);
var sp_telemetry_1 = __webpack_require__(5);
var CanvasStore_1 = __webpack_require__(9);
var CanvasZonePart_1 = __webpack_require__(49);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasFullWidthSection_1 = __webpack_require__(21);
var CanvasLayout = (function () {
    function CanvasLayout(webPartManager, renderCallBack) {
        this._webPartManager = webPartManager;
        this._render = renderCallBack;
        this._initialize();
    }
    CanvasLayout.generateNewLayoutIndex = function (sortedChildren, currentIdx) {
        if (!sortedChildren) {
            return undefined;
        }
        var sortedIndexes = sortedChildren.map(function (child) {
            return child.index;
        }).filter(function (item) {
            return item < currentIdx;
        });
        var newIdx = currentIdx;
        if (sortedIndexes.length > 0) {
            newIdx += sortedIndexes[sortedIndexes.length - 1];
        }
        return newIdx / 2;
    };
    CanvasLayout.cloneMergePosition = function (position1, position2) {
        return sp_lodash_subset_1.merge({}, position1, position2);
    };
    Object.defineProperty(CanvasLayout.prototype, "zones", {
        get: function () {
            var canvasZones = [];
            this._zonePartMap.forEach(function (zone) {
                canvasZones.push(zone);
            });
            return canvasZones.sort(function (zone1, zone2) {
                return zone1.index - zone2.index;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasLayout.prototype, "controlsState", {
        get: function () {
            return this._activeControlsState;
        },
        enumerable: true,
        configurable: true
    });
    CanvasLayout.prototype.fetchControlComponentById = function (controlId) {
        var componentValue = this._controlComponentMap.get(controlId);
        return componentValue && componentValue.component;
    };
    CanvasLayout.prototype.fetchCurrentSelection = function () {
        if (this._activeControlsState.selectedControlId) {
            var componentValue = this._controlComponentMap.get(this._activeControlsState.selectedControlId);
            if (componentValue) {
                return componentValue.position;
            }
            return CanvasLayout.undefinedControlPosition;
        }
        else {
            return {
                sectionIndex: undefined,
                zoneIndex: this._activeControlsState.selectedZoneIndex,
                controlIndex: undefined
            };
        }
    };
    CanvasLayout.prototype.fetchControlPositionById = function (controlId) {
        if (!controlId) {
            return CanvasLayout.undefinedControlPosition;
        }
        var componentValue = this._controlComponentMap.get(controlId);
        if (componentValue) {
            return componentValue.position;
        }
        return CanvasLayout.undefinedControlPosition;
    };
    CanvasLayout.prototype.fetchZone = function (index) {
        return this._zonePartMap.get(index);
    };
    CanvasLayout.prototype.addControlComponent = function (controlId, controlComponent) {
        var componentValue = this._controlComponentMap.get(controlId);
        sp_core_library_1.Validate.isNotNullOrUndefined(componentValue, 'componentValue');
        componentValue.component = controlComponent;
        this._controlComponentMap.set(controlId, componentValue);
    };
    CanvasLayout.prototype.addControl = function (canvasControl) {
        var qos = this._createQosScope('AddControl');
        if (!canvasControl ||
            !canvasControl.position ||
            canvasControl.position.zoneIndex === undefined) {
            this._handleMonitoredException(qos, 'InvalidControl', new Error('Could not add control as there is no control, no position, or a zone'), canvasControl);
            return undefined;
        }
        try {
            var curZoneIndex = canvasControl.position.zoneIndex;
            var controlId = void 0;
            var zone = this._zonePartMap.get(curZoneIndex);
            if (!zone) {
                var newCanvasZone = new CanvasZonePart_1.default(curZoneIndex, this._controlComponentMap, this._webPartManager);
                if (canvasControl.position.sectionIndex === undefined) {
                    canvasControl.position =
                        CanvasLayout.cloneMergePosition(canvasControl.position, { sectionIndex: CanvasLayout.firstLayoutIndex });
                }
                controlId = newCanvasZone.addControl(canvasControl);
                if (controlId) {
                    this._zonePartMap.set(curZoneIndex, newCanvasZone);
                }
                this._webPartManager.setPropertyPaneControl(newCanvasZone.index.toString(), new CanvasZonePropertyPaneControl_1.default(newCanvasZone, this._render));
            }
            else {
                if (canvasControl.position.sectionIndex !== undefined) {
                    controlId = zone.addControl(canvasControl);
                }
                else {
                    canvasControl.position = CanvasLayout.cloneMergePosition(canvasControl.position, {
                        zoneIndex: CanvasLayout.generateNewLayoutIndex(this.zones, curZoneIndex)
                    });
                    if (canvasControl.position.zoneIndex === undefined) {
                        this._handleMonitoredException(qos, 'ControlIndex', new Error('Could not generate a new control index'), canvasControl);
                        return undefined;
                    }
                    var newSecondaryZone = new CanvasZonePart_1.default(canvasControl.position.zoneIndex, this._controlComponentMap, this._webPartManager);
                    canvasControl.position =
                        CanvasLayout.cloneMergePosition(canvasControl.position, { sectionIndex: CanvasLayout.firstLayoutIndex });
                    controlId = newSecondaryZone.addControl(canvasControl);
                    if (controlId) {
                        this._zonePartMap.set(canvasControl.position.zoneIndex, newSecondaryZone);
                    }
                    this._webPartManager.setPropertyPaneControl(newSecondaryZone.index.toString(), new CanvasZonePropertyPaneControl_1.default(newSecondaryZone, this._render));
                }
            }
            if (controlId) {
                var componentValue = {
                    component: undefined,
                    position: canvasControl.position
                };
                this._controlComponentMap.set(controlId, componentValue);
            }
            qos.writeSuccess();
            return controlId;
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, canvasControl);
            return undefined;
        }
    };
    CanvasLayout.prototype.moveControl = function (control, newControlPosition) {
        if (!control || !newControlPosition) {
            return;
        }
        var zoneIndex = control.position.zoneIndex;
        if (zoneIndex === newControlPosition.zoneIndex) {
            var zone = this._zonePartMap.get(zoneIndex);
            zone.moveControl(control, newControlPosition);
        }
        else {
            var isFullWidth = CanvasFullWidthSection_1.default.isFullWidth(newControlPosition);
            var newControl = this._controlComponentMap.get(control.id).component.serialize();
            this._checkControlFullWidthProperty(newControlPosition, newControl);
            newControl.position = newControlPosition;
            newControl.addedFromPersistedData = true;
            this.removeControl(control.position);
            this._webPartManager.disposeWebparts(control.id);
            if (isFullWidth && !this._isZoneSectionEmpty(newControlPosition, 0)) {
                var curZoneIndex = newControl.position.zoneIndex;
                newControl.position = CanvasLayout.cloneMergePosition(newControl.position, {
                    zoneIndex: CanvasLayout.generateNewLayoutIndex(this.zones, curZoneIndex),
                    sectionIndex: CanvasLayout.firstLayoutIndex,
                    controlIndex: 1
                });
            }
            this.addControl(newControl);
        }
        this._render();
    };
    CanvasLayout.prototype.moveZone = function (zone, newZoneIndex) {
        if (!zone || !newZoneIndex) {
            return false;
        }
        this._zonePartMap.delete(zone.index);
        zone.changeZoneIndex(CanvasLayout.generateNewLayoutIndex(this.zones, newZoneIndex));
        this._zonePartMap.set(zone.index, zone);
        this._render();
        return true;
    };
    CanvasLayout.prototype.removeControl = function (controlPosition) {
        var qos = this._createQosScope('RemoveControl');
        if (!controlPosition) {
            this._handleMonitoredException(qos, 'InvalidPosition', new Error('Failed to remove control because control position is undefined'), controlPosition);
            return undefined;
        }
        try {
            var zone = this._zonePartMap.get(controlPosition.zoneIndex);
            if (!zone) {
                this._handleMonitoredException(qos, 'InvalidZone', new Error('Failed to remove control because zone does not exist'), controlPosition);
                return undefined;
            }
            var controlId = zone.removeControl(controlPosition);
            if (controlId) {
                this._controlComponentMap.delete(controlId);
            }
            qos.writeSuccess();
            return controlId;
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, controlPosition);
            return undefined;
        }
    };
    CanvasLayout.prototype.removeZone = function (index) {
        this._zonePartMap.delete(index);
    };
    CanvasLayout.prototype.fetchControl = function (controlPosition) {
        var qos = this._createQosScope('FetchControl');
        if (!controlPosition) {
            this._handleMonitoredException(qos, 'InvalidPosition', new Error('Failed to fetch control because control position is undefined'), controlPosition);
            return undefined;
        }
        try {
            var zone = this._zonePartMap.get(controlPosition.zoneIndex);
            if (!zone) {
                this._handleMonitoredException(qos, 'InvalidZone', new Error('Failed to fetch control because zone does not exist'), controlPosition);
                return undefined;
            }
            qos.writeSuccess();
            return zone.fetchControl(controlPosition);
        }
        catch (err) {
            this._handleMonitoredException(qos, 'Exception', err, controlPosition);
            return undefined;
        }
    };
    CanvasLayout.prototype.fetchAllControls = function () {
        var canvasControls = [];
        this.zones.forEach(function (zone) {
            var controls = zone.fetchAllControls();
            canvasControls = canvasControls.concat(controls);
        });
        return canvasControls;
    };
    CanvasLayout.prototype.isEmpty = function () {
        return this.fetchAllControls().length === 0;
    };
    CanvasLayout.prototype.dispose = function () {
        this._zonePartMap.clear();
        this._controlComponentMap.clear();
        this._resetActiveControlState();
    };
    CanvasLayout.prototype._isZoneSectionEmpty = function (position, index) {
        var zone = this._zonePartMap.get(position.zoneIndex);
        var sections = zone && zone.sections;
        return sections && sections[index] && sections[index].isEmpty();
    };
    CanvasLayout.prototype._checkControlFullWidthProperty = function (newCanvasPosition, control) {
        if (CanvasStore_1.default.isCanvasFullWidthSectionSupported &&
            CanvasFullWidthSection_1.default.isFullWidthControl(control)) {
            if (CanvasFullWidthSection_1.default.isFullWidth(newCanvasPosition)) {
                CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, true);
            }
            else if (!CanvasFullWidthSection_1.default.isFullWidth(newCanvasPosition)) {
                CanvasFullWidthSection_1.default.setFullWidthWebPartProperty(control, false);
            }
        }
    };
    CanvasLayout.prototype._initialize = function () {
        this._zonePartMap = new Map();
        this._controlComponentMap = new Map();
        this._resetActiveControlState();
    };
    CanvasLayout.prototype._createQosScope = function (scope) {
        return new sp_telemetry_1._QosMonitor("Canvas" + scope);
    };
    CanvasLayout.prototype._resetActiveControlState = function () {
        this._activeControlsState = {
            hoveredControlId: undefined,
            selectedControlId: undefined,
            selectedZoneIndex: undefined,
            deletedControlLayout: CanvasLayout.undefinedControlPosition,
            deleteCandidateControlLayout: CanvasLayout.undefinedControlPosition
        };
    };
    CanvasLayout.prototype._handleMonitoredException = function (qos, failureTag, err, props) {
        var extraData; 
        if (props && props.controlType) {
            props = props;
            if (props &&
                props.controlType !== CanvasControlType_1.default.RTE &&
                props.controlType !== CanvasControlType_1.default.WebPartZone) {
                extraData = { 'ControlPosition': props.position };
            }
            if (props && props.controlType === CanvasControlType_1.default.WebPartZone) {
                extraData = {
                    'id': props.webPartId,
                    'alias': props.webPartManifest.alias
                };
            }
        }
        else {
            extraData = { 'ControlPosition': props };
        }
        qos.writeUnexpectedFailure(failureTag, err, extraData);
    };
    return CanvasLayout;
}());
CanvasLayout.firstLayoutIndex = 1;
CanvasLayout.undefinedControlPosition = {
    zoneIndex: undefined,
    sectionIndex: undefined,
    controlIndex: undefined
};
exports.default = CanvasLayout;


/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_17__;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_1JArBGDet5Uj9pJOV/9sFw'];


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewDevices_1 = __webpack_require__(162);
var MobilePreviewClickStopBar_1 = __webpack_require__(163);
var MobilePreviewHeaderBar_1 = __webpack_require__(171);
var MobilePreviewDeviceView_1 = __webpack_require__(167);
var MobilePreviewDimensionInput_1 = __webpack_require__(169);
var MobilePreviewRotate_1 = __webpack_require__(177);
var MobilePreview_module_scss_1 = __webpack_require__(179);
var MobilePreview_resx_1 = __webpack_require__(18);
var DeviceType;
(function (DeviceType) {
    DeviceType[DeviceType["Phone"] = 0] = "Phone";
    DeviceType[DeviceType["Tablet"] = 1] = "Tablet";
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
var DeviceOrientation;
(function (DeviceOrientation) {
    DeviceOrientation[DeviceOrientation["Portrait"] = 0] = "Portrait";
    DeviceOrientation[DeviceOrientation["Landscape"] = 1] = "Landscape";
})(DeviceOrientation = exports.DeviceOrientation || (exports.DeviceOrientation = {}));
var MobilePreview = (function (_super) {
    __extends(MobilePreview, _super);
    function MobilePreview(props) {
        var _this = _super.call(this, props) || this;
        _this.inProgressURL = '';
        if (!_this.props.devices) {
            _this.devices = MobilePreviewDevices_1.mobilePreviewDevices;
        }
        else {
            _this.devices = _this.props.devices;
        }
        var deviceType = _this.props.deviceType || DeviceType.Phone;
        _this.defaultPhone = _this.devices.phones[_this.devices.phones.length - 1];
        _this.defaultTablet = _this.devices.tablets[_this.devices.tablets.length - 1];
        _this.state = {
            currentOrientation: deviceType === DeviceType.Phone ?
                DeviceOrientation.Portrait : DeviceOrientation.Landscape,
            currentDevice: deviceType === DeviceType.Phone ? _this.defaultPhone : _this.defaultTablet,
            deviceType: deviceType,
            url: window.location.href + '?Mode=Read'
        };
        _this._sortDevices();
        _this.state.currentDevice = props.deviceType === DeviceType.Phone ? _this.defaultPhone : _this.defaultTablet;
        return _this;
    }
    MobilePreview.prototype.render = function () {
        var _this = this;
        this._sortDevices();
        var mobilePreviewClickStopBar = React.createElement(MobilePreviewClickStopBar_1.default, { currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, devices: this.state.deviceType === DeviceType.Phone ? this.devices.phones : this.devices.tablets, deviceType: this.state.deviceType, onSelectClickStop: this._onClickstopChangeForm });
        var mobilePreviewHeaderBar = React.createElement(MobilePreviewHeaderBar_1.default, { onChangeURL: this._onChangedURLField, onExit: this.props.onExit, onClickURLSubmit: this._onClickURL, onChangeDeviceType: this._onClickChangeDeviceType });
        var mobilePreviewDeviceView = React.createElement(MobilePreviewDeviceView_1.default, { currentDevice: this.state.currentDevice, currentOrientation: this.state.currentOrientation, deviceType: this.state.deviceType, url: this.state.url });
        var mobilePreviewDimensionInput = React.createElement(MobilePreviewDimensionInput_1.default, { currentDevice: this.state.currentDevice, onChangedX: this._onChangedX, onChangedY: this._onChangedY });
        var mobilePreviewRotate = React.createElement(MobilePreviewRotate_1.default, { onRotate: this._onClickRotate, currentOrientation: this.state.currentOrientation });
        var containerClass = office_ui_fabric_react_1.css(MobilePreview_module_scss_1.default.mobilePreviewContainer, 'ms-Grid');
        return (React.createElement(office_ui_fabric_react_1.FocusTrapZone, null,
            React.createElement("div", { "data-sp-a11y-zone": '1', "data-sp-a11y-alertonfocusin": MobilePreview_resx_1.default.ScreenReaderMobilePreviewEntered, className: containerClass, ref: function (c) { return _this._mainDiv = c; } },
                mobilePreviewHeaderBar,
                mobilePreviewClickStopBar,
                React.createElement("div", { className: MobilePreview_module_scss_1.default.mobilePreviewDeviceContainer },
                    mobilePreviewDimensionInput,
                    mobilePreviewRotate,
                    mobilePreviewDeviceView))));
    };
    MobilePreview.prototype.componentDidMount = function () {
        if (this._mainDiv) {
            this._mainDiv.addEventListener('keydown', this._handleKeyDown, true);
        }
    };
    MobilePreview.prototype._onClickstopChangeForm = function (device) {
        this.setState({
            currentDevice: device,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onClickRotate = function (orientation) {
        this.setState({
            currentDevice: this.state.currentDevice,
            currentOrientation: orientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onClickChangeDeviceType = function (type) {
        this.setState({
            currentDevice: type === DeviceType.Phone ? this.defaultPhone : this.defaultTablet,
            currentOrientation: type === DeviceType.Phone ? DeviceOrientation.Portrait : DeviceOrientation.Landscape,
            deviceType: type,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedX = function (event) {
        var heightTarget = event.target;
        var customDevice = {
            name: 'Custom Device',
            width: +heightTarget.value,
            height: this.state.currentDevice.height
        };
        this.setState({
            currentDevice: customDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedY = function (event) {
        var heightTarget = event.target;
        var customDevice = {
            name: 'Custom Device',
            height: +heightTarget.value,
            width: this.state.currentDevice.width
        };
        this.setState({
            currentDevice: customDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.state.url
        });
    };
    MobilePreview.prototype._onChangedURLField = function (value) {
        this.inProgressURL = value;
    };
    MobilePreview.prototype._onClickURL = function () {
        if (this.inProgressURL === '' || this.inProgressURL === undefined) {
            return;
        }
        this.setState({
            currentDevice: this.state.currentDevice,
            currentOrientation: this.state.currentOrientation,
            deviceType: this.state.deviceType,
            url: this.inProgressURL
        });
    };
    MobilePreview.prototype._handleKeyDown = function (evt) {
        if (evt.keyCode === 27) {
            this.props.onExit();
        }
    };
    MobilePreview.prototype._sortDevices = function () {
        if (this.state.deviceType === DeviceType.Phone) {
            this.devices.phones.sort(this._comparePhones);
            this.defaultPhone = this.devices.phones[this.devices.phones.length - 1];
        }
        else {
            this.devices.tablets.sort(this._compareTablets);
            this.defaultTablet = this.devices.tablets[this.devices.tablets.length - 1];
        }
    };
    MobilePreview.prototype._comparePhones = function (deviceA, deviceB) {
        var aMeasure = deviceA.width;
        var bMeasure = deviceB.width;
        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
            aMeasure = deviceA.height;
            bMeasure = deviceB.height;
        }
        return bMeasure - aMeasure;
    };
    MobilePreview.prototype._compareTablets = function (deviceA, deviceB) {
        var aMeasure = deviceA.height;
        var bMeasure = deviceB.height;
        if (this.state.currentOrientation === DeviceOrientation.Landscape) {
            aMeasure = deviceA.width;
            bMeasure = deviceB.width;
        }
        return bMeasure - aMeasure;
    };
    return MobilePreview;
}(React.Component));
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_onClickstopChangeForm", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_onClickRotate", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_onClickChangeDeviceType", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_onChangedX", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_onChangedY", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_onChangedURLField", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_onClickURL", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_handleKeyDown", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_sortDevices", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_comparePhones", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreview.prototype, "_compareTablets", null);
exports.default = MobilePreview;


/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_20__;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(4);
var CanvasSection_1 = __webpack_require__(50);
__webpack_require__(51);
var CanvasControlType_1 = __webpack_require__(6);
var EmbeddedToolbox_1 = __webpack_require__(214);
var CanvasLayout_1 = __webpack_require__(16);
var CanvasDragZone_1 = __webpack_require__(15);
var FULL_WIDTH_ITEM_IDS = [
    'd1d91016-032f-456d-98a4-721247c305e8',
    'c4bd7b2f-7b6e-4599-8485-16504575f590' 
];
var CanvasFullWidthSection = (function (_super) {
    __extends(CanvasFullWidthSection, _super);
    function CanvasFullWidthSection(props, context) {
        var _this = _super.call(this, props, context) || this;
        var store = _this.context.store;
        _this._toolboxProps = {
            isLoading: true,
            isOpen: true,
            onItemClick: store.handleToolboxItemClick.bind(_this, CanvasLayout_1.default.undefinedControlPosition),
            row: undefined,
            toolboxItems: [],
            verticalPosition: undefined
        };
        return _this;
    }
    CanvasFullWidthSection.isFullWidth = function (position) {
        return position && position.sectionFactor === 0;
    };
    CanvasFullWidthSection.isFullWidthControl = function (control) {
        if (control && control.controlType === CanvasControlType_1.default.WebPartZone) {
            var webPartProps = control;
            return (webPartProps.webPartManifest && webPartProps.webPartManifest.supportsFullBleed) ||
                FULL_WIDTH_ITEM_IDS.indexOf(webPartProps.webPartId) !== -1;
        }
        return false;
    };
    CanvasFullWidthSection.setFullWidthWebPartProperty = function (control, value) {
        var webPartProps = control;
        if (webPartProps.webPartData) {
            webPartProps.webPartData.properties.isFullWidth = value;
        }
    };
    CanvasFullWidthSection.prototype.componentDidMount = function () {
        var _a = this.props, zoneIndex = _a.zoneIndex, section = _a.section, selectedPosition = _a.selectedPosition;
        var firstControlLayout = {
            zoneIndex: zoneIndex,
            sectionIndex: section.index,
            controlIndex: this._firstControlIdx,
            sectionFactor: section.factor
        };
        this._openFullWidthToolbox(firstControlLayout);
    };
    CanvasFullWidthSection.prototype._addToolBoxHint = function (nextCtrlPosition) {
    };
    CanvasFullWidthSection.prototype._getLayoutSectionClassName = function (isReadMode, isSectionSelected) {
        var layoutSectionClassName = _super.prototype._getLayoutSectionClassName.call(this, isReadMode, isSectionSelected);
        layoutSectionClassName +=
            office_ui_fabric_react_1.css({
                ' CanvasSectionFullWidth--read': isReadMode,
                ' CanvasSection--fullWidth': this.props.section.controls.length !== 0
            });
        return layoutSectionClassName;
    };
    CanvasFullWidthSection.prototype._shouldCenterAlignHint = function () {
        var store = this.context.store;
        return store.shouldCenterAlign;
    };
    CanvasFullWidthSection.prototype._getContentSelectionMechanism = function (firstControlLayout) {
        var store = this.context.store;
        return this.props.section.controls.length === 0 &&
            store.displayMode === sp_core_library_1.DisplayMode.Edit &&
            React.createElement(EmbeddedToolbox_1.default, __assign({}, this._toolboxProps));
    };
    Object.defineProperty(CanvasFullWidthSection.prototype, "_dragDisallowedAreaTag", {
        get: function () {
            return CanvasDragZone_1.default.fullWidthSectionTag;
        },
        enumerable: true,
        configurable: true
    });
    CanvasFullWidthSection.prototype._openFullWidthToolbox = function (position) {
        var store = this.context.store;
        var pos = position;
        store.fillToolboxItems(true, this._toolboxProps);
        this._toolboxProps.onItemClick = store.handleToolboxItemClick.bind(this, pos);
        this._toolboxProps.isOpen = true;
        this._toolboxProps.controlPosition = pos;
        this._toolboxProps.row = pos.zoneIndex - 1;
    };
    return CanvasFullWidthSection;
}(CanvasSection_1.default));
exports.default = CanvasFullWidthSection;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var React = __webpack_require__(1);
__webpack_require__(207);
var Utilities_1 = __webpack_require__(55);
var ButtonState;
(function (ButtonState) {
    ButtonState[ButtonState["Active"] = 0] = "Active";
    ButtonState[ButtonState["Disabled"] = 1] = "Disabled";
    ButtonState[ButtonState["Normal"] = 2] = "Normal";
})(ButtonState = exports.ButtonState || (exports.ButtonState = {}));
var ToolbarButton = (function (_super) {
    __extends(ToolbarButton, _super);
    function ToolbarButton(props) {
        return _super.call(this, props) || this;
    }
    ToolbarButton.prototype.render = function () {
        var buttonClassName = office_ui_fabric_react_1.css('ToolbarButton', this.props.className, {
            'ToolbarButton--disabled': this.props.disabled,
            'ToolbarButton--active': this.props.isActive
        });
        var iconCssClass = this.props.fabricIconKey ?
            "ms-Icon ms-Icon--" + this.props.fabricIconKey : (this.props.iconClassName || '');
        var isTouchDevice = Utilities_1.default.isTouchEnabled();
        var onClick = isTouchDevice ? undefined : this.props.onClick;
        var onMouseDown = isTouchDevice ? this.props.onClick : undefined;
        return (React.createElement("button", { type: 'button', "aria-disabled": this.props.disabled ? true : undefined, "aria-pressed": this.props.canBeActive ? this.props.isActive : undefined, className: buttonClassName, onClick: onClick, onMouseDown: onMouseDown, title: this.props.title, tabIndex: this.props.tabIndex, "data-automation-id": this.props.automationId, onKeyDown: this.props.onKeyDown ? this.props.onKeyDown : undefined, onBlur: this.props.onBlur, "data-drag-handle": this.props.dragHandleTag },
            React.createElement("i", { className: iconCssClass }),
            this.props.label));
    };
    return ToolbarButton;
}(React.Component));
ToolbarButton.defaultProps = {
    key: undefined,
    fabricIconKey: undefined,
    onClick: undefined,
    canBeActive: true,
    className: 'CanvasControlToolbar-item',
    disabled: false,
    isActive: false
};
exports.default = ToolbarButton;


/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_23__;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal = (function () {
    function DomTraversal() {
    }
    DomTraversal.getElementPath = function (parent, child, root) {
        root = root || document.body;
        var path = [];
        var pathElem = child;
        while (pathElem && pathElem !== document.body) {
            path.unshift(pathElem);
            if (pathElem === parent || pathElem === root) {
                break;
            }
            pathElem = pathElem.parentElement;
        }
        return path[0] === parent ? path : undefined;
    };
    DomTraversal.getLowestCommonAncestor = function (element1, element2, root) {
        root = root || document.body;
        var path1 = DomTraversal.getElementPath(root, element1);
        var path2 = DomTraversal.getElementPath(root, element2);
        if (path1 && path2 && path1[0] === path2[0]) {
            for (var i = 1; i < path1.length; i++) {
                if (path1[i] !== path2[i]) {
                    return path1[i - 1];
                }
            }
        }
        return undefined;
    };
    DomTraversal.getFirstMatchingParent = function (element, matcher, root, includeSelf) {
        if (includeSelf === void 0) { includeSelf = true; }
        root = root || document.body;
        if (!includeSelf && element) {
            element = element.parentElement;
        }
        while (element && element !== document.body) {
            if (matcher(element)) {
                return element;
            }
            if (element === root) {
                break;
            }
            element = element.parentElement;
        }
        return undefined;
    };
    return DomTraversal;
}());
exports.default = DomTraversal;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function CreateEmptyZoneLayout(zoneIndex, sectionIndex, controlIndex) {
    return {
        zoneIndex: zoneIndex,
        sectionIndex: sectionIndex,
        controlIndex: controlIndex
    };
}
exports.CreateEmptyZoneLayout = CreateEmptyZoneLayout;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(4);
var office_ui_fabric_react_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasDragZone_1 = __webpack_require__(15);
var CanvasStore_1 = __webpack_require__(9);
var ToolbarButton_1 = __webpack_require__(22);
__webpack_require__(210);
var CanvasStrings_resx_1 = __webpack_require__(8);
var Toolbar = (function (_super) {
    __extends(Toolbar, _super);
    function Toolbar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Toolbar.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, controlType = _a.controlType, displayMode = _a.displayMode, key = _a.key, fixedPosition = _a.fixedPosition;
        var layout;
        var isMultiColumn = false;
        switch (controlType) {
            case CanvasControlType_1.default.RTE:
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', role: 'toolbar', ref: function (ref) { return _this._domElement = ref; } },
                    this._getMoveHandle(CanvasDragZone_1.default.webpartDragHandleTag),
                    this._getDeleteButton()));
                break;
            case CanvasControlType_1.default.WebPartZone:
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', role: 'toolbar', ref: function (ref) { return _this._domElement = ref; } },
                    this._getEditButton(),
                    this._getMoveHandle(CanvasDragZone_1.default.webpartDragHandleTag),
                    this._getDeleteButton()));
                break;
            case CanvasControlType_1.default.FullWidth:
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', role: 'toolbar' },
                    this._getMoveHandle(CanvasDragZone_1.default.zoneDragHandleTag),
                    this._getDeleteButton()));
                break;
            default:
                isMultiColumn = true;
                layout = (React.createElement("div", { className: className || 'CanvasControlToolbar', style: fixedPosition, role: 'toolbar', ref: function (ref) { return _this._domElement = ref; } },
                    this._getEditButton(controlType),
                    this._getMoveHandle(CanvasDragZone_1.default.zoneDragHandleTag),
                    this._getDeleteButton()));
                break;
        }
        return (sp_core_library_1.DisplayMode.Edit === displayMode &&
            (!isMultiColumn || CanvasStore_1.default.isPolarisMultiColumnEditEnabled) &&
            React.createElement(office_ui_fabric_react_1.FocusZone, { isCircularNavigation: true }, layout));
    };
    Toolbar.prototype.getHeight = function () {
        return this._domElement.clientHeight;
    };
    Object.defineProperty(Toolbar.prototype, "toolBarElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Toolbar.prototype, "_isWebPart", {
        get: function () {
            return this.props.controlType === CanvasControlType_1.default.WebPartZone ||
                this.props.controlType === CanvasControlType_1.default.RTE;
        },
        enumerable: true,
        configurable: true
    });
    Toolbar.prototype._handleConfigureButtonClicked = function () {
        this.props.onConfigureButtonClick(this.props.id);
    };
    Toolbar.prototype._handleDeleteButtonClicked = function () {
        this.props.onDeleteButtonClick(this.props.row, this.props.controlPosition);
    };
    Toolbar.prototype._getDeleteButton = function () {
        return (React.createElement(ToolbarButton_1.default, { key: 'delete' + this.props.key, canBeActive: false, fabricIconKey: 'Delete', onClick: this._handleDeleteButtonClicked, title: this._isWebPart ? CanvasStrings_resx_1.default.WebpartToolbarDeleteButtonTitle : CanvasStrings_resx_1.default.ZoneToolbarDeleteButtonTitle, automationId: 'deleteButton' }));
    };
    Toolbar.prototype._getEditButton = function (controlType) {
        var iconClassName = 'ms-Icon ';
        switch (controlType) {
            case CanvasControlType_1.default.FullWidth:
                iconClassName += 'singleColumn';
                break;
            case CanvasControlType_1.default.OneColumn:
                iconClassName += 'singleColumn';
                break;
            case CanvasControlType_1.default.OneThirdColumnLeft:
                iconClassName += office_ui_fabric_react_1.getRTL() ? 'columnLeftTwoThirds' : 'columnRightTwoThirds';
                break;
            case CanvasControlType_1.default.OneThirdColumnRight:
                iconClassName += office_ui_fabric_react_1.getRTL() ? 'columnRightTwoThirds' : 'columnLeftTwoThirds';
                break;
            case CanvasControlType_1.default.ThreeColumns:
                iconClassName += 'tripleColumn';
                break;
            case CanvasControlType_1.default.TwoColumns:
                iconClassName += 'doubleColumn';
                break;
        }
        return (React.createElement(ToolbarButton_1.default, { key: 'edit' + this.props.key, canBeActive: false, fabricIconKey: controlType ? undefined : 'Edit', onClick: this._handleConfigureButtonClicked, title: this._isWebPart ? CanvasStrings_resx_1.default.WebpartToolbarConfigButtonTitle : CanvasStrings_resx_1.default.ZoneToolbarConfigButtonTitle, automationId: 'configureButton', iconClassName: iconClassName }));
    };
    Toolbar.prototype._getMoveHandle = function (handleTag) {
        return (CanvasStore_1.default.isReorderingSupported &&
            React.createElement(ToolbarButton_1.default, { key: 'move' + this.props.key, canBeActive: false, fabricIconKey: 'Move', title: this._isWebPart ? CanvasStrings_resx_1.default.WebpartToolbarMoveButtonTitle : CanvasStrings_resx_1.default.ZoneToolbarMoveButtonTitle, automationId: 'moveButton', dragHandleTag: handleTag }));
    };
    return Toolbar;
}(React.Component));
__decorate([
    office_ui_fabric_react_1.autobind
], Toolbar.prototype, "getHeight", null);
__decorate([
    office_ui_fabric_react_1.autobind
], Toolbar.prototype, "_handleConfigureButtonClicked", null);
__decorate([
    office_ui_fabric_react_1.autobind
], Toolbar.prototype, "_handleDeleteButtonClicked", null);
exports.default = Toolbar;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(111);


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RteA11y_module_scss_1 = __webpack_require__(215);
var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
    KeyCodes[KeyCodes["Tab"] = 9] = "Tab";
    KeyCodes[KeyCodes["F10"] = 121] = "F10";
    KeyCodes[KeyCodes["P"] = 80] = "P";
})(KeyCodes = exports.KeyCodes || (exports.KeyCodes = {}));
function isEscape(e) {
    return isKey(KeyCodes.Escape, e);
}
exports.isEscape = isEscape;
function isEnter(e) {
    return isKey(KeyCodes.Enter, e);
}
exports.isEnter = isEnter;
function isShiftTab(e) {
    return isKey(KeyCodes.Tab, e, false, false, true);
}
exports.isShiftTab = isShiftTab;
function isTab(e) {
    return isKey(KeyCodes.Tab, e);
}
exports.isTab = isTab;
function isKey(keyCode, e, allowAlt, allowCtrl, allowShift) {
    if (allowAlt === void 0) { allowAlt = false; }
    if (allowCtrl === void 0) { allowCtrl = false; }
    if (allowShift === void 0) { allowShift = false; }
    return e.keyCode === keyCode &&
        ((allowAlt && e.altKey) || (!allowAlt && !e.altKey)) &&
        ((allowCtrl && e.ctrlKey) || (!allowCtrl && !e.ctrlKey)) &&
        ((allowShift && e.shiftKey) || (!allowShift && !e.shiftKey));
}
exports.isKey = isKey;
function getFocusableChildren(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var children = [];
    for (var _i = 0, _a = getFocusableDescendants(elem, ignoreTabIndex); _i < _a.length; _i++) {
        var descendant = _a[_i];
        if (isElementFocusableChildOf(descendant, elem)) {
            children.push(descendant);
        }
    }
    return children;
}
exports.getFocusableChildren = getFocusableChildren;
function isElementFocusable(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var tagName = elem.tagName.toLowerCase();
    if (elem
        && !elem.hidden
        && elem.offsetParent
        && window.getComputedStyle(elem).display !== 'none'
        && window.getComputedStyle(elem).visibility !== 'hidden') {
        var hasTabIndex = elem.hasAttribute('tabindex');
        var tabindex = parseInt(elem.getAttribute('tabindex'), 10);
        if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
            return false;
        }
        if (tagName === 'a' && !!elem.href ||
            elem.isContentEditable) {
            return true;
        }
        if ((tagName === 'button' ||
            tagName === 'input' ||
            tagName === 'select' ||
            tagName === 'textarea') && !elem.disabled) {
            return true;
        }
        if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
            return true;
        }
        if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
            return true;
        }
    }
    return false;
}
exports.isElementFocusable = isElementFocusable;
function getFocusableParent(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var parent = elem;
    do {
        parent = parent.parentElement;
    } while (!isElementFocusable(parent) && parent !== topElement);
    return parent;
}
exports.getFocusableParent = getFocusableParent;
function queryFocusableSelector(elem) {
    var selector = 'button,input,textarea,select,a[href]:not([href=\'\']),\
      [tabindex],[contenteditable=\'true\'], [data-is-focusable=\'true\']';
    return elem.querySelectorAll(selector);
}
function getFirstFocusableChild(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            return node;
        }
    }
    return undefined;
}
exports.getFirstFocusableChild = getFirstFocusableChild;
function getFocusableDescendants(elem, ignoreTabIndex) {
    if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
    var descendants = [];
    var nodes = queryFocusableSelector(elem);
    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        if (isElementFocusable(node, ignoreTabIndex)) {
            descendants.push(node);
        }
    }
    return descendants;
}
exports.getFocusableDescendants = getFocusableDescendants;
function getFocusableSiblings(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var children = getFocusableChildren(getFocusableParent(elem, topElement));
    var siblings = [];
    var insertPointer = 0;
    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
        var child = children_1[_i];
        if (child !== elem) {
            siblings.splice(insertPointer++, 0, child);
        }
        else {
            insertPointer = 0;
        }
    }
    return siblings;
}
exports.getFocusableSiblings = getFocusableSiblings;
function getNextFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[0];
}
exports.getNextFocusableElement = getNextFocusableElement;
function getPrevFocusableElement(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    var siblings = getFocusableSiblings(elem, topElement);
    return siblings[siblings.length - 1];
}
exports.getPrevFocusableElement = getPrevFocusableElement;
function isElementFocusableChildOf(elem, ancestor) {
    var parent = elem.parentElement;
    while (parent.tagName !== 'BODY') {
        if (parent !== ancestor) {
            return true;
        }
        if (isElementFocusable(parent)) {
            break;
        }
        parent = parent.parentElement;
    }
    return false;
}
exports.isElementFocusableChildOf = isElementFocusableChildOf;
function navigateInside(elem) {
    var children = getFocusableChildren(elem);
    if (children.length) {
        children[0].focus();
        return true;
    }
    else {
        return false;
    }
}
exports.navigateInside = navigateInside;
function navigateTo(elem) {
    if (isElementFocusable(elem)) {
        elem.focus();
        return true;
    }
    else {
        return navigateInside(elem);
    }
}
exports.navigateTo = navigateTo;
function navigateOutOf(elem, topElement) {
    if (topElement === void 0) { topElement = document.body; }
    topElement = topElement || document.body;
    getFocusableParent(elem, topElement).focus();
}
exports.navigateOutOf = navigateOutOf;
var ariaAlertElementId = 'aria_alert_' + Math.random().toString().substr(2);
function ariaAlert(message) {
    var oldAlert = document.querySelector('#' + ariaAlertElementId);
    if (oldAlert) {
        document.body.removeChild(oldAlert);
    }
    var alertNode = document.createElement('p');
    alertNode.classList.add(RteA11y_module_scss_1.default.screenReaderOnly);
    alertNode.setAttribute('role', 'alert');
    alertNode.setAttribute('id', ariaAlertElementId);
    var alertText = document.createTextNode(message);
    alertNode.appendChild(alertText);
    document.body.appendChild(alertNode);
}
exports.ariaAlert = ariaAlert;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CKEDITOR_FLIGHT_ID = 955;
exports.CKEDITOR_TABLEPASTE_FLIGHT_ID = 958;
exports.CKEDITOR_IMAGEPASTE_FLIGHT_ID = 975;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_1 = __webpack_require__(4);
var CKLoader_1 = __webpack_require__(216);
__webpack_require__(217);
var CKEditorFlights_1 = __webpack_require__(29);
var ImageUtilities_1 = __webpack_require__(218);
var office_ui_fabric_react_2 = __webpack_require__(0);
var CKTextEditor = (function () {
    function CKTextEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack) {
        this._config = config;
        this._editorElement = editorElement;
        this._handleSelectionChange = selectionChangeCallback;
        this._handleTextChange = textChangeCallback;
        this._onReadyCallback = onReadyCallback;
        this._startupFocus = startUpFocus;
        this._onImagePasteCallBack = onImagePasteCallBack;
        this._onPasteCallback = onPasteCallback;
        this._onContextMenuCallBack = onContextMenuCallBack;
        this._initialize(currentHTML);
        this._blockStyles =
            this._config.supportedFormatsArray.filter(function (format) { return format.isBlockStyle; });
        this._async = new office_ui_fabric_react_2.Async(this);
    }
    CKTextEditor.preloadEditor = function (config) {
        try {
            CKTextEditor.moduleLoader.loadModule(config.editorSource);
        }
        catch (error) {
            sp_telemetry_1._TraceLogger.logError(CKTextEditor.logSource, error);
        }
    };
    CKTextEditor.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack) {
        return new Promise(function (resolve) {
            CKTextEditor.moduleLoader.loadModule(config.editorSource).then(function () {
                var editor = new CKTextEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, function () { resolve(editor); }, onImagePasteCallBack, onPasteCallback, onContextMenuCallBack);
            }).catch(function (error) {
                sp_telemetry_1._TraceLogger.logError(CKTextEditor.logSource, error);
            });
        });
    };
    CKTextEditor._getSelectedLink = function (editor) {
        var selection = editor.getSelection();
        var selectedElement = selection.getSelectedElement();
        if (!selectedElement || !selectedElement.is('a')) {
            var ranges = selection.getRanges();
            if (ranges && ranges.length) {
                ranges[0].shrink(CKEDITOR.SHRINK_TEXT);
                selectedElement = editor.elementPath(ranges[0].getCommonAncestor()).contains('a', true);
            }
        }
        return selectedElement;
    };
    CKTextEditor._getSelectedText = function (editor) {
        var sel = editor.getSelection();
        if (sel) {
            var startElement = sel.getStartElement();
            if (startElement) {
                var startElementValue = startElement.$;
                if (startElement && startElement.getName() === 'a') {
                    return startElementValue.innerText;
                }
            }
            return sel.getSelectedText();
        }
    };
    Object.defineProperty(CKTextEditor.prototype, "_IS_CKEDITOR_TABLEPASTE_FLIGHTED", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(CKEditorFlights_1.CKEDITOR_TABLEPASTE_FLIGHT_ID);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CKTextEditor.prototype, "_IS_CKEDITOR_IMAGEPASTE_FLIGHTED", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(CKEditorFlights_1.CKEDITOR_IMAGEPASTE_FLIGHT_ID);
        },
        enumerable: true,
        configurable: true
    });
    CKTextEditor.prototype._initialize = function (currentHTML) {
        this._editorElement.contentEditable = 'true';
        var config = {
            allowedContent: 'strong b em i u h2 h3 h4 blockquote ul ol li a[href, target];\
        p h2 h3 h4 li(ql-align-*,ql-indent-*,quote-true); *{text-align}',
            on: {
                change: this._handleTextChange,
                selectionChange: this._handleSelectionChangeConvert
            },
            removePlugins: 'toolbar,contextmenu,menubutton,scayt,liststyle,table,tabletools,magicline,link',
            extraPlugins: 'justify',
            removeButtons: '',
            stylesSet: false,
            toolbar: [],
            startupFocus: this._startupFocus
        };
        if (this._IS_CKEDITOR_TABLEPASTE_FLIGHTED) {
            var allowedStyles = 'width,border,line-height,padding,margin-bottom,margin-top;\
          ,margin-left,margin-right,font-size,border-bottom,border-left;\
          border-top,border-right,text-align';
            config.extraAllowedContent = {
                'tbody thead tfoot tr th td caption col colgroup footer': true,
                'table': {
                    attributes: 'width,border,cellpadding,cellspacing,align',
                    styles: '*'
                },
                'tr': {
                    attributes: 'height,rowspan,colspan,align',
                    styles: allowedStyles
                },
                'td': {
                    attributes: 'width,colspan,rowspan,align,valign',
                    styles: allowedStyles
                },
                'th': {
                    attributes: 'align,valign',
                    styles: allowedStyles
                },
                'td p': {
                    attributes: 'align',
                    styles: 'text-align'
                },
                'th p': {
                    attributes: 'align',
                    styles: 'text-align'
                }
            };
            config.removePlugins = 'toolbar,menubutton,scayt,liststyle,magicline,link';
            config.keystrokes = [
                [CKEDITOR.CTRL + CKEDITOR.SHIFT + 68, 'rowDelete'],
                [CKEDITOR.CTRL + CKEDITOR.SHIFT + 65, 'rowInsertBefore'],
                [CKEDITOR.CTRL + CKEDITOR.SHIFT + 90, 'rowInsertAfter'] 
            ];
        }
        config.disableNativeSpellChecker = false;
        this._editor = CKEDITOR.inline(this._editorElement, config);
        this._editor.setData(currentHTML);
        this._addCustomToolbarCommands();
    };
    CKTextEditor.prototype._addCustomToolbarCommands = function () {
        this._editor.addCommand('unlink', {
            exec: function (editor) {
                var linkStyle = new CKEDITOR.style({
                    element: 'a',
                    type: CKEDITOR.STYLE_INLINE,
                    alwaysRemoveElement: 1
                });
                editor.removeStyle(linkStyle);
                return true;
            }
        });
        this._editor.addCommand('link', {
            contextSensitive: true,
            exec: function (editor, data) {
                if (!data) {
                    editor.execCommand('unlink');
                }
                else {
                    var elem = CKTextEditor._getSelectedLink(editor);
                    if (elem) {
                        elem.setAttribute('href', data.linkValue);
                        elem.setAttribute('data-cke-saved-href', data.linkValue);
                        elem.setHtml(data.linkText);
                        elem.setAttribute('target', '_blank');
                    }
                    else {
                        var linkStyle = new CKEDITOR.style({
                            name: 'link',
                            element: 'a',
                            type: CKEDITOR.STYLE_INLINE,
                            attributes: { 'href': data.linkValue, 'target': '_blank' }
                        });
                        if (CKTextEditor._getSelectedText(editor) !== data.linkText || data.linkText === '') {
                            var element = new CKEDITOR.dom.element('a');
                            if (data.linkText && data.linkText !== '') {
                                element.setHtml(data.linkText);
                            }
                            else {
                                element.setHtml(data.linkValue);
                            }
                            element.setAttributes({ 'href': data.linkValue, 'target': '_blank' });
                            editor.insertElement(element);
                        }
                        else {
                            editor.applyStyle(linkStyle);
                        }
                    }
                }
                return true;
            },
            refresh: function (editor, path) {
                var element = path.lastElement && path.lastElement.getAscendant('a', true);
                if (element && element.getName() === 'a' && element.getAttribute('href') && element.getChildCount()) {
                    this.setState(CKEDITOR.TRISTATE_ON);
                }
                else {
                    this.setState(CKEDITOR.TRISTATE_OFF);
                }
            }
        });
        this._editor.addCommand('heading2', this._getHeadingCommandDefinition('h2'));
        this._editor.addCommand('heading3', this._getHeadingCommandDefinition('h3'));
        this._editor.addCommand('heading4', this._getHeadingCommandDefinition('h4'));
        this._editor.on('blur', this._handleSelectionChangeConvert);
        this._editor.on('loaded', this._handlePluginsLoaded);
        this._editor.on('instanceReady', this._handleInstanceReady);
        this._editor.on('paste', this._handlePaste);
        this._editor.on('beforePaste', this._onBeforePaste);
        this._editor.on('afterPaste', this._handleAfterPaste);
        if (this._IS_CKEDITOR_TABLEPASTE_FLIGHTED) {
            var self_1 = this;
            this._editor.on('contentDom', function () {
                this.editable().attachListener(this.editable(), 'contextmenu', function (evt) {
                    var target = evt.data.getTarget() && evt.data.getTarget().$;
                    if (target) {
                        var tagName = target.tagName;
                        var parentTagName = target.parentElement && target.parentElement.tagName;
                        if (tagName === 'TD' || parentTagName === 'TD') {
                            evt.stop();
                            evt.data.preventDefault();
                            self_1._onContextMenuCallBack(true, target);
                        }
                    }
                }, undefined, undefined, 0);
            });
        }
    };
    CKTextEditor.prototype.clearFormatting = function (start, end) {
        this.format(start, end, { removeFormat: true });
        var sel = this._editor.getSelection();
        if (sel) {
            var ckRange = sel.getRanges();
            var range = { start: 0, end: 0 };
            if (ckRange && ckRange.length > 0) {
                range.start = ckRange[0].startOffset;
                range.end = ckRange[0].endOffset;
                range.text = CKTextEditor._getSelectedText(this._editor);
                var formatsToClear = {};
                for (var _i = 0, _a = this._blockStyles; _i < _a.length; _i++) {
                    var format = _a[_i];
                    formatsToClear[format.editorKey] = false;
                }
                this.format(start, end, formatsToClear, true);
            }
        }
    };
    CKTextEditor.prototype.destroy = function () {
        this._editorElement.removeEventListener('keyup', this._fakeSelectionChange);
        this._editorElement.removeEventListener('mouseup', this._fakeSelectionChange);
        var data = this._editor.getData();
        this._editor.destroy();
        return data;
    };
    CKTextEditor.prototype.focus = function () {
        this._editor.focus();
    };
    CKTextEditor.prototype.getSelectedLink = function () {
        var selectedLink = CKTextEditor._getSelectedLink(this._editor);
        if (selectedLink && selectedLink.$) {
            return selectedLink.$.getAttribute('href');
        }
        else {
            return '';
        }
    };
    CKTextEditor.prototype.format = function (start, end, formats, applyAllFormatsToLine) {
        for (var formatKey in formats) {
            var command = this._editor.getCommand(formatKey);
            if (command) {
                if (formats[formatKey] !== (command.state === CKEDITOR.TRISTATE_ON)) {
                    if (formatKey === 'link') {
                        if (formats[formatKey] === false) {
                            this._editor.execCommand(formatKey, formats[formatKey]);
                        }
                        else {
                            var textKey = 'linkText';
                            this._editor.execCommand(formatKey, {
                                linkValue: formats[formatKey],
                                linkText: formats[textKey]
                            });
                        }
                    }
                    else {
                        this._editor.execCommand(formatKey, formats[formatKey]);
                    }
                }
            }
        }
    };
    CKTextEditor.prototype.formatTable = function (format, target) {
        var command = this._editor.getCommand(format);
        var sel = this._editor.getSelection();
        var temp = CKEDITOR.dom.element.get(target);
        if (sel) {
            sel.selectElement(temp);
            this._editor.selectionChange(true);
            if (!(sel.getStartElement() && sel.getStartElement().getAscendant('table'))) {
                return;
            }
        }
        if (command) {
            command.enable();
            command.exec(format);
        }
    };
    CKTextEditor.prototype.getBounds = function (position) {
        var left = 0, top = 0;
        var sel = this._editor.getSelection();
        if (sel) {
            var ranges = sel.getRanges();
            if (ranges && ranges.length) {
                var node = ranges[0].startContainer.$;
                var docRange = document.createRange();
                docRange.selectNodeContents(node);
                var selectionRects = docRange.getClientRects();
                if (selectionRects && selectionRects.length) {
                    var editorRect = this._editor.element.$.getBoundingClientRect();
                    left = selectionRects[0].left - editorRect.left;
                    top = selectionRects[0].top - editorRect.top;
                }
            }
        }
        return { left: left, top: top };
    };
    CKTextEditor.prototype.getFormatValue = function (start, end, format) {
        if (format.key === 'link') {
            var selectedLink = CKTextEditor._getSelectedLink(this._editor);
            return selectedLink ? selectedLink.getAttribute('href') : false;
        }
        return false;
    };
    CKTextEditor.prototype.getSelection = function () {
        var sel = this._editor.getSelection();
        if (sel) {
            var ranges = sel ? sel.getRanges() : undefined;
            if (ranges && ranges.length) {
                if (this._editor.element.contains(ranges[0].getCommonAncestor())) {
                    this._lastSelectedRanges = ranges;
                }
                return {
                    start: ranges[0].startOffset,
                    end: ranges[0].endOffset,
                    text: CKTextEditor._getSelectedText(this._editor)
                };
            }
        }
        return undefined;
    };
    CKTextEditor.prototype.getText = function (range) {
        return this._editor.getData();
    };
    CKTextEditor.prototype.getHTML = function () {
        return this._editor.getData();
    };
    CKTextEditor.prototype.getEditorType = function () {
        return 'CKEditor';
    };
    CKTextEditor.prototype.isFormatAppliedToRange = function (start, end, format) {
        var command = this._editor.getCommand(format.editorKey);
        return command && (command.state === CKEDITOR.TRISTATE_ON);
    };
    CKTextEditor.prototype.onReady = function (callback) {
        this._onReadyCallback = callback;
    };
    CKTextEditor.prototype.setSelection = function (range) {
        this.focus();
        var sel = this._editor.getSelection();
        if (sel) {
            if (this._lastSelectedRanges) {
                sel.selectRanges(this._lastSelectedRanges);
            }
            else {
                var ckRange = sel.getRanges();
                if (ckRange && ckRange.length > 0 && range.start !== -1) {
                    ckRange[0].startOffset = range.start;
                    ckRange[0].endOffset = range.end;
                    try {
                        sel.selectRanges(ckRange);
                    }
                    catch (error) {
                        sp_telemetry_1._TraceLogger.logError(CKTextEditor.logSource, error);
                    }
                }
            }
        }
    };
    CKTextEditor.prototype._handleSelectionChangeConvert = function (evt) {
        var sel = this._editor.getSelection();
        var newRange = undefined;
        var forceUpdate = false;
        if (evt) {
            switch (evt.name) {
                case 'selectionChange':
                    sel = evt.data.selection;
                    break;
                case 'blur':
                    sel = undefined;
                    break;
            }
            var ranges = sel ? sel.getRanges() : undefined;
            newRange = ranges && ranges.length ? {
                start: ranges[0].startOffset,
                end: ranges[0].endOffset,
                text: CKTextEditor._getSelectedText(this._editor)
            } : undefined;
            forceUpdate = ranges && ranges.length &&
                this._lastSelectedRanges && this._lastSelectedRanges.length &&
                ranges[0].startContainer !== this._lastSelectedRanges[0].startContainer;
        }
        this._handleSelectionChange(newRange, forceUpdate);
    };
    CKTextEditor.prototype._isHeadingActive = function (tagName, path) {
        path = path || this._editor.elementPath();
        var element = path.lastElement && path.lastElement.getAscendant(tagName, true);
        return (element && element.getName() === tagName);
    };
    CKTextEditor.prototype._getHeadingCommandDefinition = function (tagName) {
        var isHeadingActive = this._isHeadingActive;
        return {
            contextSensitive: true,
            exec: function (editor) {
                var styleDef;
                switch (tagName) {
                    case 'h2':
                        styleDef = editor.config.format_h2;
                        break;
                    case 'h3':
                        styleDef = editor.config.format_h3;
                        break;
                    case 'h4':
                        styleDef = editor.config.format_h4;
                        break;
                }
                if (!styleDef) {
                    return false;
                }
                var style = new CKEDITOR.style(styleDef);
                if (isHeadingActive(tagName)) {
                    editor.removeStyle(style);
                }
                else {
                    editor.applyStyle(style);
                }
                return true;
            },
            refresh: function (editor, path) {
                this.setState(isHeadingActive(tagName, path) ? CKEDITOR.TRISTATE_ON : CKEDITOR.TRISTATE_OFF);
            }
        };
    };
    CKTextEditor.prototype._fakeSelectionChange = function () {
        this._handleSelectionChangeConvert();
    };
    CKTextEditor.prototype._handlePluginsLoaded = function (evt) {
        var _loop_1 = function (command) {
            if (this_1._config.supportedFormatsArray.filter(function (format) { return format.editorKey === command; }).length) {
                this_1._editor.commands[command].on('state', this_1._handleSelectionChangeConvert);
            }
        };
        var this_1 = this;
        for (var command in this._editor.commands) {
            _loop_1(command);
        }
        this._editorElement.addEventListener('keyup', this._fakeSelectionChange);
        this._editorElement.addEventListener('mouseup', this._fakeSelectionChange);
    };
    CKTextEditor.prototype._handleInstanceReady = function () {
        this._onReadyCallback();
    };
    CKTextEditor.prototype._handleAfterPaste = function () {
        var _this = this;
        this._async.setTimeout(function () {
            if (_this._onPasteCallback && !_this._isAfterPasteCalled) {
                _this._onPasteCallback(false);
                _this._isAfterPasteCalled = true;
            }
        }, CKTextEditor._PASTETIMEOUT);
    };
    CKTextEditor.prototype._handlePaste = function (evt) {
        var pastedData = evt.data && evt.data.dataValue;
        if (pastedData) {
            var tables = pastedData.match(CKTextEditor._TABLE_REGEX);
            if (tables && tables.length > 0) {
                sp_telemetry_1._EngagementLogger.logEvent('Table.Paste');
                if (this._IS_CKEDITOR_TABLEPASTE_FLIGHTED) {
                    var extraParagraph = '<p></p>';
                    if (this._editor.getData() === '' && tables.length === 1) {
                        evt.data.dataValue = extraParagraph + pastedData;
                    }
                    evt.data.dataValue += extraParagraph;
                    if (this._IS_CKEDITOR_IMAGEPASTE_FLIGHTED) {
                        this._onImagePasteInsideTable(pastedData);
                    }
                }
            }
        }
        if (this._IS_CKEDITOR_IMAGEPASTE_FLIGHTED) {
            if (pastedData) {
                var images = pastedData.match(CKTextEditor._IMAGE_REGEX_WITH_SRC);
                if (images && images.length > 0 && this._IS_CKEDITOR_IMAGEPASTE_FLIGHTED) {
                    this._onImagePasteInDataValue(evt, images, pastedData);
                }
            }
            else if (evt.data.dataTransfer) {
                for (var i = 0; i < evt.data.dataTransfer.getFilesCount(); i++) {
                    sp_telemetry_1._EngagementLogger.logEvent(CKTextEditor._IMAGE_PASTE);
                    this._onImagePasteInChrome(evt.data.dataTransfer.getFile(i));
                }
            }
        }
        this._handleAfterPaste();
    };
    CKTextEditor.prototype._onBeforePaste = function () {
        var _this = this;
        this._async.setTimeout(function () {
            if (_this._onPasteCallback) {
                _this._onPasteCallback(true);
                _this._isAfterPasteCalled = false;
            }
        }, CKTextEditor._PASTETIMEOUT);
    };
    CKTextEditor.prototype._onImagePasteInDataValue = function (evt, images, pastedData) {
        var pastedRTEData = this._removeImagesFromPasteData(pastedData);
        if (pastedRTEData.length === 0) {
            var orignalRTEData = this._splitRTEContentAtSelection();
            if (orignalRTEData) {
                var isImageFileInvalid = false;
                for (var _i = 0, images_1 = images; _i < images_1.length; _i++) {
                    var img = images_1[_i];
                    var src = img.match(CKTextEditor._IMAGE_REGEX_SRC)[1];
                    if (src.length > 0 && src.indexOf('file://') === -1) {
                        evt.cancel();
                        evt.stop();
                        sp_telemetry_1._EngagementLogger.logEvent(CKTextEditor._IMAGE_PASTE);
                        var rteData = '';
                        if (orignalRTEData.postSelectionData) {
                            rteData = orignalRTEData.postSelectionData;
                        }
                        this._onImagePasteCallBack(true, this._handleBase64Image(src), rteData);
                    }
                    else {
                        sp_telemetry_1._EngagementLogger.logEvent('InvalidImageFile.Paste');
                        this._onImagePasteCallBack(false);
                        isImageFileInvalid = true;
                    }
                }
                if (!isImageFileInvalid) {
                    this._editor.setData(orignalRTEData.preSelectionData);
                }
            }
        }
        else {
            sp_telemetry_1._EngagementLogger.logEvent('ImageWrappedWithText.Paste');
            this._onImagePasteCallBack(false);
        }
    };
    CKTextEditor.prototype._handleBase64Image = function (src) {
        var contentType = ImageUtilities_1.Base64MimeType(src);
        var b64Data = src.split(',').pop();
        return ImageUtilities_1.Base64toBlob(b64Data, contentType);
    };
    CKTextEditor.prototype._onImagePasteInsideTable = function (pastedData) {
        if (this._isImagePastedInsideTable(pastedData)) {
            sp_telemetry_1._EngagementLogger.logEvent('ImageInsideTable.Paste');
            this._onImagePasteCallBack(false);
        }
    };
    CKTextEditor.prototype._isImagePastedInsideTable = function (data) {
        var tables = data.match(CKTextEditor._TABLE_REGEX);
        if (tables) {
            for (var _i = 0, tables_1 = tables; _i < tables_1.length; _i++) {
                var table = tables_1[_i];
                if (table.match(CKTextEditor._IMAGE_REGEX) || table.match(CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG)) {
                    return true;
                }
            }
            return false;
        }
    };
    CKTextEditor.prototype._removeImagesFromPasteData = function (pastedData) {
        var images = pastedData.match(CKTextEditor._IMAGE_REGEX)
            || pastedData.match(CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG);
        if (!images) {
            return [];
        }
        var data = [];
        var temp = [];
        for (var _i = 0, images_2 = images; _i < images_2.length; _i++) {
            var img = images_2[_i];
            temp = pastedData.split(img);
            if (temp.length > 1) {
                data.push(temp[0]);
                pastedData = temp[1];
            }
        }
        if (temp[1]) {
            data.push(temp[1]);
        }
        return data;
    };
    CKTextEditor.prototype._splitRTEContentAtSelection = function () {
        var innerHTML = this._editor.getData();
        if (this._validHTML(innerHTML) && this._isCurrentSelectionTagValid()) {
            var data = [];
            var tempId = sp_core_library_1.Guid.newGuid().toString();
            var tempElement = CKEDITOR.dom.element.createFromHtml('<div>' + tempId + '</div>');
            var tempHTML = tempElement.$.outerHTML;
            this._editor.insertElement(tempElement);
            innerHTML = this._editor.getData();
            data = innerHTML.split(tempHTML);
            var editorData = {
                preSelectionData: data[0],
                postSelectionData: data[1]
            };
            return editorData;
        }
        else {
            this._handleAfterPaste();
            this._onImagePasteCallBack(false);
            return undefined;
        }
    };
    CKTextEditor.prototype._isCurrentSelectionTagValid = function () {
        var tagName = this._editor.getSelection().getStartElement().$ &&
            this._editor.getSelection().getStartElement().$.tagName;
        if (tagName === 'A') {
            return false;
        }
        tagName = this._editor.getSelection().getStartElement().$.parentElement &&
            this._editor.getSelection().getStartElement().$.parentElement.tagName;
        return CKTextEditor._INVALID_TAGS.indexOf(tagName) === -1;
    };
    CKTextEditor.prototype._validHTML = function (html) {
        html = html.replace(/<[^>]*\/\s?>/g, ''); 
        html = html.replace(/<(br|hr|img).*?>/g, ''); 
        var openingTags = html.match(/<[^\/].*?>/g) || []; 
        var closingTags = html.match(/<\/.+?>/g) || []; 
        return openingTags.length === closingTags.length ? true : false;
    };
    CKTextEditor.prototype._onImagePasteInChrome = function (src) {
        var data = this._splitRTEContentAtSelection();
        if (data) {
            this._editor.setData(data.preSelectionData);
            this._onImagePasteCallBack(true, src, data.postSelectionData);
        }
    };
    return CKTextEditor;
}());
CKTextEditor.moduleLoader = new CKLoader_1.default();
CKTextEditor.logSource = sp_telemetry_1._LogSource.create('SPRteCKTextEditor');
CKTextEditor._IMAGE_REGEX = new RegExp('<img.+?\/>', 'gi');
CKTextEditor._IMAGE_REGEX_WITHOUT_CLOSING_TAG = new RegExp('<img.+?>', 'gi');
CKTextEditor._TABLE_REGEX = new RegExp('<table([\\w\\W]+?)\/table>', 'gi');
CKTextEditor._IMAGE_REGEX_WITH_SRC = new RegExp('<img.*?src="(.*?)"', 'gi');
CKTextEditor._IMAGE_REGEX_SRC = new RegExp('<img.*?src="(.*?)"', 'i');
CKTextEditor._IMAGE_PASTE = 'Image.Paste';
CKTextEditor._PASTETIMEOUT = 5;
CKTextEditor._INVALID_TAGS = ['TD', 'TR', 'OL', 'LI'];
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_initialize", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_handleSelectionChangeConvert", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_isHeadingActive", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_getHeadingCommandDefinition", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_fakeSelectionChange", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_handlePluginsLoaded", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_handleInstanceReady", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_handleAfterPaste", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_handlePaste", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CKTextEditor.prototype, "_onBeforePaste", null);
exports.default = CKTextEditor;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(4);
var PlaceholderManager = (function () {
    function PlaceholderManager(serviceScope) {
        var _this = this;
        this._definitions = undefined;
        this.definitionsReadyPromise = new Promise(function (resolve, reject) {
            _this._resolveCallback = resolve;
        });
    }
    PlaceholderManager.prototype.registerPlaceholders = function () {
        var placeholderDivs = document.querySelectorAll("[" + PlaceholderManager.placeholderAttributeName + "]");
        var placeholderDefs = [];
        for (var i = 0; i < placeholderDivs.length; i++) {
            var div = placeholderDivs[i];
            if (div) {
                placeholderDefs.push({
                    name: div.getAttribute(PlaceholderManager.placeholderAttributeName),
                    domElement: div
                });
            }
        }
        this.initializePlaceholders(placeholderDefs);
    };
    PlaceholderManager.prototype.initializePlaceholders = function (definitions) {
        sp_core_library_1.Validate.isNotNullOrUndefined(definitions, 'definitions');
        if (this._definitions) {
            throw new Error('definePlaceholders() cannot be called more than once');
        }
        this._definitions = definitions;
        this._resolveCallback();
    };
    Object.defineProperty(PlaceholderManager.prototype, "definitions", {
        get: function () {
            return this._definitions;
        },
        enumerable: true,
        configurable: true
    });
    return PlaceholderManager;
}());
PlaceholderManager.serviceKey = sp_core_library_1.ServiceKey.create('sp-application-base:PlaceholderManager', PlaceholderManager);
PlaceholderManager.placeholderAttributeName = 'data-sp-placeholder';
exports.default = PlaceholderManager;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavSource;
(function (SuiteNavSource) {
    SuiteNavSource[SuiteNavSource["SPO"] = 0] = "SPO";
    SuiteNavSource[SuiteNavSource["OnPrem"] = 1] = "OnPrem";
})(SuiteNavSource = exports.SuiteNavSource || (exports.SuiteNavSource = {}));


/***/ }),
/* 33 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_33__;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Focus_1 = __webpack_require__(40);
exports.Focus = Focus_1.default;
var ScreenReader_1 = __webpack_require__(41);
exports.ScreenReader = ScreenReader_1.default;
var A11yManager_1 = __webpack_require__(39);
exports.A11yManager = A11yManager_1.default;
var A11yAttribute_1 = __webpack_require__(38);
exports.A11yAttribute = A11yAttribute_1.default;
exports.A11yAttributeType = A11yAttribute_1.A11yAttributeType;
var AccessibleRegion_1 = __webpack_require__(189);
exports.AccessibleRegion = AccessibleRegion_1.default;


/***/ }),
/* 35 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_35__;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(92);
var styles = {
    container: 'container_e114bfc8',
    content: 'content_e114bfc8',
    pivotItem: 'pivotItem_e114bfc8',
    learnMoreLink: 'learnMoreLink_e114bfc8',
    serializedTextArea: 'serializedTextArea_e114bfc8',
};
exports.default = styles;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
function htmlEncode(str) {
    if (str) {
        return str
            .replace(/\&/g, '&amp;')
            .replace(/\</g, '&lt;')
            .replace(/\>/g, '&gt;');
    }
    else {
        return str;
    }
}
exports.htmlEncode = htmlEncode;
function getReactLines(str) {
    if (str) {
        if (typeof str === 'string') {
            str = str.split('\n');
        }
        var encodedLines = str.map(function (line) { return htmlEncode(line).replace(/\s/g, '&nbsp;'); });
        return (React.createElement("div", { dangerouslySetInnerHTML: { __html: encodedLines.join('<br />') } }));
    }
}
exports.getReactLines = getReactLines;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal_1 = __webpack_require__(24);
var A11yAttribute = (function () {
    function A11yAttribute(appPrefix, type, params, value) {
        this._appPrefix = appPrefix;
        this._type = type;
        this._params = params;
        this._value = value;
    }
    A11yAttribute.getPrefix = function (appPrefix, type) {
        return appPrefix + A11yAttribute._getTypeString(type);
    };
    A11yAttribute.getAllFromElement = function (appPrefix, element) {
        var result = [];
        var types = Object.keys(A11yAttributeType).map(function (k) { return A11yAttributeType[k]; }).filter(function (v) { return typeof v === 'number'; });
        for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {
            var type = types_1[_i];
            for (var i = 0; i < element.attributes.length; i++) {
                var attrName = element.attributes[i].name;
                var prefix = A11yAttribute.getPrefix(appPrefix, type);
                if (attrName.substring(0, prefix.length) === prefix) {
                    var params = attrName[prefix.length] === '-' ? attrName.substr(prefix.length + 1).split('-') : undefined;
                    var value = element.getAttribute(attrName);
                    result.push(new A11yAttribute(appPrefix, type, params, value));
                }
            }
        }
        return result;
    };
    A11yAttribute.getFromElementByType = function (appPrefix, element, type) {
        return A11yAttribute.getAllFromElement(appPrefix, element).filter(function (a) { return a.type === type; });
    };
    A11yAttribute.getFromElementOrParentsByType = function (appPrefix, element, root, type) {
        var attr;
        DomTraversal_1.default.getFirstMatchingParent(element, function (p) {
            attr = A11yAttribute.getAllFromElement(appPrefix, p).filter(function (a) { return a.type === type; })[0];
            return !!attr;
        }, root, true);
        return attr || undefined;
    };
    A11yAttribute._getTypeString = function (type) {
        switch (type) {
            case A11yAttributeType.Id: return 'id';
            case A11yAttributeType.Class: return 'class';
            case A11yAttributeType.SkipKeys: return 'skipkeys';
            case A11yAttributeType.StopKeys: return 'stopkeys';
            case A11yAttributeType.AlertOnFocusIn: return 'alertonfocusin';
            case A11yAttributeType.AlertOnFocusOut: return 'alertonfocusout';
            case A11yAttributeType.NavigateOnKey: return 'navigateonkey';
            case A11yAttributeType.NavigationIsland: return 'navigationisland';
        }
    };
    Object.defineProperty(A11yAttribute.prototype, "name", {
        get: function () {
            var name = this.prefix;
            if (this._params && this._params.length > 0) {
                var params = this._params.join('-');
                name += "-" + params;
            }
            return name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "prefix", {
        get: function () {
            return A11yAttribute.getPrefix(this._appPrefix, this._type);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "value", {
        get: function () {
            return this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "type", {
        get: function () {
            return this._type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yAttribute.prototype, "params", {
        get: function () {
            return this._params;
        },
        enumerable: true,
        configurable: true
    });
    A11yAttribute.prototype.setOnElement = function (element) {
        element.setAttribute(this.name, this.value);
    };
    return A11yAttribute;
}());
exports.default = A11yAttribute;
var A11yAttributeType;
(function (A11yAttributeType) {
    A11yAttributeType[A11yAttributeType["Id"] = 0] = "Id";
    A11yAttributeType[A11yAttributeType["Class"] = 1] = "Class";
    A11yAttributeType[A11yAttributeType["AlertOnFocusIn"] = 2] = "AlertOnFocusIn";
    A11yAttributeType[A11yAttributeType["AlertOnFocusOut"] = 3] = "AlertOnFocusOut";
    A11yAttributeType[A11yAttributeType["SkipKeys"] = 4] = "SkipKeys";
    A11yAttributeType[A11yAttributeType["StopKeys"] = 5] = "StopKeys";
    A11yAttributeType[A11yAttributeType["NavigateOnKey"] = 6] = "NavigateOnKey";
    A11yAttributeType[A11yAttributeType["NavigationIsland"] = 7] = "NavigationIsland";
})(A11yAttributeType = exports.A11yAttributeType || (exports.A11yAttributeType = {}));


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal_1 = __webpack_require__(24);
var Focus_1 = __webpack_require__(40);
var Keyboard_1 = __webpack_require__(188);
var ScreenReader_1 = __webpack_require__(41);
var A11yAttribute_1 = __webpack_require__(38);
var A11yManager = (function () {
    function A11yManager(rootElement, appId, config) {
        if (!rootElement || !appId) {
            throw Error('Missing required parameters for constructing A11yManager');
        }
        if (!/^[a-zA-z0-9-_]+$/.test(appId)) {
            throw Error("Invalid App ID for constructing A11yManager.\nApp ID can only contain alphanumerical characters, dashes and underscores.");
        }
        this._handleKeyDown = this._handleKeyDown.bind(this);
        this._handleFocusIn = this._handleFocusIn.bind(this);
        this._handleFocusOut = this._handleFocusOut.bind(this);
        this._rootElement = rootElement;
        this._appId = appId;
        this._config = config || {};
        this._appId = appId;
        this._savedFocusMap = new Map();
        this._rootElement.addEventListener('keydown', this._handleKeyDown);
        this._rootElement.addEventListener('focusin', this._handleFocusIn);
        this._rootElement.addEventListener('focusout', this._handleFocusOut);
    }
    Object.defineProperty(A11yManager.prototype, "_skipEventFlag", {
        get: function () {
            return this.prefix + 'skip-event';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "root", {
        get: function () {
            return this._rootElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "config", {
        get: function () {
            return this._config;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(A11yManager.prototype, "prefix", {
        get: function () {
            return 'data-sp-a11y-';
        },
        enumerable: true,
        configurable: true
    });
    A11yManager.prototype.setA11yAttributesOnElement = function (attributes, element) {
        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {
            var attr = attributes_1[_i];
            attr.setOnElement(element);
        }
    };
    A11yManager.prototype.alert = function (msg) {
        ScreenReader_1.default.alert(this._appId, msg, false);
        if (this.config.debug) {
            console.log(this._appId + " A11y Log: Alerted '" + msg + "'");
        }
    };
    A11yManager.prototype.focusInside = function (element) {
        return Focus_1.default.focusInside(element);
    };
    A11yManager.prototype.focusTo = function (element) {
        var done = Focus_1.default.focusTo(element);
        return done;
    };
    A11yManager.prototype.focusById = function (id) {
        var nextElement = this._getElementById(id);
        return this.focusTo(nextElement);
    };
    A11yManager.prototype.focusOutOf = function (element) {
        Focus_1.default.focusOutOf(element, this._rootElement);
    };
    A11yManager.prototype.undoFocus = function () {
        return this.focusTo(this._lastActiveElement);
    };
    A11yManager.prototype.saveActiveElementAs = function (key) {
        this._savedFocusMap.set(key, this._activeElement);
    };
    A11yManager.prototype.saveLastActiveElementAs = function (key) {
        this._savedFocusMap.set(key, this._lastActiveElement);
    };
    A11yManager.prototype.getSavedActiveElement = function (key) {
        return this._savedFocusMap.get(key);
    };
    A11yManager.prototype.restoreFocus = function (key) {
        return this.focusTo(this.getSavedActiveElement[key]);
    };
    A11yManager.prototype.hasFocus = function () {
        return this._isElementManaged(document.activeElement);
    };
    A11yManager.prototype.skipEvent = function (e) {
        e[this._skipEventFlag] = true;
    };
    A11yManager.prototype._shouldSkipKeyOnElement = function (keyCode, element) {
        var skipAttr = A11yAttribute_1.default.getAllFromElement(this.prefix, element)
            .filter(function (attr) { return attr.type === A11yAttribute_1.A11yAttributeType.SkipKeys && parseInt(attr.params[0], 10) === keyCode; })[0];
        if (skipAttr) {
            if (skipAttr.value &&
                skipAttr.value.split(',').filter(function (keyCodeStr) { return parseInt(keyCodeStr, 10) === keyCode; }).length > 0) {
                return true;
            }
        }
        return false;
    };
    A11yManager.prototype._shouldStopKeyOnElement = function (keyCode, element) {
        var stopAttr = A11yAttribute_1.default.getAllFromElement(this.prefix, element)
            .filter(function (attr) { return attr.type === A11yAttribute_1.A11yAttributeType.StopKeys; })[0];
        if (stopAttr) {
            if (stopAttr.value &&
                stopAttr.value.split(',').filter(function (keyCodeStr) { return parseInt(keyCodeStr, 10) === keyCode; }).length > 0) {
                return true;
            }
        }
        return false;
    };
    A11yManager.prototype._isElementManaged = function (element) {
        return this._getElementPath(this._rootElement, element) !== undefined;
    };
    A11yManager.prototype._shouldSkipEvent = function (evt) {
        if (evt[this._skipEventFlag]) {
            return true;
        }
        else {
            var element = evt.target;
            while (element && element !== document.body) {
                if (this._shouldSkipKeyOnElement(evt.keyCode, element)) {
                    return true;
                }
                else if (element === this._rootElement) {
                    return false;
                }
                element = element.parentElement;
            }
            return true;
        }
    };
    A11yManager.prototype._shouldStopEvent = function (evt) {
        var element = evt.target;
        while (element && element !== document.body) {
            if (this._shouldStopKeyOnElement(evt.keyCode, element)) {
                return true;
            }
            else if (element === this._rootElement) {
                return false;
            }
            element = element.parentElement;
        }
        return false;
    };
    A11yManager.prototype._getElementById = function (id, root) {
        root = root || this._rootElement;
        var idAttribute = A11yAttribute_1.default.getPrefix(this.prefix, A11yAttribute_1.A11yAttributeType.Id);
        return root.querySelector("[" + idAttribute + "=" + id + "]");
    };
    A11yManager.prototype._getElementByClass = function (className, root) {
        root = root || this._rootElement;
        var classAttribute = A11yAttribute_1.default.getPrefix(this.prefix, A11yAttribute_1.A11yAttributeType.Class);
        return root.querySelector("[" + classAttribute + "=" + className + "]");
    };
    A11yManager.prototype._getElementByNavigationOperator = function (operator, element) {
        switch (operator) {
            case 'next':
                return this._getNextElementByHierarchicalNavigation(element);
            case 'prev':
                return this._getPrevElementByHierarchicalNavigation(element);
            case 'outside':
                return this._getOutsideElementByHierarchicalNavigation(element);
            case 'inside':
                return this._getInsideElementByHierarchicalNavigation(element);
        }
        return undefined;
    };
    A11yManager.prototype._navigateByAttribute = function (evt) {
        var path = this._getElementPath(this._rootElement, evt.target);
        if (path) {
            path = path.reverse();
            for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {
                var elem = path_1[_i];
                var navAttrs = A11yAttribute_1.default.getFromElementByType(this.prefix, elem, A11yAttribute_1.A11yAttributeType.NavigateOnKey);
                for (var _a = 0, navAttrs_1 = navAttrs; _a < navAttrs_1.length; _a++) {
                    var navAttr = navAttrs_1[_a];
                    if (navAttr.value && navAttr.params) {
                        var keyCode = parseInt(navAttr.params[0], 10);
                        var alt = navAttr.params.indexOf('a') > 0;
                        var ctrl = navAttr.params.indexOf('c') > 0;
                        var shift = navAttr.params.indexOf('s') > 0;
                        if (Keyboard_1.default.isKey(keyCode, evt, { alt: alt, ctrl: ctrl, shift: shift })) {
                            var value = navAttr.value.trim();
                            var token = value[0];
                            var selector = value.substr(1);
                            var nextElement = token === '#' ? this._getElementById(selector, this._rootElement) :
                                token === '.' ? this._getElementByClass(selector, elem) :
                                    token === '$' ? this._getElementByNavigationOperator(selector, elem) : undefined;
                            return nextElement;
                        }
                    }
                }
            }
        }
        return undefined;
    };
    A11yManager.prototype._alertOnFocusTransition = function (src, dest) {
        var messages = this._aggregateFocusTransitionMessages(src, dest);
        if (messages && messages.length > 0) {
            var msg = messages.join(' ');
            this.alert(msg);
        }
    };
    A11yManager.prototype._getElementPath = function (higher, lower) {
        return DomTraversal_1.default.getElementPath(higher, lower, this._rootElement);
    };
    A11yManager.prototype._getLowestCommonAncestor = function (elem1, elem2) {
        return DomTraversal_1.default.getLowestCommonAncestor(elem1, elem2, this._rootElement);
    };
    A11yManager.prototype._getParent = function (element) {
        var _this = this;
        var result = DomTraversal_1.default.getFirstMatchingParent(element, function (it) {
            var attr = A11yAttribute_1.default.getFromElementByType(_this.prefix, it, A11yAttribute_1.A11yAttributeType.NavigationIsland)[0];
            return !!attr || Focus_1.default.isElementFocusable(it);
        }, this._rootElement, false);
        return result || this._rootElement;
    };
    A11yManager.prototype._forEachElementInFocusTransitionPath = function (src, dest, callback) {
        var outwardPath;
        var inwardPath;
        if (!src && dest) {
            inwardPath = this._getElementPath(this._rootElement, dest);
        }
        else if (src && !dest) {
            outwardPath = this._getElementPath(this._rootElement, src);
        }
        else if (src && dest) {
            inwardPath = this._getElementPath(src, dest);
            if (!inwardPath) {
                outwardPath = this._getElementPath(dest, src);
            }
            if (!inwardPath && !outwardPath) {
                var lca = this._getLowestCommonAncestor(src, dest);
                outwardPath = this._getElementPath(lca, src);
                inwardPath = this._getElementPath(lca, dest);
            }
        }
        if (inwardPath) {
            inwardPath.shift();
        }
        if (outwardPath) {
            outwardPath.shift();
        }
        outwardPath = outwardPath ? outwardPath.reverse() : undefined;
        if (outwardPath) {
            for (var _i = 0, outwardPath_1 = outwardPath; _i < outwardPath_1.length; _i++) {
                var elem = outwardPath_1[_i];
                callback(elem, true);
            }
        }
        if (inwardPath) {
            for (var _a = 0, inwardPath_1 = inwardPath; _a < inwardPath_1.length; _a++) {
                var elem = inwardPath_1[_a];
                callback(elem, false);
            }
        }
    };
    A11yManager.prototype._aggregateFocusTransitionMessages = function (src, dest) {
        var _this = this;
        var messages = [];
        this._forEachElementInFocusTransitionPath(src, dest, function (elem, isFocusOut) {
            var attr = A11yAttribute_1.default.getFromElementByType(_this.prefix, elem, isFocusOut ? A11yAttribute_1.A11yAttributeType.AlertOnFocusOut : A11yAttribute_1.A11yAttributeType.AlertOnFocusIn)[0];
            if (attr && attr.value) {
                messages.push(attr.value);
            }
        });
        return messages;
    };
    A11yManager.prototype._getNonIslandSiblings = function (element) {
        var _this = this;
        var parent = this._getParent(element);
        var siblings = Focus_1.default.getFocusableSiblings(element, parent);
        return siblings.filter(function (sib) {
            return parent === _this._getParent(sib);
        });
    };
    A11yManager.prototype._getNonIslandChildren = function (element) {
        var _this = this;
        var children = Focus_1.default.getFocusableChildren(element);
        return children.filter(function (child) {
            return element === _this._getParent(child);
        });
    };
    A11yManager.prototype._checkEntringIsland = function (src, dest) {
        var _this = this;
        var islandRoot;
        this._forEachElementInFocusTransitionPath(src, dest, function (elem, isOutward) {
            if (A11yAttribute_1.default.getFromElementByType(_this.prefix, elem, A11yAttribute_1.A11yAttributeType.NavigationIsland)[0]) {
                if (!isOutward) {
                    islandRoot = elem;
                }
            }
        });
        return islandRoot;
    };
    A11yManager.prototype._getNextElementByHierarchicalNavigation = function (element) {
        var siblings = this._getNonIslandSiblings(element);
        return siblings.length > 0 ? siblings[0] : undefined;
    };
    A11yManager.prototype._getPrevElementByHierarchicalNavigation = function (element) {
        var siblings = this._getNonIslandSiblings(element);
        return siblings.length > 0 ? siblings[siblings.length - 1] : undefined;
    };
    A11yManager.prototype._getInsideElementByHierarchicalNavigation = function (element) {
        return Focus_1.default.getFirstFocusableChild(element);
    };
    A11yManager.prototype._getOutsideElementByHierarchicalNavigation = function (element) {
        return Focus_1.default.getFocusableParent(element, this._rootElement);
    };
    A11yManager.prototype._navigateByHierarchicalNavigation = function (evt) {
        var elementToGo;
        var currentElement = Focus_1.default.isElementFocusable(evt.target) ?
            evt.target : Focus_1.default.getFocusableParent(evt.target, this._rootElement);
        if (Keyboard_1.default.isTab(evt)) {
            var topChildren = this._getNonIslandChildren(this._rootElement);
            if (topChildren.length && currentElement !== topChildren[topChildren.length - 1]) {
                elementToGo = this._getNextElementByHierarchicalNavigation(currentElement);
            }
            else {
                var descendents = Focus_1.default.getFocusableDescendants(this._rootElement);
                if (descendents.length > 0) {
                    descendents[descendents.length - 1].focus();
                }
            }
        }
        else if (Keyboard_1.default.isShiftTab(evt)) {
            var firstChild = this._getNonIslandChildren(this._rootElement)[0];
            if (currentElement !== firstChild) {
                elementToGo = this._getPrevElementByHierarchicalNavigation(currentElement);
            }
        }
        else if (Keyboard_1.default.isEnter(evt)) {
            elementToGo = this._getInsideElementByHierarchicalNavigation(currentElement);
        }
        else if (Keyboard_1.default.isEscape(evt)) {
            var parent_1 = this._getParent(currentElement);
            if (parent_1 !== this._rootElement) {
                if (parent_1 === this._lastEnteredIsland) {
                    elementToGo = this._activeElementBeforeLastIsland;
                }
                else {
                    elementToGo = this._getOutsideElementByHierarchicalNavigation(currentElement);
                }
            }
        }
        return elementToGo;
    };
    A11yManager.prototype._handleKeyDown = function (evt) {
        if (this._shouldStopEvent(evt)) {
            evt.preventDefault();
            evt.stopPropagation();
            return;
        }
        if (this._shouldSkipEvent(evt)) {
            return;
        }
        var elementToGo = this._navigateByAttribute(evt);
        if (!elementToGo && this.config.useHierarchicalNavigation) {
            elementToGo = this._navigateByHierarchicalNavigation(evt);
        }
        if (elementToGo) {
            this.focusTo(elementToGo);
            evt.preventDefault();
            evt.stopPropagation();
        }
    };
    A11yManager.prototype._handleFocusIn = function (evt) {
        this._lastFocusInEvent = evt;
        this._lastFocusInEventTime = Date.now();
        this._activeElement = evt.target;
        this._checkFocusTransition();
    };
    A11yManager.prototype._handleFocusOut = function (evt) {
        var _this = this;
        this._lastFocusInEvent = undefined;
        this._lastFocusOutEvent = evt;
        this._lastFocusOutEventTime = Date.now();
        if (this._lastActiveElement !== evt.target) {
            this._lastActiveElement = evt.target;
        }
        window.setTimeout(function () { _this._checkFocusTransition(); }, 50);
    };
    A11yManager.prototype._checkFocusTransition = function () {
        if (this._lastFocusInEvent && this._lastFocusOutEvent) {
            var delay = this._lastFocusOutEventTime - this._lastFocusInEventTime;
            if (delay >= -10 && delay < 10) {
                this._onFocusTransition(this._lastFocusOutEvent.target, this._lastFocusInEvent.target);
            }
        }
        else if (this._lastFocusInEvent && !this._lastFocusOutEvent) {
            this._onFocusTransition(undefined, this._lastFocusInEvent.target);
        }
        else if (!this._lastFocusInEvent && this._lastFocusOutEvent) {
            this._onFocusTransition(this._lastFocusOutEvent.target, undefined);
        }
        this._lastFocusInEvent = undefined;
        this._lastFocusOutEvent = undefined;
    };
    A11yManager.prototype._onFocusTransition = function (src, dest) {
        if (this.config.debug) {
            if (src || dest) {
                console.log(this._appId + " A11y Log: Focus transition:");
                console.log({
                    from: src || 'external element',
                    to: dest || 'external element'
                });
            }
        }
        var islandRoot = this._checkEntringIsland(src, dest);
        if (islandRoot) {
            this._lastEnteredIsland = islandRoot;
            this._activeElementBeforeLastIsland = this._lastActiveElement;
        }
        this._alertOnFocusTransition(src, dest);
    };
    return A11yManager;
}());
exports.default = A11yManager;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomTraversal_1 = __webpack_require__(24);
var Focus = (function () {
    function Focus() {
    }
    Focus.isElementFocusable = function (elem, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        if (elem
            && !elem.hidden
            && elem.offsetParent
            && window.getComputedStyle(elem).display !== 'none'
            && window.getComputedStyle(elem).visibility !== 'hidden') {
            var tagName = elem.tagName.toLowerCase();
            var hasTabIndex = elem.hasAttribute('tabindex');
            var tabindex = parseInt(elem.getAttribute('tabindex'), 10);
            if (!ignoreTabIndex && hasTabIndex && tabindex < 0) {
                return false;
            }
            if (tagName === 'a' && !!elem.href ||
                elem.isContentEditable) {
                return true;
            }
            if ((tagName === 'button' ||
                tagName === 'input' ||
                tagName === 'select' ||
                tagName === 'textarea') && !elem.disabled) {
                return true;
            }
            if (ignoreTabIndex && elem.getAttribute('data-is-focusable') === 'true') {
                return true;
            }
            if (!ignoreTabIndex && hasTabIndex && tabindex > -1) {
                return true;
            }
        }
        return false;
    };
    Focus.getFocusableChildren = function (element, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        var children = [];
        var nodes = Focus._queryFocusableSelector(element);
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            if (Focus.isElementFocusable(node) && Focus.getFocusableParent(node, element) === element) {
                children.push(node);
            }
        }
        for (var i = 0; i < children.length; i++) {
            var iTabIndex = parseInt(children[i].getAttribute('tabindex') || '0', 10);
            if (iTabIndex > 0) {
                var e = children.splice(i, 1)[0];
                for (var j = 0; j < i; j++) {
                    var jTabIndex = parseInt(children[j].getAttribute('tabindex') || '0', 10);
                    if (jTabIndex === 0 || iTabIndex < jTabIndex) {
                        children.splice(j, 0, e);
                        break;
                    }
                }
            }
        }
        return children;
    };
    Focus.getFocusableParent = function (element, root) {
        root = root || document.body;
        var parent = DomTraversal_1.default.getFirstMatchingParent(element, this.isElementFocusable, root, false);
        return parent || root;
    };
    Focus.getFirstFocusableChild = function (elem, ignoreTabIndex) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        var nodes = Focus._queryFocusableSelector(elem);
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            if (Focus.isElementFocusable(node, ignoreTabIndex)) {
                return node;
            }
        }
        return undefined;
    };
    Focus.getFocusableDescendants = function (element, ignoreTabIndex, descendants) {
        if (ignoreTabIndex === void 0) { ignoreTabIndex = false; }
        if (!descendants) {
            descendants = [];
        }
        else {
            descendants.push(element);
        }
        var children = Focus.getFocusableChildren(element);
        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {
            var child = children_1[_i];
            descendants.concat(Focus.getFocusableDescendants(child, ignoreTabIndex, descendants));
        }
        return descendants;
    };
    Focus.getFocusableSiblings = function (element, root) {
        root = root || document.body;
        var parent = Focus.getFocusableParent(element, root);
        if (parent) {
            var children = Focus.getFocusableChildren(parent);
            var siblings = [];
            var insertPointer = 0;
            for (var _i = 0, children_2 = children; _i < children_2.length; _i++) {
                var child = children_2[_i];
                if (child !== element) {
                    siblings.splice(insertPointer++, 0, child);
                }
                else {
                    insertPointer = 0;
                }
            }
            return siblings;
        }
        return [];
    };
    Focus.getNextFocusableSibling = function (element, root) {
        root = root || document.body;
        var siblings = Focus.getFocusableSiblings(element, root);
        return siblings[0];
    };
    Focus.getPrevFocusableSibling = function (element, root) {
        root = root || document.body;
        var siblings = Focus.getFocusableSiblings(element, root);
        return siblings[siblings.length - 1];
    };
    Focus.focusInside = function (element) {
        var children = Focus.getFocusableChildren(element);
        if (children.length) {
            children[0].focus();
            return true;
        }
        else {
            return false;
        }
    };
    Focus.focusTo = function (element) {
        if (Focus.isElementFocusable(element)) {
            element.focus();
            return true;
        }
        else {
            return Focus.focusInside(element);
        }
    };
    Focus.focusOutOf = function (element, root) {
        root = root || document.body;
        var parent = Focus.getFocusableParent(element, root);
        if (parent && parent !== root) {
            parent.focus();
            return true;
        }
        else {
            return false;
        }
    };
    Focus._queryFocusableSelector = function (element) {
        var selector = 'button,input,textarea,select,a[href]:not([href=\'\']),\
    [tabindex],[contenteditable=\'true\'], [data-is-focusable=\'true\']';
        return element.querySelectorAll(selector);
    };
    return Focus;
}());
exports.default = Focus;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ScreenReader = (function () {
    function ScreenReader() {
    }
    ScreenReader.alert = function (id, message, isVisible, className) {
        if (isVisible === void 0) { isVisible = false; }
        var divId = 'sp_a11y_alert_' + id;
        var oldAlert = document.querySelector('#' + divId);
        if (oldAlert) {
            document.body.removeChild(oldAlert);
        }
        var alertNode = document.createElement('p');
        if (!isVisible) {
            alertNode.setAttribute('style', ScreenReader._cssHidden);
        }
        if (className) {
            alertNode.classList.add(className);
        }
        alertNode.setAttribute('role', 'alert');
        alertNode.setAttribute('aria-live', 'assertive');
        alertNode.setAttribute('id', divId);
        var alertText = document.createTextNode(message);
        document.body.appendChild(alertNode);
        alertNode.appendChild(alertText);
    };
    return ScreenReader;
}());
ScreenReader._cssHidden = "position:absolute;text-indent:-9999px;\n    width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0;";
exports.default = ScreenReader;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var odsp_utilities_bundle_1 = __webpack_require__(7);
var DragZone_module_scss_1 = __webpack_require__(44);
var office_ui_fabric_react_1 = __webpack_require__(0);
var DragZoneUtilities_1 = __webpack_require__(43);
var DragZoneTree_1 = __webpack_require__(192);
var DragZoneKeyboard_1 = __webpack_require__(191);
var DATA_DRAG_HANDLE = 'data-drag-handle';
var DATA_DISALLOWED_ATTRIBUTE = 'data-drag-disallowed-tag';
var DATA_DISALLOWED_AREA_ATTRIBUTE = 'data-drag-disallowedArea-tag';
var DRAGSTART_TIMEOUT_MS = 100;
var ICON_MARGIN_PX = -25;
var DRAGOVER_INTERVAL_MS = 200;
var LINE_WIDTH_PX = 3;
var DragZoneControl = (function () {
    function DragZoneControl(options) {
        if (!options.host) {
            throw Error('Need to specify a host control for the DropZone');
        }
        if (!(options.treeLevelTagsBottomUp && options.treeLevelTagsBottomUp.length > 0)) {
            throw Error('Need to have at least one level of tags for the DropZone');
        }
        this._options = options;
        if (options.icon) {
            this._icon = options.icon;
        }
        else {
            this._icon = DragZoneUtilities_1.DragZoneUtilities.getDefaultIcon();
        }
        this._icon.classList.add(DragZone_module_scss_1.default.iconCollapsed);
        this._icon.classList.add(DragZone_module_scss_1.default.iconAdditionalStyle);
        this._tree = new DragZoneTree_1.DragZoneTree(options.treeLevelTagsBottomUp, options.host);
    }
    DragZoneControl.prototype.activate = function () {
        var _this = this;
        var _a = this._options, host = _a.host, dragHandleTag = _a.dragHandleTag, treeLevelTagsBottomUp = _a.treeLevelTagsBottomUp, scrollIntoView = _a.scrollIntoView;
        this._async = new odsp_utilities_bundle_1.Async();
        if (dragHandleTag) {
            this._dragHandles =
                DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(host, DATA_DRAG_HANDLE, dragHandleTag);
            this._dragHandles.forEach(function (handle) {
                handle.addEventListener('mousedown', _this._onMouseDown);
                handle.addEventListener('touchstart', _this._onMouseDown);
                handle.classList.add(DragZone_module_scss_1.default.handleGrab);
            });
        }
        else {
            host.addEventListener('mousedown', this._onMouseDown);
            host.addEventListener('touchstart', this._onMouseDown);
        }
        var dragZoneKeyboardOptions = {
            host: host,
            tree: this._tree,
            supportHorizontalReorder: this._supportHorizontalReorder,
            moveLine: this._moveLine,
            removeLine: this._removeLine,
            moveItem: this._triggerOnMoved,
            handles: this._dragHandles,
            strings: this._options.dragZoneStrings,
            handleTag: dragHandleTag,
            scrollIntoView: scrollIntoView
        };
        if (this._supportKeyboardAlternative) {
            this._dragZoneKeyboard = new DragZoneKeyboard_1.default(dragZoneKeyboardOptions);
        }
        host.addEventListener('mouseup', this._internalMouseUp);
        host.addEventListener('touchend', this._internalMouseUp);
        host.addEventListener('mouseout', this._onMouseOut);
        host.addEventListener('touchout', this._onMouseOut);
    };
    DragZoneControl.prototype.deactivate = function () {
        var _this = this;
        var _a = this._options, host = _a.host, dragHandleTag = _a.dragHandleTag, treeLevelTagsBottomUp = _a.treeLevelTagsBottomUp;
        this._async.dispose();
        if (this._supportKeyboardAlternative && this._dragZoneKeyboard) {
            this._dragZoneKeyboard.dispose();
        }
        if (dragHandleTag) {
            this._dragHandles =
                DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(host, DATA_DRAG_HANDLE, dragHandleTag);
            this._dragHandles.forEach(function (handle) {
                handle.removeEventListener('mousedown', _this._onMouseDown);
                handle.removeEventListener('touchstart', _this._onMouseDown);
                handle.classList.remove(DragZone_module_scss_1.default.handleGrab);
            });
        }
        else {
            host.removeEventListener('mousedown', this._onMouseDown);
            host.removeEventListener('touchstart', this._onMouseDown);
        }
        host.removeEventListener('mouseup', this._internalMouseUp);
        host.removeEventListener('touchend', this._internalMouseUp);
        host.removeEventListener('mouseout', this._onMouseOut);
        host.removeEventListener('touchout', this._onMouseOut);
    };
    DragZoneControl.prototype.refreshHandles = function () {
        var _this = this;
        var _a = this._options, host = _a.host, dragHandleTag = _a.dragHandleTag, treeLevelTagsBottomUp = _a.treeLevelTagsBottomUp;
        if (dragHandleTag) {
            var dragHandles = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(host, DATA_DRAG_HANDLE, dragHandleTag);
            var itemsAdded = DragZoneUtilities_1.DragZoneUtilities.getElementsNotInFirstArray(this._dragHandles, dragHandles);
            if (itemsAdded.length > 0) {
                itemsAdded.forEach(function (handle) {
                    _this._dragHandles.push(handle);
                    handle.addEventListener('mousedown', _this._onMouseDown);
                    handle.addEventListener('touchstart', _this._onMouseDown);
                    handle.classList.remove(DragZone_module_scss_1.default.handleGrab);
                });
            }
            if (this._supportKeyboardAlternative && this._dragZoneKeyboard) {
                this._dragZoneKeyboard.addHandles(itemsAdded);
            }
        }
    };
    DragZoneControl.prototype._onMouseMove = function (evt) {
        this._mouseOut = false;
        this._tree.currentPosition.x = evt.clientX;
        this._tree.currentPosition.y = evt.clientY;
    };
    DragZoneControl.prototype._onTouchMove = function (evt) {
        this._mouseOut = false;
        if (evt.touches.length === 1) {
            var touch = evt.touches[0];
            this._tree.currentPosition.x = touch.clientX;
            this._tree.currentPosition.y = touch.clientY;
            evt.preventDefault();
        }
    };
    DragZoneControl.prototype._onMouseOut = function () {
        this._mouseOut = true;
    };
    DragZoneControl.prototype._onMouseDown = function (evt) {
        evt.preventDefault();
        this._mouseDown = true;
        this._async.setTimeout(this._startDrag, DRAGSTART_TIMEOUT_MS);
        if (evt instanceof MouseEvent) {
            var mouseEvent = evt;
            this._tree.startPosition.x = mouseEvent.clientX;
            this._tree.startPosition.y = mouseEvent.clientY;
            this._tree.currentPosition.x = mouseEvent.clientX;
            this._tree.currentPosition.y = mouseEvent.clientY;
        }
        else if (evt instanceof TouchEvent) {
            var touchEvent = evt;
            if (touchEvent && touchEvent.touches.length > 0) {
                this._tree.startPosition.x = touchEvent.touches[0].clientX;
                this._tree.startPosition.y = touchEvent.touches[0].clientY;
                this._tree.currentPosition.x = touchEvent.touches[0].clientX;
                this._tree.currentPosition.y = touchEvent.touches[0].clientY;
            }
        }
    };
    DragZoneControl.prototype._onDragStart = function () {
        var _a = this._options, dataDragDisallowed = _a.dataDragDisallowed, dataDragAreaDisallowedCss = _a.dataDragAreaDisallowedCss;
        this._isDragging = true;
        if (window.getSelection()) {
            window.getSelection().removeAllRanges();
        }
        document.body.classList.add(DragZone_module_scss_1.default.noselect);
        this._animationFrameHandle = window.requestAnimationFrame(this._emulateMouseMove);
        this._dragOverInterval = this._async.setInterval(this._emulateDragOver, DRAGOVER_INTERVAL_MS);
        this._options.host.addEventListener('mousemove', this._onMouseMove);
        this._options.host.addEventListener('touchmove', this._onTouchMove);
        window.addEventListener('mouseup', this._onMouseUp);
        window.addEventListener('touchend', this._onMouseUp);
        this._autoScroll = new office_ui_fabric_react_1.AutoScroll(this._options.host);
        this._icon.classList.add(DragZone_module_scss_1.default.iconVisible);
        this._icon.classList.remove(DragZone_module_scss_1.default.iconCollapsed);
        this._options.host.classList.add(DragZone_module_scss_1.default.cursorDragging);
        this._draggedItemPosition = this._tree.getDraggedItemPosition();
        this._draggedElement = this._tree.getDraggedItem;
        this._tree.addDisallowedStyles(dataDragDisallowed, dataDragAreaDisallowedCss);
        if (this._options.onMoving) {
            this._options.onMoving(this._draggedItemPosition);
        }
    };
    DragZoneControl.prototype._internalMouseUp = function () {
        this._mouseDown = false;
    };
    DragZoneControl.prototype._onMouseUp = function () {
        if (!this._isDragging) {
            return;
        }
        this._isDragging = false;
        this._icon.classList.add(DragZone_module_scss_1.default.iconCollapsed);
        this._icon.classList.remove(DragZone_module_scss_1.default.iconVisible);
        document.body.classList.remove(DragZone_module_scss_1.default.noselect);
        if (this._mouseOut || !this._draggedElement || !this._dragOverElement) {
            this._resetCursorEvents();
            this._reset();
            return;
        }
        this._resetCursorEvents();
        this._triggerOnMoved(this._draggedItemPosition, this._hoverOverPosition);
    };
    DragZoneControl.prototype._triggerOnMoved = function (draggedItemPosition, dropPosition) {
        if (this._options.onMoved) {
            if (draggedItemPosition &&
                draggedItemPosition.length === this._tree.depth &&
                dropPosition && dropPosition.length === this._tree.depth) {
                this._options.onMoved(draggedItemPosition, dropPosition);
            }
        }
        this._reset();
    };
    DragZoneControl.prototype._emulateDragOver = function () {
        var _a = this._options, supportHorizontalReorder = _a.supportHorizontalReorder, dataDragDisallowed = _a.dataDragDisallowed;
        var plainElement = this._options.canDropOnEmptyParent ?
            this._tree.getBottomMostElementFromMousePosition(this._draggedElement, dataDragDisallowed) :
            this._tree.getLeafElementFromMousePosition();
        var element = plainElement;
        if (!element) {
            return;
        }
        this._hoverOverPosition = this._tree.getHoverOverItemPosition(element);
        var shouldInsertBefore = DragZoneUtilities_1.DragZoneUtilities.shouldInsertBeforeElement(element, this._tree.currentPosition.x, this._tree.currentPosition.y, this._supportHorizontalReorder);
        var isLeaf = this._tree.isLeafElement(element);
        if (!shouldInsertBefore && isLeaf) {
            this._hoverOverPosition[0]++;
        }
        this._moveLine(element, isLeaf, shouldInsertBefore);
    };
    DragZoneControl.prototype._moveLine = function (adjacentElement, isLeaf, shouldInsertBefore) {
        this._removeLine();
        this._line = document.createElement('div');
        this._line.className = DragZone_module_scss_1.default.dropLocation;
        var supportHorizontalReorder = this._options.supportHorizontalReorder;
        if (supportHorizontalReorder) {
            this._line.classList.add(DragZone_module_scss_1.default.verticalLine);
        }
        else {
            this._line.classList.add(DragZone_module_scss_1.default.horizontalLine);
        }
        if (isLeaf) {
            this._line.classList.add(DragZone_module_scss_1.default.linePositionAbsolute);
            if (supportHorizontalReorder) {
                if (office_ui_fabric_react_1.getRTL()) {
                    if (!shouldInsertBefore) {
                        this._line.style.marginRight = adjacentElement.getBoundingClientRect().width + "px";
                    }
                    else {
                        this._line.style.marginRight = -LINE_WIDTH_PX + "px";
                    }
                }
                else {
                    if (!shouldInsertBefore) {
                        this._line.style.marginLeft = adjacentElement.getBoundingClientRect().width + "px";
                    }
                    else {
                        this._line.style.marginLeft = -LINE_WIDTH_PX + "px";
                    }
                }
            }
            else {
                if (!shouldInsertBefore) {
                    this._line.style.marginTop =
                        this._getLineBottomPosition(adjacentElement.parentElement, adjacentElement) + 'px';
                    this._line.style.marginTop =
                        this._getLineBottomPosition(adjacentElement.parentElement, adjacentElement) + 'px';
                }
                else {
                    this._line.style.marginTop = -this._options.dropPositionOffsetTopPx + 'px';
                }
            }
            adjacentElement.parentElement.insertBefore(this._line, adjacentElement);
        }
        else {
            if (this._supportHorizontalReorder) {
                this._line.classList.add(DragZone_module_scss_1.default.verticalLine);
            }
            else {
                this._line.classList.add(DragZone_module_scss_1.default.horizontalLine);
            }
            adjacentElement.appendChild(this._line);
        }
        this._dragOverElement = adjacentElement;
        return this._line;
    };
    DragZoneControl.prototype._emulateMouseMove = function () {
        this._moveIcon(this._tree.currentPosition.x, this._tree.currentPosition.y);
        window.requestAnimationFrame(this._emulateMouseMove);
    };
    DragZoneControl.prototype._moveIcon = function (x, y) {
        this._icon.style.top = y + ICON_MARGIN_PX + "px";
        if (office_ui_fabric_react_1.getRTL()) {
            this._icon.style.right = x + ICON_MARGIN_PX + "px";
        }
        else {
            this._icon.style.left = x + ICON_MARGIN_PX + "px";
        }
    };
    DragZoneControl.prototype._startDrag = function () {
        if (this._mouseDown) {
            this._onDragStart();
        }
    };
    DragZoneControl.prototype._resetCursorEvents = function () {
        this._removeLine();
        this._tree.startPosition.x = undefined;
        this._tree.startPosition.y = undefined;
        window.cancelAnimationFrame(this._animationFrameHandle);
        this._async.clearInterval(this._dragOverInterval);
        this._options.host.removeEventListener('mousemove', this._onMouseMove);
        this._options.host.removeEventListener('touchmove', this._onTouchMove);
        window.removeEventListener('mouseup', this._onMouseUp);
        window.removeEventListener('touchend', this._onMouseUp);
        this._options.host.classList.remove(DragZone_module_scss_1.default.cursorDragging);
        this._autoScroll.dispose();
    };
    DragZoneControl.prototype._reset = function () {
        var _a = this._options, dataDragDisallowed = _a.dataDragDisallowed, dataDragAreaDisallowedCss = _a.dataDragAreaDisallowedCss;
        this._draggedItemPosition = undefined;
        this._dragOverElement = undefined;
        this._tree.applyRemoveCssToDataDragDisallowed(dataDragDisallowed, false, dataDragAreaDisallowedCss);
    };
    DragZoneControl.prototype._removeLine = function () {
        if (this._dragOverElement) {
            if (this._tree.isLeafElement(this._dragOverElement)) {
                this._dragOverElement.parentElement.removeChild(this._line);
            }
            else {
                this._dragOverElement.removeChild(this._line);
            }
        }
    };
    DragZoneControl.prototype._getLineBottomPosition = function (parent, element) {
        var childRect = element.getBoundingClientRect();
        var bottomInsideParent = childRect.height + this._options.dropPositionOffsetBottomPx;
        return bottomInsideParent || 0;
    };
    Object.defineProperty(DragZoneControl.prototype, "_supportHorizontalReorder", {
        get: function () {
            return this._options.supportHorizontalReorder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneControl.prototype, "_supportKeyboardAlternative", {
        get: function () {
            return this._options.supportKeyboardAlternative;
        },
        enumerable: true,
        configurable: true
    });
    return DragZoneControl;
}());
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_onMouseMove", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_onTouchMove", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_onMouseOut", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_onMouseDown", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_internalMouseUp", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_onMouseUp", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_triggerOnMoved", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_emulateDragOver", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_moveLine", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_emulateMouseMove", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_startDrag", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneControl.prototype, "_removeLine", null);
exports.DragZoneControl = DragZoneControl;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var DragZone_module_scss_1 = __webpack_require__(44);
var DragZoneUtilities = (function () {
    function DragZoneUtilities() {
    }
    DragZoneUtilities.getElementsWithAttribute = function (parent, tag, value) {
        if (!parent) {
            return [];
        }
        var querySelector = "[" + tag + (value ? "=\"" + value + "\"" : "") + "]";
        var tempEls = parent.querySelectorAll(querySelector);
        var elements = [];
        for (var index = 0; index < tempEls.length; index++) {
            elements.push(tempEls[index]);
        }
        return elements;
    };
    DragZoneUtilities.hasAttributeValue = function (elem, attribute, value) {
        return elem && elem.getAttribute(attribute) === value;
    };
    DragZoneUtilities.shouldInsertBeforeElement = function (element, x, y, isHorizontalReorder) {
        var rectangle = element.getBoundingClientRect();
        var center;
        if (isHorizontalReorder) {
            center = ((rectangle.left + rectangle.right) / 2);
            return office_ui_fabric_react_1.getRTL() ? x > center : x < center;
        }
        else {
            center = ((rectangle.bottom + rectangle.top) / 2);
            return y < center;
        }
    };
    DragZoneUtilities.getDefaultIcon = function () {
        var icon = document.createElement('div');
        icon.innerText = 'icon';
        icon.className = DragZone_module_scss_1.default.defaultIconClass;
        icon.hidden = true;
        document.body.appendChild(icon);
        return icon;
    };
    DragZoneUtilities.elementArrayEquals = function (array1, array2) {
        if (!array1 || !array2) {
            return false;
        }
        if (array1.length !== array2.length) {
            return false;
        }
        for (var i = 0; i < array1.length; i++) {
            if (!array1[i].isEqualNode(array2[i])) {
                return false;
            }
        }
        return true;
    };
    DragZoneUtilities.getElementsNotInFirstArray = function (array1, array2) {
        if (!array1 || !array2 || array2.length === 0) {
            return [];
        }
        var addedElements = array2.filter(function (el) { return array1.indexOf(el) === -1; });
        return addedElements;
    };
    return DragZoneUtilities;
}());
exports.DragZoneUtilities = DragZoneUtilities;


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(96);
var styles = {
    defaultIconClass: 'defaultIconClass_61761a30',
    dropLocation: 'dropLocation_61761a30',
    horizontalLine: 'horizontalLine_61761a30',
    verticalLine: 'verticalLine_61761a30',
    noselect: 'noselect_61761a30',
    linePositionAbsolute: 'linePositionAbsolute_61761a30',
    iconVisible: 'iconVisible_61761a30',
    iconCollapsed: 'iconCollapsed_61761a30',
    iconAdditionalStyle: 'iconAdditionalStyle_61761a30',
    cursorDragging: 'cursorDragging_61761a30',
    handleGrab: 'handleGrab_61761a30',
    screenReaderOnly: 'screenReaderOnly_61761a30',
};
exports.default = styles;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Canvas_1 = __webpack_require__(202);
exports.Canvas = Canvas_1.default;
var WebPartRte_1 = __webpack_require__(230);
exports.WebPartRte = WebPartRte_1.default;
var ToolbarButton_1 = __webpack_require__(22);
exports.ToolbarButton = ToolbarButton_1.default;
var CanvasControlType_1 = __webpack_require__(6);
exports.CanvasControlType = CanvasControlType_1.default;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var CanvasControlType_1 = __webpack_require__(6);
var SPRte_1 = __webpack_require__(60);
var SPRteTouchDevice_1 = __webpack_require__(228);
var WebPartZone_1 = __webpack_require__(206);
var Utilities_1 = __webpack_require__(55);
var CanvasControlFactory = (function () {
    function CanvasControlFactory() {
    }
    CanvasControlFactory.CreateCanvasControl = function (props, store) {
        props.onChange = store.notifyChanged;
        props.ref = store.addReference;
        var control;
        switch (props.controlType) {
            case CanvasControlType_1.default.RTE:
                if (Utilities_1.default.isTouchEnabled()) {
                    control = React.createElement(SPRteTouchDevice_1.default, props);
                }
                else {
                    control = React.createElement(SPRte_1.default, props);
                }
                break;
            case CanvasControlType_1.default.WebPartZone:
                control = React.createElement(WebPartZone_1.default, props);
                break;
        }
        return control;
    };
    return CanvasControlFactory;
}());
exports.default = CanvasControlFactory;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(97);
var styles = {
    dragIconContainer: 'dragIconContainer_8d52230c',
    dragIcon: 'dragIcon_8d52230c',
    dragText: 'dragText_8d52230c',
    singleColumn: 'singleColumn_8d52230c',
    doubleColumn: 'doubleColumn_8d52230c',
    tripleColumn: 'tripleColumn_8d52230c',
    columnLeftTwoThirds: 'columnLeftTwoThirds_8d52230c',
    columnRightTwoThirds: 'columnRightTwoThirds_8d52230c',
    disabledArea: 'disabledArea_8d52230c',
};
exports.default = styles;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(4);
var CanvasLayout_1 = __webpack_require__(16);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasSectionPart = (function () {
    function CanvasSectionPart(sectionIdx, factor) {
        this._index = sectionIdx;
        this._factor = factor;
        this._controlsMap = new Map();
    }
    Object.defineProperty(CanvasSectionPart.prototype, "emptySectionControl", {
        get: function () {
            return {
                controlType: undefined,
                displayMode: sp_core_library_1.DisplayMode.Edit,
                id: CanvasSectionPart.emptySectionId,
                position: {
                    zoneIndex: undefined,
                    sectionIndex: this._index,
                    controlIndex: undefined,
                    sectionFactor: this._factor
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "factor", {
        get: function () {
            return this._factor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasSectionPart.prototype, "controls", {
        get: function () {
            var _this = this;
            var canvasControls = [];
            this._controlsMap.forEach(function (control) {
                control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
                    zoneIndex: undefined,
                    sectionIndex: undefined,
                    sectionFactor: _this._factor,
                    controlIndex: undefined
                });
                canvasControls.push(control);
            });
            return canvasControls.sort(function (ctrl1, ctrl2) {
                return ctrl1.position.controlIndex - ctrl2.position.controlIndex;
            });
        },
        enumerable: true,
        configurable: true
    });
    CanvasSectionPart.prototype.addControl = function (canvasControl) {
        if (canvasControl.controlType === CanvasControlType_1.default.WebPartZone ||
            canvasControl.controlType === CanvasControlType_1.default.RTE) {
            if (!canvasControl || !canvasControl.position) {
                return undefined;
            }
            var curControlIndex = canvasControl.position.controlIndex;
            if (curControlIndex === undefined) {
                return undefined;
            }
            var sectionControl = this._controlsMap.get(curControlIndex);
            if (!sectionControl) {
                this._controlsMap.set(curControlIndex, canvasControl);
            }
            else {
                var layoutControlItems = this.controls.map(function (control) {
                    return {
                        index: control.position.controlIndex
                    };
                });
                canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                    zoneIndex: undefined,
                    sectionIndex: undefined,
                    controlIndex: CanvasLayout_1.default.generateNewLayoutIndex(layoutControlItems, curControlIndex)
                });
                if (canvasControl.position.controlIndex === undefined) {
                    return undefined;
                }
                this._controlsMap.set(canvasControl.position.controlIndex, canvasControl);
            }
        }
        return canvasControl.id;
    };
    CanvasSectionPart.prototype.moveControl = function (control, newControlPosition) {
        if (!control ||
            control.position.zoneIndex !== newControlPosition.zoneIndex ||
            control.position.sectionIndex !== newControlPosition.sectionIndex) {
            return;
        }
        this._controlsMap.delete(control.position.controlIndex);
        var siblingLayoutItems = this.controls.map(function (ctrl) {
            return {
                index: ctrl.position.controlIndex
            };
        });
        control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
            controlIndex: CanvasLayout_1.default.generateNewLayoutIndex(siblingLayoutItems, newControlPosition.controlIndex)
        });
        this._controlsMap.set(control.position.controlIndex, control);
    };
    CanvasSectionPart.prototype.removeControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var control = this._controlsMap.get(controlPosition.controlIndex);
        if (!control) {
            return undefined;
        }
        this._controlsMap.delete(control.position.controlIndex);
        return control.id;
    };
    CanvasSectionPart.prototype.fetchControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        return this._controlsMap.get(controlPosition.controlIndex);
    };
    CanvasSectionPart.prototype.fetchAllControls = function () {
        return this.controls;
    };
    CanvasSectionPart.prototype.isEmpty = function () {
        return this.fetchAllControls().length === 0;
    };
    CanvasSectionPart.prototype.dispose = function () {
        this._controlsMap.clear();
    };
    CanvasSectionPart.prototype.changeFactor = function (newFactor) {
        this.controls.forEach(function (control) {
            control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
                zoneIndex: undefined,
                sectionIndex: undefined,
                sectionFactor: newFactor,
                controlIndex: undefined
            });
        });
        this._factor = newFactor;
    };
    return CanvasSectionPart;
}());
exports.default = CanvasSectionPart;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_1 = __webpack_require__(4);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasLayout_1 = __webpack_require__(16);
var CanvasSectionPart_1 = __webpack_require__(48);
var CanvasZonePart = (function () {
    function CanvasZonePart(zoneIdx, map, webPartManager) {
        this._index = zoneIdx;
        this._sectionsMap = new Map();
        this._controlComponentMap = map;
        this._webPartManager = webPartManager;
        this._elementKey = sp_core_library_1.Guid.newGuid().toString();
    }
    Object.defineProperty(CanvasZonePart.prototype, "index", {
        get: function () {
            return this._index;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "elementKey", {
        get: function () {
            return this._elementKey;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "sections", {
        get: function () {
            var sections = [];
            this._sectionsMap.forEach(function (section) {
                sections.push(section);
            });
            return sections.sort(function (section1, section2) {
                return section1.index - section2.index;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasZonePart.prototype, "layoutType", {
        get: function () {
            if (!this._layoutType) {
                this._layoutType = this._getCurrentColumnSize();
            }
            return this._layoutType;
        },
        enumerable: true,
        configurable: true
    });
    CanvasZonePart.prototype.addControl = function (canvasControl) {
        if (!canvasControl || !canvasControl.position) {
            return undefined;
        }
        var curSectionIndex = canvasControl.position.sectionIndex;
        if (curSectionIndex === undefined) {
            return undefined;
        }
        var controlId;
        var sectionsToAdd = 1;
        var colDef = CanvasZonePart.columnDefinitionMap.get(canvasControl.controlType);
        if (colDef) {
            sectionsToAdd = colDef.sections;
        }
        for (var i = 0; i < sectionsToAdd; ++i, ++curSectionIndex) {
            var section = this._sectionsMap.get(curSectionIndex);
            if (!section) {
                var factor = colDef && colDef.factor[i];
                if (isNaN(factor)) {
                    factor = canvasControl.position.sectionFactor;
                }
                var newSection = new CanvasSectionPart_1.default(curSectionIndex, factor);
                if (canvasControl.position.controlIndex === undefined) {
                    canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: undefined,
                        controlIndex: CanvasLayout_1.default.firstLayoutIndex
                    });
                }
                controlId = newSection.addControl(canvasControl);
                if (controlId) {
                    this._sectionsMap.set(curSectionIndex, newSection);
                }
            }
            else {
                if (canvasControl.position.controlIndex !== undefined) {
                    controlId = section.addControl(canvasControl);
                }
                else {
                    canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: CanvasLayout_1.default.generateNewLayoutIndex(this.sections, curSectionIndex),
                        controlIndex: undefined
                    });
                    if (canvasControl.position.sectionIndex === undefined) {
                        return undefined;
                    }
                    var newSecondarySection = new CanvasSectionPart_1.default(canvasControl.position.sectionIndex);
                    canvasControl.position = CanvasLayout_1.default.cloneMergePosition(canvasControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: undefined,
                        controlIndex: CanvasLayout_1.default.firstLayoutIndex
                    });
                    controlId = newSecondarySection.addControl(canvasControl);
                    if (controlId) {
                        this._sectionsMap.set(canvasControl.position.sectionIndex, newSecondarySection);
                    }
                }
            }
        }
        return controlId;
    };
    CanvasZonePart.prototype.moveControl = function (control, newControlPosition) {
        if (!control || control.position.zoneIndex !== newControlPosition.zoneIndex) {
            return;
        }
        if (control.position.sectionIndex === newControlPosition.sectionIndex) {
            this._controlComponentMap.get(control.id).position = newControlPosition;
            var section = this._sectionsMap.get(newControlPosition.sectionIndex);
            section.moveControl(control, newControlPosition);
        }
        else {
            var newControl = this._controlComponentMap.get(control.id).component.serialize();
            newControl.position = newControlPosition;
            newControl.addedFromPersistedData = true;
            this.removeControl(control.position);
            this._webPartManager.disposeWebparts(control.id);
            this.addControl(newControl);
        }
    };
    CanvasZonePart.prototype.removeControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var section = this._sectionsMap.get(controlPosition.sectionIndex);
        if (!section) {
            return undefined;
        }
        var controlId = section.removeControl(controlPosition);
        return controlId;
    };
    CanvasZonePart.prototype.fetchControl = function (controlPosition) {
        if (!controlPosition) {
            return undefined;
        }
        var section = this._sectionsMap.get(controlPosition.sectionIndex);
        if (!section) {
            return undefined;
        }
        return section.fetchControl(controlPosition);
    };
    CanvasZonePart.prototype.fetchAllControls = function (includeEmptySections) {
        var _this = this;
        if (includeEmptySections === void 0) { includeEmptySections = true; }
        var canvasControls = [];
        var sections = this.sections;
        sections.forEach(function (section) {
            var controls = section.fetchAllControls();
            if (includeEmptySections && controls.length === 0) {
                var emptySection = section.emptySectionControl;
                emptySection.position = CanvasLayout_1.default.cloneMergePosition(emptySection.position, {
                    zoneIndex: _this._index,
                    sectionIndex: undefined,
                    controlIndex: undefined
                });
                controls.push(emptySection);
            }
            canvasControls = canvasControls.concat(controls);
        });
        return canvasControls;
    };
    CanvasZonePart.prototype.changeZone = function (zoneType) {
        var colDef = CanvasZonePart.columnDefinitionMap.get(zoneType);
        var sections = this.sections;
        var sectionsLength = sections.length;
        if (colDef.sections > sectionsLength) {
            this._increaseSections(sections, colDef);
        }
        else if (colDef.sections < sectionsLength) {
            this._reduceSections(sections, colDef);
        }
        else if (colDef.factor[0] !== sections[0].factor) {
            sections.forEach(function (sectionPart, index) {
                sectionPart.changeFactor(colDef.factor[index]);
            });
        }
        this._layoutType = zoneType;
    };
    CanvasZonePart.prototype.isEmpty = function () {
        return this.fetchAllControls(false).length === 0;
    };
    CanvasZonePart.prototype.dispose = function () {
        var controls = this.fetchAllControls(false);
        var numControls = controls.length;
        for (var i = 0; i < numControls; ++i) {
            this._webPartManager.disposeWebparts(controls[i].id);
            this._controlComponentMap.delete(controls[i].id);
        }
        this._sectionsMap.clear();
    };
    CanvasZonePart.prototype.changeZoneIndex = function (newZoneIndex) {
        var _this = this;
        this.fetchAllControls(false).forEach(function (control) {
            control.position = CanvasLayout_1.default.cloneMergePosition(control.position, {
                zoneIndex: newZoneIndex
            });
            _this._controlComponentMap.get(control.id).position = control.position;
        });
        this._index = newZoneIndex;
    };
    CanvasZonePart.prototype._createQosScope = function (scope) {
        return new sp_telemetry_1._QosMonitor("Canvas" + scope);
    };
    CanvasZonePart.prototype._increaseSections = function (currentSections, columnDefinition) {
        var qos = this._createQosScope('IncreaseSections');
        try {
            var currentSectionsLength = currentSections.length;
            currentSections.forEach(function (sectionPart, index) {
                sectionPart.changeFactor(columnDefinition.factor[index]);
            });
            var newSectionsLength = columnDefinition.sections;
            var currentSectionIndex = currentSections[currentSectionsLength - 1].index + 1;
            for (var i = currentSectionsLength; i < newSectionsLength; ++i) {
                var newSection = new CanvasSectionPart_1.default(currentSectionIndex, columnDefinition.factor[i]);
                this._sectionsMap.set(currentSectionIndex++, newSection);
            }
            qos.writeSuccess();
        }
        catch (err) {
            qos.writeUnexpectedFailure('Exception', err);
        }
    };
    CanvasZonePart.prototype._reduceSections = function (currentSections, columnDefinition) {
        var _this = this;
        var qos = this._createQosScope('ReduceSections');
        try {
            var currentSectionsLength = currentSections.length;
            var lastSection_1 = currentSections[columnDefinition.sections - 1];
            var lastSectionLastControl = lastSection_1.controls[lastSection_1.controls.length - 1];
            var newSectionsLength = columnDefinition.sections;
            var controlIndex_1 = 1;
            if (lastSectionLastControl) {
                controlIndex_1 = lastSectionLastControl.position.controlIndex;
            }
            for (var i = 0; i < newSectionsLength; ++i) {
                currentSections[i].changeFactor(columnDefinition.factor[i]);
            }
            for (var i = currentSectionsLength - 1; i >= newSectionsLength; --i) {
                currentSections[i].controls.forEach(function (control) {
                    var newControl = _this._controlComponentMap.get(control.id).component.serialize();
                    newControl.position = CanvasLayout_1.default.cloneMergePosition(newControl.position, {
                        zoneIndex: undefined,
                        sectionIndex: lastSection_1.index,
                        sectionFactor: lastSection_1.factor,
                        controlIndex: ++controlIndex_1
                    });
                    newControl.addedFromPersistedData = true;
                    _this._webPartManager.disposeWebparts(control.id);
                    lastSection_1.addControl(newControl);
                });
                currentSections[i].dispose();
                this._sectionsMap.delete(currentSections[i].index);
            }
            qos.writeSuccess();
        }
        catch (err) {
            qos.writeUnexpectedFailure('Exception', err);
        }
    };
    CanvasZonePart.prototype._getCurrentColumnSize = function () {
        var sections = this.sections;
        var sectionsLength = sections.length;
        var firstSectionFactor = sections[0].factor;
        var columnSize;
        if (sectionsLength === 1) {
            columnSize = firstSectionFactor === 0 ? CanvasControlType_1.default.FullWidth : CanvasControlType_1.default.OneColumn;
        }
        else if (sectionsLength === 2) {
            if (firstSectionFactor === 4) {
                columnSize = CanvasControlType_1.default.OneThirdColumnLeft;
            }
            else if (firstSectionFactor === 6) {
                columnSize = CanvasControlType_1.default.TwoColumns;
            }
            else if (firstSectionFactor === 8) {
                columnSize = CanvasControlType_1.default.OneThirdColumnRight;
            }
        }
        else if (sectionsLength === 3) {
            columnSize = CanvasControlType_1.default.ThreeColumns;
        }
        return columnSize;
    };
    return CanvasZonePart;
}());
CanvasZonePart.columnDefinitionMap = new Map([
    [CanvasControlType_1.default.OneColumn, { sections: 1, factor: [12] }],
    [CanvasControlType_1.default.FullWidth, { sections: 1, factor: [0] }],
    [CanvasControlType_1.default.TwoColumns, { sections: 2, factor: [6, 6] }],
    [CanvasControlType_1.default.ThreeColumns, { sections: 3, factor: [4, 4, 4] }],
    [CanvasControlType_1.default.OneThirdColumnRight, { sections: 2, factor: [8, 4] }],
    [CanvasControlType_1.default.OneThirdColumnLeft, { sections: 2, factor: [4, 8] }]
]);
exports.default = CanvasZonePart;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(4);
var sp_telemetry_1 = __webpack_require__(5);
var CanvasControlFactory_1 = __webpack_require__(46);
var CanvasLayout_1 = __webpack_require__(16);
var CanvasToolboxHint_1 = __webpack_require__(52);
var ControlZone_1 = __webpack_require__(54);
var CanvasStrings_resx_1 = __webpack_require__(8);
var Toolbar_1 = __webpack_require__(26);
var CanvasDragZone_1 = __webpack_require__(15);
var odsp_utilities_bundle_1 = __webpack_require__(7);
__webpack_require__(51);
var CanvasSection = (function (_super) {
    __extends(CanvasSection, _super);
    function CanvasSection(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._controlComponents = [];
        return _this;
    }
    CanvasSection._createEmptyControlLayout = function (zoneIndex, sectionIndex, controlIndex) {
        return {
            zoneIndex: zoneIndex,
            sectionIndex: sectionIndex,
            controlIndex: controlIndex
        };
    };
    CanvasSection.prototype._addToolBoxHint = function (nextCtrlPosition) {
        this._controlComponents.push(React.createElement(CanvasToolboxHint_1.default, { ariaLabel: this._getToolboxHintAccessibleTitle(), row: undefined, layout: nextCtrlPosition, key: "hint." + nextCtrlPosition.controlIndex }));
    };
    CanvasSection.prototype._getLayoutSectionClassName = function (isReadMode, isSectionSelected) {
        var layoutSectionClassName = office_ui_fabric_react_1.css('CanvasSection', 'ms-Grid-col', 'ms-u-sm12', "ms-u-xl" + (this.props.section.factor || 12), {
            'CanvasSection--edit': !isReadMode,
            'CanvasSection--read': isReadMode,
            'CanvasSection--selected': isSectionSelected
        });
        return layoutSectionClassName;
    };
    CanvasSection.prototype._shouldCenterAlignHint = function () {
        return false;
    };
    CanvasSection.prototype._getContentSelectionMechanism = function (firstControlLayout) {
        return (React.createElement(CanvasToolboxHint_1.default, { ariaLabel: this._getToolboxHintAccessibleTitle(), row: undefined, layout: firstControlLayout }));
    };
    Object.defineProperty(CanvasSection.prototype, "_dragDisallowedAreaTag", {
        get: function () {
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    CanvasSection.prototype.render = function () {
        var _this = this;
        var store = this.context.store;
        var displayMode = store.displayMode;
        var _a = this.props, zoneIndex = _a.zoneIndex, section = _a.section, selectedPosition = _a.selectedPosition;
        var isSectionSelected = selectedPosition.zoneIndex === zoneIndex &&
            selectedPosition.sectionIndex === section.index;
        var controls = section.controls;
        var numControls = controls.length;
        this._controlComponents = [];
        controls.forEach(function (curCtrl, curIdx) {
            var isControlSelected = isSectionSelected &&
                selectedPosition.controlIndex === curCtrl.position.controlIndex;
            _this._controlComponents.push(React.createElement(ControlZone_1.default, { displayMode: displayMode, id: curCtrl.id, isSelected: isControlSelected, key: curCtrl.id, row: undefined, position: curCtrl.position },
                CanvasControlFactory_1.default.CreateCanvasControl(curCtrl, store),
                React.createElement(Toolbar_1.default, { controlType: curCtrl.controlType, displayMode: displayMode, id: curCtrl.id, row: undefined, onConfigureButtonClick: store.handleConfigureButtonClicked, onDeleteButtonClick: store.handleDeleteControlButtonClicked, controlPosition: curCtrl.position })));
            var nextControlIndex = (curIdx + 1 === numControls) ?
                curCtrl.position.controlIndex + 1 :
                controls[curIdx + 1].position.controlIndex;
            var nextCtrlPosition = CanvasSection._createEmptyControlLayout(curCtrl.position.zoneIndex, curCtrl.position.sectionIndex, nextControlIndex);
            _this._addToolBoxHint(nextCtrlPosition);
        });
        this._firstControlIdx = controls.length > 0 ?
            controls[0].position.controlIndex :
            CanvasLayout_1.default.firstLayoutIndex;
        var firstControlLayout = {
            zoneIndex: zoneIndex,
            sectionIndex: section.index,
            controlIndex: this._firstControlIdx,
            sectionFactor: section.factor
        };
        var isReadMode = displayMode === sp_core_library_1.DisplayMode.Read;
        var layoutSectionClassName = this._getLayoutSectionClassName(isReadMode, isSectionSelected);
        return (React.createElement("div", { className: layoutSectionClassName, ref: function (ref) { return _this._domElement = ref; }, "data-automation-id": 'CanvasSection', "data-drag-tag": CanvasDragZone_1.default.sectionDragTag, "data-drag-disallowedArea-tag": this._dragDisallowedAreaTag },
            this._getContentSelectionMechanism(firstControlLayout),
            this._controlComponents));
    };
    CanvasSection.prototype._getToolboxHintAccessibleTitle = function () {
        var section = this.props.section;
        var columnNo = '';
        try {
            switch (section.index) {
                case 1:
                    columnNo = CanvasStrings_resx_1.default.ToolboxHintColumnOne;
                    break;
                case 2:
                    columnNo = CanvasStrings_resx_1.default.ToolboxHintColumnTwo;
                    break;
                case 3:
                    columnNo = CanvasStrings_resx_1.default.ToolboxHintColumnThree;
                    break;
                default:
                    throw ('Unexpected Error');
            }
        }
        catch (err) {
            sp_telemetry_1._TraceLogger.logError(CanvasSection._logSource, err, "Canvas section has undefined index");
        }
        return odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.ToolboxHintTitleWithLayout, columnNo);
    };
    return CanvasSection;
}(React.Component));
CanvasSection.contextTypes = {
    store: React.PropTypes.object.isRequired
};
CanvasSection._logSource = sp_telemetry_1._LogSource.create('CanvasSection');
exports.default = CanvasSection;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(98);


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(4);
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(13);
var sp_telemetry_1 = __webpack_require__(5);
var CanvasStore_1 = __webpack_require__(9);
var ICanvasZone_1 = __webpack_require__(53);
var CanvasToolboxHint = (function (_super) {
    __extends(CanvasToolboxHint, _super);
    function CanvasToolboxHint(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._isRTL = office_ui_fabric_react_1.getRTL;
        _this.state = CanvasToolboxHint._getState(props);
        if (CanvasStore_1.default.isLayoutSupported) {
            __webpack_require__(198);
        }
        else {
            __webpack_require__(197);
        }
        return _this;
    }
    CanvasToolboxHint._getState = function (props) {
        return {
            isVisible: props.isVisible
        };
    };
    CanvasToolboxHint.prototype.componentDidMount = function () {
        this._domNode = ReactDOM.findDOMNode(this);
        if (this.props.shouldFocus) {
            this.focus();
        }
    };
    CanvasToolboxHint.prototype.componentDidUpdate = function () {
        this.componentDidMount();
    };
    CanvasToolboxHint.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.isVisible !== this.props.isVisible) {
            this.setState(CanvasToolboxHint._getState(nextProps));
        }
    };
    CanvasToolboxHint.prototype.render = function () {
        var _this = this;
        var _a = this.props, ariaLabel = _a.ariaLabel, adjacentZoneState = _a.adjacentZoneState, shouldCenterAlign = _a.shouldCenterAlign;
        var hintClassName = office_ui_fabric_react_1.css('CanvasToolboxHint', {
            'is-visible': this.state.isVisible,
            'zone-selected': adjacentZoneState === ICanvasZone_1.CanvasZoneSelectionState.Selected,
            'zone-active': adjacentZoneState === ICanvasZone_1.CanvasZoneSelectionState.Active
        });
        var hintButtonWrapperClassName = office_ui_fabric_react_1.css('CanvasToolboxHint-plusButtonWrapper', {
            'centerAlign': shouldCenterAlign
        });
        return this.context.store.displayMode === sp_core_library_1.DisplayMode.Edit && (React.createElement("button", { "aria-haspopup": true, "aria-label": ariaLabel, className: hintClassName, onClick: this._handleClick, "data-automation-id": 'toolboxHintButton' },
            React.createElement("div", { className: hintButtonWrapperClassName },
                React.createElement("div", { className: 'CanvasToolboxHint-plusButton', ref: function (ref) { return _this._canvasToolPlusButton = ref; } },
                    React.createElement("i", { className: 'ms-Icon ms-Icon--Add' })))));
    };
    CanvasToolboxHint.prototype.focus = function () {
        var _this = this;
        window.setTimeout(function () {
            if (_this._domNode) {
                _this._domNode.focus();
            }
        }, 0);
    };
    CanvasToolboxHint.prototype._handleClick = function () {
        this.context.store.selectedControlId = undefined;
        if (this.props.layout && this.props.layout.zoneIndex) {
            this.context.store.selectedZoneIndex = this.props.layout.zoneIndex;
        }
        var verticalPosition;
        var horizontalPosition;
        var offsetRight;
        var plusButton = this._canvasToolPlusButton;
        if (this._domNode) {
            var _a = this._domNode, clientWidth = _a.clientWidth, offsetTop = _a.offsetTop, offsetLeft = _a.offsetLeft, parentElement = _a.parentElement;
            if (this.props.layout && this.props.layout.sectionIndex) {
                sp_telemetry_1._EngagementLogger.logEvent('WebPartHint.Click');
                verticalPosition = parentElement.offsetTop + this._domNode.offsetTop;
                if (this._isRTL()) {
                    offsetRight = parentElement.offsetParent.clientWidth - clientWidth - parentElement.offsetLeft - offsetLeft;
                    horizontalPosition = offsetRight + (clientWidth / 2);
                }
                else {
                    horizontalPosition = offsetLeft + parentElement.offsetLeft + (clientWidth / 2);
                }
            }
            else {
                sp_telemetry_1._EngagementLogger.logEvent('SectionHint.Click');
                verticalPosition = offsetTop;
                horizontalPosition = plusButton ? plusButton.parentElement.offsetLeft : 0;
                if (horizontalPosition > 0) {
                    horizontalPosition = -horizontalPosition;
                }
            }
        }
        this.context.store.openToolbox(this.props.layout || this.props.row, verticalPosition, horizontalPosition, this.props.isVisible ? undefined : this._handleToolboxClose);
        this.setState({
            isVisible: true
        });
    };
    CanvasToolboxHint.prototype._handleToolboxClose = function () {
        this.setState({
            isVisible: false
        });
    };
    return CanvasToolboxHint;
}(React.Component));
CanvasToolboxHint.contextTypes = {
    store: React.PropTypes.object.isRequired
};
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasToolboxHint.prototype, "_handleClick", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasToolboxHint.prototype, "_handleToolboxClose", null);
exports.default = CanvasToolboxHint;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasZoneSelectionState;
(function (CanvasZoneSelectionState) {
    CanvasZoneSelectionState[CanvasZoneSelectionState["None"] = 1] = "None";
    CanvasZoneSelectionState[CanvasZoneSelectionState["Active"] = 2] = "Active";
    CanvasZoneSelectionState[CanvasZoneSelectionState["Selected"] = 3] = "Selected";
})(CanvasZoneSelectionState = exports.CanvasZoneSelectionState || (exports.CanvasZoneSelectionState = {}));


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(4);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var sp_webpart_base_1 = __webpack_require__(17);
var sp_lodash_subset_1 = __webpack_require__(11);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasStore_1 = __webpack_require__(9);
var CanvasDragZone_1 = __webpack_require__(15);
var CanvasFullWidthSection_1 = __webpack_require__(21);
var CanvasA11y_1 = __webpack_require__(14);
var CanvasStrings_resx_1 = __webpack_require__(8);
var ControlZone = (function (_super) {
    __extends(ControlZone, _super);
    function ControlZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._handleClickCapture = _this._handleClickCapture.bind(_this);
        _this._handleKeydownCapture = _this._handleKeydownCapture.bind(_this);
        _this._handleMouseOut = _this._handleMouseOut.bind(_this);
        _this._handleMouseOver = _this._handleMouseOver.bind(_this);
        _this._handleToolbarKeydown = _this._handleToolbarKeydown.bind(_this);
        _this._handleTrapFocus = _this._handleTrapFocus.bind(_this);
        _this._handleControlFocus = _this._handleControlFocus.bind(_this);
        _this._selectControl = _this._selectControl.bind(_this);
        if (CanvasStore_1.default.isLayoutSupported) {
            __webpack_require__(105);
        }
        else {
            __webpack_require__(104);
        }
        return _this;
    }
    ControlZone._getDragDisallowedAttribute = function (control) {
        if (!CanvasFullWidthSection_1.default.isFullWidthControl(control)) {
            return CanvasDragZone_1.default.fullWidthSectionTag;
        }
        else {
            return undefined;
        }
    };
    ControlZone.prototype.shouldComponentUpdate = function (nextProps) {
        var _a = this.props, displayMode = _a.displayMode, isSelected = _a.isSelected, row = _a.row, position = _a.position;
        return (displayMode !== nextProps.displayMode ||
            isSelected !== nextProps.isSelected ||
            (CanvasStore_1.default.isLayoutSupported ?
                !sp_lodash_subset_1.isEqual(nextProps.position, this.props.position) :
                row !== nextProps.row));
    };
    ControlZone.prototype.componentDidMount = function () {
        if (this.context.store.selectedControlId === this.props.id) {
            this.context.store.scrollIntoView('partial', this._domElement, 500, ControlZone._VERTICAL_MARGIN * 2);
            this.context.store.a11yManager.navigateTo(this._domElement);
        }
        this._childControl = this.context.store.getControl(this.props.id);
        if (this.props.displayMode === sp_core_library_1.DisplayMode.Edit) {
            this._toolbarElement.addEventListener('keydown', this._handleToolbarKeydown);
            this._childControlElement.addEventListener('keydown', this._handleKeydownCapture, true);
        }
    };
    ControlZone.prototype.componentDidUpdate = function (prevProps) {
        var displayMode = this.props.displayMode;
        if (prevProps.displayMode !== displayMode) {
            if (displayMode === sp_core_library_1.DisplayMode.Edit) {
                this._toolbarElement.addEventListener('keydown', this._handleToolbarKeydown);
                this._childControlElement.addEventListener('keydown', this._handleKeydownCapture, true);
            }
            else if (displayMode === sp_core_library_1.DisplayMode.Read) {
                this._toolbarElement.removeEventListener('keydown', this._handleToolbarKeydown);
                this._childControlElement.removeEventListener('keydown', this._handleKeydownCapture, true);
            }
        }
        if (CanvasStore_1.default.isLayoutSupported &&
            prevProps.position.sectionFactor !== this.props.position.sectionFactor) {
            this.context.store.webPartManager.notifyWebPartContainerResize(this.props.id);
        }
    };
    ControlZone.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, displayMode = _a.displayMode, isSelected = _a.isSelected, id = _a.id;
        var controlType = children[0].props.controlType;
        var isReadMode = displayMode === sp_core_library_1.DisplayMode.Read;
        var accessibleLabel = '';
        var ariaPrimaryLabelById = "cswpAccessibleLabel_" + id;
        var ariaContextualLabelId = "cswpAccessibleLabelContextual_" + id;
        var ariaLabelledBy;
        if (controlType === CanvasControlType_1.default.WebPartZone) {
            ariaLabelledBy = ariaContextualLabelId;
        }
        else if (controlType === CanvasControlType_1.default.RTE) {
            accessibleLabel = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.CanvasZoneAriaWebpartName || '', CanvasStrings_resx_1.default.TextWebPartDisplayName || '') || '';
            ariaLabelledBy = ariaPrimaryLabelById;
        }
        if (displayMode === sp_core_library_1.DisplayMode.Edit) {
            accessibleLabel = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.AriaWebPartOrSectionEnterTemplate || '', accessibleLabel, CanvasStrings_resx_1.default.WebPartAriaLabel) || '';
            if (controlType === CanvasControlType_1.default.WebPartZone) {
                ariaLabelledBy += " " + ariaPrimaryLabelById;
            }
        }
        var zoneClassName = office_ui_fabric_react_1.css('ControlZone', {
            'ControlZone--edit': !isReadMode,
            'ControlZone--selected': isSelected
        });
        return (
        React.createElement("div", { "aria-labelledby": ariaLabelledBy, className: zoneClassName, ref: function (ref) { return _this._domElement = ref; }, onMouseOut: this._handleMouseOut, onMouseOver: this._handleMouseOver, tabIndex: !isReadMode && 0, "data-automation-id": 'ControlZone', "data-drag-tag": CanvasDragZone_1.default.controlZoneDragTag, "data-drag-disallowed-tag": children && children[0] && ControlZone._getDragDisallowedAttribute(children[0].props) },
            React.createElement("div", null,
                React.createElement("div", { className: 'ControlZone-control', onClickCapture: isReadMode ? undefined : this._handleClickCapture, onFocus: isReadMode ? undefined : this._handleControlFocus, ref: function (ref) { return _this._childControlElement = ref; } }, children[0]),
                React.createElement("div", { ref: function (ref) { return _this._toolbarElement = ref; } }, children[1]),
                displayMode === sp_core_library_1.DisplayMode.Edit &&
                    React.createElement("div", { id: ariaPrimaryLabelById, className: 'ControlZone-screenReaderOnly' }, accessibleLabel))));
    };
    ControlZone.prototype._handleControlFocus = function (e) {
        this._selectControl();
    };
    ControlZone.prototype._handleClickCapture = function (e) {
        this._selectControl();
    };
    ControlZone.prototype._handleKeydownCapture = function (evt) {
        if (this._childControl && this._childControl.props.controlType === CanvasControlType_1.default.WebPartZone) {
            this._selectControl();
            if (CanvasA11y_1.isEscape(evt)) {
                this.context.store.a11yManager.navigateTo(this._domElement);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (CanvasA11y_1.isKey(CanvasA11y_1.KeyCodes.F10, evt, true)) {
                this.context.store.a11yManager.navigateTo(this._toolbarElement);
                this.context.store.a11yManager.ariaAlert(CanvasStrings_resx_1.default.ToolbarNavigationArrowKeys);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (CanvasA11y_1.isKey(CanvasA11y_1.KeyCodes.P, evt, true)) {
                this.context.store.webPartManager.setPropertyPaneState(this._childControl.props.id, sp_webpart_base_1.PropertyPaneState.Open);
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (!CanvasA11y_1.isShiftTab(evt) || evt.target !== CanvasA11y_1.getFirstFocusableChild(this._childControlElement)) {
                this.context.store.a11yManager.skipEvent(evt);
            }
        }
    };
    ControlZone.prototype._handleToolbarKeydown = function (evt) {
        if (this._childControl && this._childControl.props.controlType === CanvasControlType_1.default.RTE) {
            this._selectControl();
            if (CanvasA11y_1.isEscape(evt)) {
                this._childControl.focus();
                evt.stopPropagation();
                evt.preventDefault();
            }
            else if (CanvasA11y_1.isTab(evt)) {
                this._childControl.focusFormattingBar();
                evt.stopPropagation();
                evt.preventDefault();
            }
        }
    };
    ControlZone.prototype._handleMouseOut = function (e) {
        this.context.store.hoveredControlId = undefined;
    };
    ControlZone.prototype._handleMouseOver = function (e) {
        this.context.store.hoveredControlId = this.props.id;
    };
    ControlZone.prototype._handleTrapFocus = function (e) {
        if (e.target === this._trapDiv) {
            this._childControl.focus();
        }
    };
    ControlZone.prototype._selectControl = function () {
        if (this.context.store.selectedControlId !== this.props.id) {
            this.context.store.selectedControlId = this.props.id;
        }
    };
    return ControlZone;
}(React.PureComponent));
ControlZone.contextTypes = {
    store: React.PropTypes.object.isRequired
};
ControlZone._VERTICAL_MARGIN = 22;
exports.default = ControlZone;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var odsp_utilities_bundle_1 = __webpack_require__(7);
var Utilities = (function () {
    function Utilities() {
    }
    Utilities.isTouchEnabled = function () {
        var platform = new odsp_utilities_bundle_1.PlatformDetection();
        return platform.isAndroid || platform.isIOS;
    };
    return Utilities;
}());
exports.default = Utilities;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
__webpack_require__(211);
var office_ui_fabric_react_1 = __webpack_require__(0);
function ToolboxGroup(props) {
    var canvasToolboxHeaderClass = office_ui_fabric_react_1.css('CanvasToolboxItemsGroup-header', {
        'CanvasToolboxItemsGroup-header--Embedded': props.embeddedToolbox
    });
    var banner = props.hasHeader ?
        React.createElement("header", { className: canvasToolboxHeaderClass }, props.groupName) :
        React.createElement("hr", { className: 'CanvasToolboxItemsGroup-divider' });
    return (React.createElement("section", { "aria-label": props.groupName, role: 'group', className: 'CanvasToolboxItemsGroup' },
        banner,
        React.createElement("div", { className: 'CanvasToolboxItemsGroup-items' }, props.children)));
}
exports.default = ToolboxGroup;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
__webpack_require__(213);
var office_ui_fabric_react_1 = __webpack_require__(0);
function ToolboxItem(props) {
    var canvasToolboxItemClass = office_ui_fabric_react_1.css('CanvasToolboxItem', {
        'CanvasToolboxItemFloat': !props.embeddedToolbox,
        'CanvasToolboxItem--Embedded': props.embeddedToolbox
    });
    return (React.createElement("button", { className: canvasToolboxItemClass, title: props.description, onClick: function () { return props.onClick(JSON.parse(JSON.stringify(props.itemProps))); }, "data-automation-id": props.automationId },
        props.imageSrc ?
            React.createElement("img", { className: 'CanvasToolboxItem-image', alt: props.displayName, src: props.imageSrc }) :
            React.createElement("span", { className: "CanvasToolboxItem-icon ms-Icon ms-Icon--" + props.msIconName }),
        React.createElement("span", { className: 'CanvasToolboxItem-title' }, props.displayName)));
}
exports.default = ToolboxItem;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(4);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasStore_1 = __webpack_require__(9);
var ToolboxGroup_1 = __webpack_require__(56);
var ToolboxItem_1 = __webpack_require__(57);
var ToolBoxItemClassifier_1 = __webpack_require__(212);
var CanvasA11y_1 = __webpack_require__(14);
__webpack_require__(27);
var CanvasStrings_resx_1 = __webpack_require__(8);
var WEX_PUBLISHING_NEWS_COMMSITE_LAYOUT = 943; 
var WEX_TEAM_NEWS_NEWSREEL_REFACTOR = 944; 
var WEX_TEAM_NEWS_NEWSFEED_REFACTOR = 945; 
var HERO_FLIGHT = 905; 
var PEOPLE_FLIGHT = 941; 
var EVENTS_FLIGHT = 940; 
var NEWS_ID = '8c88f208-6c77-4bdb-86a0-0c47b4316588';
var NEWSREEL_ID = 'a5df8fdf-b508-4b66-98a6-d83bc2597f63';
var NEWSFEED_ID = '0ef418ba-5d19-4ade-9db0-b339873291d0';
var HERO_ID = 'c4bd7b2f-7b6e-4599-8485-16504575f590';
var PEOPLE_ID = '7f718435-ee4d-431c-bdbf-9c4ff326f46e';
var TITLE_REGION_ID = 'cbe7b0a9-3504-44dd-a3a3-0e5cacd07788';
var EVENTS_ID = '20745d7d-8581-4a6c-bf26-68279bc123fc';
var Toolbox = (function (_super) {
    __extends(Toolbox, _super);
    function Toolbox(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._isRTL = office_ui_fabric_react_1.getRTL;
        _this._handleKeyDownCapture = _this._handleKeyDownCapture.bind(_this);
        _this.state = {
            horizontalPosition: props.horizontalPosition,
            verticalPosition: props.verticalPosition
        };
        return _this;
    }
    Toolbox.prototype.componentDidMount = function () {
        if (this._domNode) {
            this._domNode.addEventListener('keydown', this._handleKeyDownCapture, true);
        }
    };
    Toolbox.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.isOpen !== prevProps.isOpen) {
            if (this.props.isOpen) {
                if (this.props.isLoading) {
                    this.context.store.a11yManager.ariaAlert(CanvasStrings_resx_1.default.ToolboxAriaLoadingAlert);
                }
                else {
                    if (prevProps.isLoading) {
                        this.context.store.a11yManager.ariaAlert(CanvasStrings_resx_1.default.ToolboxAriaLoadingFinishedAlert);
                    }
                    this.context.store.a11yManager.saveState();
                    this.context.store.a11yManager.navigateTo(this._domNode);
                    var localizedItemCount = odsp_utilities_bundle_1.StringHelper.formatWithLocalizedCountValue(CanvasStrings_resx_1.default.CanvasItems, CanvasStrings_resx_1.default.CanvasItemsInterval, this.props.toolboxItems.length + 1);
                    var message = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.ToolboxNavigationArrowKeys, localizedItemCount);
                    this.context.store.a11yManager.ariaAlert(message);
                }
            }
            else {
                this.context.store.a11yManager.clearState();
            }
        }
        this._focusOnToolbox(prevProps);
    };
    Toolbox.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.isOpen && this.context.store.scrollableParent) {
            var _a = this.context.store.scrollableParent.getBoundingClientRect(), top_1 = _a.top, bottom = _a.bottom;
            var toolboxHeight = 330;
            var canvasTop = this.context.store.canvasElement.getBoundingClientRect().top;
            var hintOffset = 28;
            var verticalPosition = nextProps.verticalPosition;
            if ((verticalPosition + toolboxHeight + hintOffset + canvasTop > bottom) &&
                (verticalPosition - toolboxHeight - hintOffset > top_1)) {
                verticalPosition -= toolboxHeight + hintOffset;
            }
            this.setState({ verticalPosition: verticalPosition, horizontalPosition: nextProps.horizontalPosition });
        }
    };
    Toolbox.prototype._getToolboxContent = function () {
        var _a = this.props, onItemClick = _a.onItemClick, toolboxItems = _a.toolboxItems;
        var classifier = new ToolBoxItemClassifier_1.default();
        for (var _i = 0, toolboxItems_1 = toolboxItems; _i < toolboxItems_1.length; _i++) {
            var item = toolboxItems_1[_i];
            var webPartManifest = item.itemProps.webPartManifest;
            if (webPartManifest.hiddenFromToolbox) {
                continue;
            }
            if (webPartManifest.id === TITLE_REGION_ID) {
                continue;
            }
            if (!sp_core_library_1._SPFlight.isEnabled(WEX_PUBLISHING_NEWS_COMMSITE_LAYOUT) &&
                !sp_core_library_1._SPFlight.isEnabled(WEX_TEAM_NEWS_NEWSREEL_REFACTOR) &&
                !sp_core_library_1._SPFlight.isEnabled(WEX_TEAM_NEWS_NEWSFEED_REFACTOR) &&
                (webPartManifest.id === NEWS_ID)) {
                continue;
            }
            if ((sp_core_library_1._SPFlight.isEnabled(WEX_PUBLISHING_NEWS_COMMSITE_LAYOUT) ||
                sp_core_library_1._SPFlight.isEnabled(WEX_TEAM_NEWS_NEWSREEL_REFACTOR)) &&
                (webPartManifest.id === NEWSREEL_ID)) {
                continue;
            }
            if (sp_core_library_1._SPFlight.isEnabled(WEX_TEAM_NEWS_NEWSFEED_REFACTOR) &&
                (webPartManifest.id === NEWSFEED_ID)) {
                continue;
            }
            if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.Local &&
                webPartManifest.id === HERO_ID &&
                !sp_core_library_1._SPFlight.isEnabled(HERO_FLIGHT)) {
                continue;
            }
            if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.Local &&
                webPartManifest.id === PEOPLE_ID &&
                !sp_core_library_1._SPFlight.isEnabled(PEOPLE_FLIGHT)) {
                continue;
            }
            if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.Local &&
                webPartManifest.id === EVENTS_ID &&
                !sp_core_library_1._SPFlight.isEnabled(EVENTS_FLIGHT)) {
                continue;
            }
            var itemProps = item;
            itemProps.onClick = onItemClick;
            if (!itemProps.automationId && webPartManifest.alias) {
                itemProps.automationId = webPartManifest.alias + "ToolboxItem";
            }
            classifier.registerItem(item.key, itemProps);
        }
        var toolboxGroups;
        var featuredItemViews = [];
        if (true) {
            featuredItemViews.push(React.createElement(ToolboxItem_1.default, { description: CanvasStrings_resx_1.default.TextWebpartDescription, displayName: CanvasStrings_resx_1.default.TextWebPartDisplayName, itemProps: { controlType: CanvasControlType_1.default.RTE, displayMode: sp_core_library_1.DisplayMode.Edit, id: undefined }, key: 0, msIconName: 'Font', onClick: onItemClick, automationId: 'RTEToolboxItem' }));
        }
        var featuredItemProps = classifier.classify(true);
        featuredItemProps.forEach(function (item) {
            featuredItemViews.push(React.createElement(ToolboxItem_1.default, __assign({}, item)));
        });
        var featuredGroup = React.createElement(ToolboxGroup_1.default, { groupName: CanvasStrings_resx_1.default.ToolboxGroupNameFeatured, key: CanvasStrings_resx_1.default.ToolboxGroupNameFeatured, hasHeader: true }, featuredItemViews);
        var nonFeaturedItemViews = [];
        var nonFeaturedItemProps = classifier.classify(false, function (item1, item2) {
            return item1.displayName.localeCompare(item2.displayName);
        });
        nonFeaturedItemProps.forEach(function (item) {
            nonFeaturedItemViews.push(React.createElement(ToolboxItem_1.default, __assign({}, item)));
        });
        var nonFeaturedGroup = React.createElement(ToolboxGroup_1.default, { groupName: CanvasStrings_resx_1.default.ToolboxGroupNameNonFeatured, key: CanvasStrings_resx_1.default.ToolboxGroupNameNonFeatured, hasHeader: false }, nonFeaturedItemViews);
        var sectionGroup = this._generateSectionItems(onItemClick);
        toolboxGroups =
            React.createElement("div", null,
                featuredGroup,
                (!(this.props.controlPosition && !this.props.controlPosition.sectionIndex &&
                    CanvasStore_1.default.isPolarisMultiColumnEditEnabled))
                    || sectionGroup,
                nonFeaturedGroup);
        return toolboxGroups;
    };
    Toolbox.prototype._getCanvasToolBoxClassName = function () {
        return 'CanvasToolbox';
    };
    Toolbox.prototype._getCanvasToolBoxContainerClassName = function () {
        return 'CanvasToolboxContainer';
    };
    Toolbox.prototype._handleKeyDownCapture = function (e) {
        if (CanvasA11y_1.isEscape(e)) {
            this.context.store.a11yManager.restoreState();
            this.context.store.closeToolbox();
            e.stopPropagation();
            e.preventDefault();
        }
        else if (CanvasA11y_1.isTab(e)) {
            e.stopPropagation();
            e.preventDefault();
        }
    };
    Toolbox.prototype.render = function () {
        var _this = this;
        var _a = this.props, errorMessage = _a.errorMessage, isLoading = _a.isLoading, isOpen = _a.isOpen, onItemClick = _a.onItemClick, toolboxItems = _a.toolboxItems;
        var toolboxContent;
        if (isLoading) {
            toolboxContent = (React.createElement("div", { className: 'ms-Spinner-container' },
                React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large })));
        }
        else {
            var errorLabel = void 0;
            if (errorMessage) {
                errorLabel = React.createElement("div", { className: 'CanvasToolbox-Error' },
                    " ",
                    errorMessage,
                    " ");
            }
            toolboxContent = (React.createElement(office_ui_fabric_react_1.FocusZone, { direction: office_ui_fabric_react_1.FocusZoneDirection.horizontal, isCircularNavigation: true, componentRef: function (focusZone) { return _this._focusZone = focusZone; } },
                errorLabel,
                this._getToolboxContent()));
        }
        return (React.createElement("div", { className: this._getCanvasToolBoxContainerClassName() },
            React.createElement("div", { role: 'toolbar', className: this._getCanvasToolBoxClassName(), ref: function (ref) { return _this._domNode = ref; }, style: {
                    visibility: isOpen ? 'visible' : 'hidden',
                    top: this.state.verticalPosition,
                    left: this._isRTL() ? 0 : this._evalPlacement(this._domNode),
                    right: this._isRTL() ? this._evalPlacement(this._domNode) : 0
                } }, toolboxContent)));
    };
    Toolbox.prototype._focusOnToolbox = function (prevProps) {
        if (this.props.isOpen &&
            this._focusZone &&
            (this.props.horizontalPosition !== prevProps.horizontalPosition ||
                this.props.verticalPosition !== prevProps.verticalPosition ||
                !prevProps.isOpen)) {
            this._focusZone.focus();
        }
    };
    Toolbox.prototype._evalPlacement = function (toolBox) {
        var halfToolBoxWidth = 0;
        if (toolBox !== undefined) {
            halfToolBoxWidth = toolBox.offsetWidth / 2;
        }
        if (this.state.horizontalPosition > 0) {
            return this.state.horizontalPosition - halfToolBoxWidth + "px";
        }
        else {
            return 'calc(50% - ' + (halfToolBoxWidth + this.state.horizontalPosition) + 'px)';
        }
    };
    Toolbox.prototype._createSectionItemProps = function (controlType) {
        return {
            controlType: controlType,
            displayMode: sp_core_library_1.DisplayMode.Edit,
            id: undefined
        };
    };
    Toolbox.prototype._generateSectionItems = function (onItemClick) {
        return (React.createElement(ToolboxGroup_1.default, { groupName: CanvasStrings_resx_1.default.ToolboxSectionHeader, key: 'Sections', hasHeader: true },
            React.createElement(ToolboxItem_1.default, { automationId: 'SingleColumnSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxOneColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxOneColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.OneColumn), msIconName: 'SingleColumn', onClick: onItemClick }),
            React.createElement(ToolboxItem_1.default, { automationId: 'DoubleColumnSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxTwoColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxTwoColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.TwoColumns), msIconName: 'DoubleColumn', onClick: onItemClick }),
            React.createElement(ToolboxItem_1.default, { automationId: 'TripleColumnSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxThreeColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxThreeColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.ThreeColumns), msIconName: 'TripleColumn', onClick: onItemClick }),
            React.createElement(ToolboxItem_1.default, { automationId: 'ColumnRightTwoThirdsSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.OneThirdColumnLeft), msIconName: 'ColumnRightTwoThirds', onClick: onItemClick }),
            React.createElement(ToolboxItem_1.default, { automationId: 'ColumnLeftTwoThirdsSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.OneThirdColumnRight), msIconName: 'ColumnLeftTwoThirds', onClick: onItemClick }),
            CanvasStore_1.default.isCanvasFullWidthSectionSupported &&
                this.context.store.siteSupportsFullWidth &&
                React.createElement(ToolboxItem_1.default, { automationId: 'FullWidthSectionToolboxItem', description: CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart, displayName: CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart, itemProps: this._createSectionItemProps(CanvasControlType_1.default.FullWidth), msIconName: 'LargeGrid', imageSrc: __webpack_require__(70), onClick: onItemClick })));
    };
    return Toolbox;
}(React.Component));
Toolbox.contextTypes = {
    store: React.PropTypes.object.isRequired
};
exports.default = Toolbox;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDom = __webpack_require__(13);
var sp_telemetry_1 = __webpack_require__(5);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var sp_core_library_1 = __webpack_require__(4);
var SPRteFormattingBar_1 = __webpack_require__(219);
var SPRteLinkDialog_1 = __webpack_require__(221);
var CKTextEditor_1 = __webpack_require__(30);
var ToolbarButton_1 = __webpack_require__(22);
var ToolbarSubmenu_1 = __webpack_require__(208);
var CKEditorFlights_1 = __webpack_require__(29);
var RteA11y_1 = __webpack_require__(28);
var office_ui_fabric_react_1 = __webpack_require__(0);
__webpack_require__(226);
var RteStrings_resx_1 = __webpack_require__(12);
var CLICK_ACTION = '.Click';
var BUTTON_NAME = 'Button';
exports.CREATE_EDITOR_MONITOR = 'CreateNewEditor';
exports.CREATE_EDITOR_MONITOR_FAILURE = 'EditorFailedToLoad';
var CREATE_EDITOR_MONITOR_EXPECTED = 'CanvasUnmounted';
var BaseRte = (function (_super) {
    __extends(BaseRte, _super);
    function BaseRte(props, rteOptions) {
        var _this = _super.call(this, props) || this;
        _this._initState();
        _this._options = _this.props.options || rteOptions;
        _this._config = _this._options.config;
        _this._restoreSelectionOnNextFocus = false;
        _this._buttonStates = new Map();
        _this._selectionInitiated = false;
        _this._selectionShouldEnd = false;
        _this._isRtl = document.documentElement.getAttribute('dir').toLowerCase() === 'rtl';
        if (_this.state.displayMode === sp_core_library_1.DisplayMode.Edit && !_this._editor) {
            _this._options.loader.loadModule();
        }
        return _this;
    }
    BaseRte.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: undefined,
            isFormattingBarHidden: true,
            isLinkDialogOpen: false,
            selectedText: ''
        };
    };
    BaseRte.prototype.render = function () {
        var _this = this;
        var formattingBar;
        var html;
        var className;
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Read) {
            className = this._config.editorElementClassName;
            html = this._previousHTML || this.props.innerHTML;
        }
        var isEditMode = this.state.displayMode === sp_core_library_1.DisplayMode.Edit;
        if (isEditMode && !this.state.isFormattingBarHidden) {
            formattingBar = React.createElement(SPRteFormattingBar_1.default, { buttons: this._formattingBarButtons, position: this.state.formattingBarPosition, onKeyDown: this._handleFormattingBarKeyDown, ref: this._resolveRef('_formattingbar') });
        }
        return (React.createElement("div", null,
            this.state.isContextMenuVisible &&
                React.createElement(office_ui_fabric_react_1.ContextualMenu, { shouldFocusOnMount: true, target: this.state.contextMenuTarget, onDismiss: this._onContextualMenuDismiss, directionalHint: this._isRtl ? office_ui_fabric_react_1.DirectionalHint.bottomRightEdge : office_ui_fabric_react_1.DirectionalHint.bottomLeftEdge, items: [
                        {
                            key: RteStrings_resx_1.default.AddRowAboveText,
                            name: RteStrings_resx_1.default.AddRowAboveText,
                            title: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.AddRowAboveShortcutText, RteStrings_resx_1.default.AddRowAboveText),
                            iconProps: {
                                iconName: 'Up'
                            },
                            onClick: function () {
                                _this._editor.formatTable('rowInsertBefore', _this.state.contextMenuTarget);
                            }
                        },
                        {
                            key: RteStrings_resx_1.default.AddRowBelowText,
                            name: RteStrings_resx_1.default.AddRowBelowText,
                            title: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.AddRowBelowShortcutText, RteStrings_resx_1.default.AddRowBelowText),
                            iconProps: {
                                iconName: 'Down'
                            },
                            onClick: function () {
                                _this._editor.formatTable('rowInsertAfter', _this.state.contextMenuTarget);
                            }
                        },
                        {
                            key: RteStrings_resx_1.default.DeleteRowText,
                            name: RteStrings_resx_1.default.DeleteRowText,
                            title: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.DeleteRowShortcutText, RteStrings_resx_1.default.DeleteRowText),
                            iconProps: {
                                iconName: 'Delete'
                            },
                            onClick: function () {
                                _this._editor.formatTable('rowDelete', _this.state.contextMenuTarget);
                            }
                        }
                    ] }),
            this.state.isImageWrappedWithText &&
                this.state.displayMode === sp_core_library_1.DisplayMode.Edit &&
                React.createElement(office_ui_fabric_react_1.MessageBar, { messageBarType: office_ui_fabric_react_1.MessageBarType.warning, ariaLabel: RteStrings_resx_1.default.ImagesWithTextNotSupported, dismissButtonAriaLabel: odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.CloseWarningText, RteStrings_resx_1.default.ImagesWithTextNotSupported), onDismiss: this._onMessageBarDismiss }, RteStrings_resx_1.default.ImagesWithTextNotSupported),
            this.state.isPasteInProgress &&
                React.createElement(office_ui_fabric_react_1.Spinner, { type: office_ui_fabric_react_1.SpinnerType.large, label: RteStrings_resx_1.default.LoadingText }),
            React.createElement("div", { "data-automation-id": 'textBox', role: isEditMode ? 'textbox' : undefined, "aria-multiline": isEditMode || undefined, dangerouslySetInnerHTML: { __html: html }, className: className, onKeyUp: this._handleKeyUp, ref: this._resolveRef('_editorElement') }),
            formattingBar,
            React.createElement(SPRteLinkDialog_1.default, { editorElement: this._editableDiv, isOpen: this.state.isLinkDialogOpen, onCancelClicked: this._closeLinkDialog.bind(this), onDismiss: this._closeLinkDialog.bind(this), onSaveClicked: this._onLinkDialogSaved, ref: this._resolveRef('_linkDialog'), textFieldValue: this._linkAddress || '', validationRegex: BaseRte._URL_VALIDATION_REGEX, selectedText: this.state.selectedText, isCKEditorFlighted: this._IS_CKEDITOR_FLIGHTED, onUnlink: this._handleUnlink })));
    };
    BaseRte.prototype.componentWillMount = function () {
        window.addEventListener('load', this._onSPRteLoad);
    };
    BaseRte.prototype.componentDidMount = function () {
        var _this = this;
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit) {
            if (!this._createNewEditorMonitor) {
                this._createNewEditorMonitor = new sp_telemetry_1._QosMonitor(exports.CREATE_EDITOR_MONITOR);
            }
            this._createNewEditor(this.props.innerHTML || '', this.props.focusEditorOnMount)
                .then(function (editor) {
                _this._afterEditorCreated(editor);
                _this._postEditorCreatedHandlerComplete();
                _this._createNewEditorMonitor.writeSuccess();
            })
                .catch(function (error) {
                _this._createNewEditorMonitor.writeUnexpectedFailure(exports.CREATE_EDITOR_MONITOR_FAILURE, error, {
                    'innerHTML': _this.props.innerHTML
                });
            });
        }
    };
    BaseRte.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit) {
            if (this._formattingbar) {
                this._formattingbarElement = ReactDom.findDOMNode(this._formattingbar);
                this._formattingbarWidth = this._formattingbarElement.offsetWidth || this._formattingbarWidth;
            }
            else {
                this._formattingbarElement = undefined;
            }
        }
    };
    BaseRte.prototype.componentWillUnmount = function () {
        if (this._editor) {
            this._previousHTML = this._editor.destroy();
            this._editor = undefined;
            this._editorElement.removeEventListener('paste', this._onBeforePaste, true);
            this._editorElement.removeEventListener('keydown', this._handleKeyDown);
            document.removeEventListener('mouseup', this._checkSelectionChange);
            if (this._editableDiv) {
                this._editableDiv.removeAttribute('contenteditable');
                this._editableDiv.removeEventListener('focus', this._handleEditorFocus);
            }
            if (this._createNewEditorMonitor) {
                this._createNewEditorMonitor.writeExpectedFailure(CREATE_EDITOR_MONITOR_EXPECTED);
            }
        }
        window.removeEventListener('load', this._onSPRteLoad);
    };
    BaseRte.prototype.componentWillUpdate = function (nextProps, nextState) {
        var _this = this;
        if (this.state.displayMode !== nextState.displayMode) {
            if (nextState.displayMode === sp_core_library_1.DisplayMode.Edit) {
                if (!this._createNewEditorMonitor) {
                    this._createNewEditorMonitor = new sp_telemetry_1._QosMonitor(exports.CREATE_EDITOR_MONITOR);
                }
                this._createNewEditor(this._previousHTML || this.props.innerHTML || '', false).then(function (editor) {
                    _this._afterEditorCreated(editor);
                    _this._setButtonStates();
                    _this._createNewEditorMonitor.writeSuccess();
                }, function (error) {
                    _this._createNewEditorMonitor.writeUnexpectedFailure(exports.CREATE_EDITOR_MONITOR_FAILURE, error, { 'innerHTML': _this.props.innerHTML });
                });
            }
            else if (nextState.displayMode === sp_core_library_1.DisplayMode.Read) {
                this.componentWillUnmount();
            }
        }
        else if (nextState.displayMode === sp_core_library_1.DisplayMode.Edit && this._editor) {
            this._setButtonStates();
        }
    };
    BaseRte.prototype.focus = function () {
        if (this._editor) {
            this._editor.focus();
        }
    };
    BaseRte.prototype.focusFormattingBar = function () {
        if (this._formattingbarElement) {
            RteA11y_1.navigateInside(this._formattingbarElement);
        }
    };
    BaseRte.prototype.setDisplayMode = function (newMode) {
        if (this.state.displayMode !== newMode) {
            this.setState({
                displayMode: newMode,
                formattingBarPosition: undefined,
                isFormattingBarHidden: true,
                isLinkDialogOpen: false
            });
        }
    };
    BaseRte.prototype.serialize = function () {
        var serialization = JSON.parse(JSON.stringify(this.props));
        serialization.innerHTML = this._editor ? this._editor.getHTML() : this.props.innerHTML;
        if (this._editor) {
            serialization.editorType = this._editor.getEditorType();
        }
        return serialization;
    };
    BaseRte.prototype._postEditorCreatedHandlerComplete = function () {
    };
    BaseRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, this._onImagePaste.bind(this), this._onPaste.bind(this), this._onContextualMenu.bind(this));
    };
    BaseRte.prototype._afterEditorCreated = function (editor) {
        this._editor = editor;
        this._handleTextChange();
        this._editorElement.addEventListener('paste', this._onBeforePaste, true);
        this._editorElement.addEventListener('keydown', this._handleKeyDown);
        document.addEventListener('mouseup', this._checkSelectionChange);
        this._editableDiv = this._editor.getEditorType() === 'CKEditor' ? this._editorElement :
            this._editorElement.querySelector('.ql-editor');
        if (this._editableDiv) {
            this._editableDiv.setAttribute('aria-label', RteStrings_resx_1.default.RichTextEditorAriaLabel);
            this._editableDiv.setAttribute('title', RteStrings_resx_1.default.RichTextEditorTitle);
            this._editableDiv.addEventListener('focus', this._handleEditorFocus);
            this._editableDiv.addEventListener('blur', this._handleEditorBlur);
        }
    };
    BaseRte.prototype._openLinkDialog = function (defaultAddress) {
        if (defaultAddress === void 0) { defaultAddress = ''; }
        this._linkAddress = defaultAddress !== '' ? defaultAddress : 'http://';
        if (this._IS_CKEDITOR_FLIGHTED) {
            this._updateSelectedText();
        }
        this.setState({
            isLinkDialogOpen: true
        });
    };
    BaseRte.prototype._closeLinkDialog = function () {
        this._restoreSelectionOnNextFocus = true;
        this._linkAddress = '';
        this.setState({
            isLinkDialogOpen: false
        });
    };
    BaseRte.prototype._handleTextChange = function () {
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('TextChange'), CLICK_ACTION);
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit) {
            if (this._editor) {
                this._currentSelection = this._editor.getSelection() || this._currentSelection;
            }
        }
    };
    BaseRte.prototype._finalizeAction = function (ariaActionName) {
        if (ariaActionName) {
            this._ariaConfirmAction(ariaActionName);
        }
        this._updateActiveButtons();
    };
    BaseRte.prototype._onImagePaste = function (isImageValid, imageBlob, innerHTML) {
        if (!isImageValid) {
            this.setState({ isImageWrappedWithText: true });
        }
        else {
            this.setState({ isImageWrappedWithText: false });
        }
    };
    BaseRte.prototype._onContextualMenu = function (isRightClicked, target) {
        this.setState({
            isContextMenuVisible: isRightClicked,
            contextMenuTarget: target
        });
    };
    BaseRte.prototype._onPaste = function (isPasteInProgress) {
        this.setState({ isPasteInProgress: isPasteInProgress });
    };
    Object.defineProperty(BaseRte.prototype, "_IS_CKEDITOR_FLIGHTED", {
        get: function () {
            return sp_core_library_1._SPFlight.isEnabled(CKEditorFlights_1.CKEDITOR_FLIGHT_ID);
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._handleSelectionChange = function (range, forceUpdate) {
        if (range) {
            this.setState({ currentSubmenuOpen: undefined });
            if (this._restoreOnFocus()) {
                this._updateFormattingBar(false);
                return;
            }
        }
        if (!range) {
            this._updateFormattingBar(true);
        }
        else {
            this._updateSelection(range, forceUpdate);
        }
    };
    BaseRte.prototype._updateSelection = function (range, forceUpdate) {
        if (!this._currentSelection || this.state.isFormattingBarHidden) {
            this._currentSelection = range;
            this._updateFormattingBar(false);
        }
        else if (forceUpdate || this._currentSelection.start !== range.start ||
            this._currentSelection.end !== range.end) {
            this._selectionInitiated = true;
            if (this._selectionShouldEnd) {
                this._currentSelection = range;
                this._updateFormattingBar(false);
                this._selectionInitiated = false;
            }
            this._selectionShouldEnd = false;
        }
    };
    BaseRte.prototype._restoreOnFocus = function () {
        var restore = false;
        if (this._restoreSelectionOnNextFocus && this._currentSelection) {
            this._restoreSelectionOnNextFocus = false;
            this._editor.setSelection(this._currentSelection);
            restore = true;
        }
        return restore;
    };
    BaseRte.prototype._onBeforePaste = function () {
    };
    BaseRte.prototype._handleKeyDown = function (evt) {
        if (RteA11y_1.isTab(evt) || RteA11y_1.isShiftTab(evt)) {
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (RteA11y_1.isKey(RteA11y_1.KeyCodes.F10, evt, true) && this._formattingbarElement) {
            sp_telemetry_1._EngagementLogger.logEvent(this.TAG_NAME + 'ToolbarByKeyboardShortcut.Focus', evt.type);
            RteA11y_1.navigateInside(this._formattingbarElement);
            var screenReaderInstruction = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextNavigationAltF10Keys, RteStrings_resx_1.default.ToolbarNavigationArrowKeys, RteStrings_resx_1.default.ToolbarNavigationTabKeys);
            RteA11y_1.ariaAlert(screenReaderInstruction);
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (RteA11y_1.isKey('K'.charCodeAt(0), evt, false, true)) {
            this._handleLink();
            evt.stopPropagation();
            evt.preventDefault();
        }
    };
    BaseRte.prototype._handleLink = function () {
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('link'), CLICK_ACTION);
        this._isSelectionChangeFromToolbar = true;
        if (!this._IS_CKEDITOR_FLIGHTED) {
            this._currentSelection = this._editor.getSelection();
            if (this._currentSelection) {
                if (this._buttonStates.get('link') === ToolbarButton_1.ButtonState.Active) {
                    this._handleUnlink();
                }
                else if (this._currentSelection.start !== this._currentSelection.end) {
                    this._openLinkDialog();
                }
                this._updateActiveButtons();
            }
        }
        else {
            this._currentSelection = this._editor.getSelection();
            this._openLinkDialog(this._editor.getSelectedLink());
            this._updateActiveButtons();
        }
    };
    BaseRte.prototype._handleFormattingBarKeyDown = function (evt) {
        if (RteA11y_1.isEscape(evt)) {
            if (this._editableDiv && !this._editableDiv.isEqualNode(document.activeElement)) {
                this.focus();
                evt.stopPropagation();
                evt.preventDefault();
            }
        }
    };
    BaseRte.prototype._updateFormattingBar = function (isHidden) {
    };
    ;
    BaseRte.prototype._engagementLoggerClickTagName = function (key) {
        return this.TAG_NAME + key + BUTTON_NAME + CLICK_ACTION;
    };
    BaseRte.prototype._onSPRteLoad = function (e) {
        if (this._config.editorElementClassName === 'cke_editable' &&
            !sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('f4d628e3-3a01-46e7-8508-96db5caa18e6'), '11/16/2016', 'PreloadCKEditor')) {
            CKTextEditor_1.default.preloadEditor(this._config);
        }
    };
    BaseRte.prototype._ariaConfirmAction = function (formatKeyOrName) {
        var format = this._config.formats.get(formatKeyOrName);
        var name = format ? format.button.title : formatKeyOrName;
        var message = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.FormattingBarConfirmAction, name);
        if (this._currentSelection && this._currentSelection.start !== this._currentSelection.end &&
            !(format && format.isLine)) {
            var text = this._editor.getText(this._currentSelection);
            message = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.FormattingBarConfirmActionOnSelection, name, text);
        }
        RteA11y_1.ariaAlert(message);
    };
    BaseRte.prototype._checkSelectionChange = function () {
        if (this._editor) {
            this._selectionShouldEnd = true;
            if (this._selectionInitiated) {
                var range = this._editor.getSelection();
                this._currentSelection = range;
                this._updateFormattingBar(false);
                this._selectionShouldEnd = false;
            }
            this._selectionInitiated = false;
        }
    };
    BaseRte.prototype._getFormatButtonProps = function (formatKey, onClick) {
        var format = this._config.formats.get(formatKey);
        return {
            key: format.key,
            fabricIconKey: format.button.fabricIconKey,
            iconClassName: format.button.iconClassName,
            onClick: onClick,
            canBeActive: format.button.canBeActive,
            isActive: this._buttonStates.get(format.key) === ToolbarButton_1.ButtonState.Active,
            disabled: this._buttonStates.get(format.key) === ToolbarButton_1.ButtonState.Disabled,
            title: format.button.title + (format.button.shortcut ? " (" + format.button.shortcut + ")" : ''),
            label: format.button.label,
            className: format.button.className,
            automationId: formatKey + '-button',
            onBlur: this._handleFormattingBarBlur
        };
    };
    BaseRte.prototype._handleCloseSubmenu = function (isDocumentClick) {
        this.setState({ currentSubmenuOpen: undefined });
        if (isDocumentClick) {
            this._updateFormattingBar(true);
        }
    };
    BaseRte.prototype._updateSelectedText = function () {
        if (this._currentSelection) {
            this.setState({ selectedText: this._currentSelection.text });
        }
    };
    Object.defineProperty(BaseRte.prototype, "_formattingBarButtons", {
        get: function () {
            var _this = this;
            var formatSubmenuButtons = [
                {
                    key: 'normalText',
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarNormalTextButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarNormalTextButtonTitle,
                    onClick: this._handlePlainText,
                    automationId: 'normalText-button'
                },
                this._getFormatButtonProps('h2', this._handleHeading2),
                this._getFormatButtonProps('h3', this._handleHeading3),
                this._getFormatButtonProps('h4', this._handleHeading4),
                this._getFormatButtonProps('blockquote', this._handleQuote)
            ];
            var buttons = [
                React.createElement(ToolbarSubmenu_1.default, { key: 'format', buttons: formatSubmenuButtons, isOpen: this.state.currentSubmenuOpen === 'format', isWide: true, onOpen: function () { _this._isSelectionChangeFromToolbar = true; _this.setState({ currentSubmenuOpen: 'format' }); }, onClose: this._handleCloseSubmenu, onBlur: this._handleFormattingBarBlur }),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('bold', this._handleBold))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('italic', this._handleItalic))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('underline', this._handleUnderline))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('bullet', this._handleListBullets))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('list', this._handleListNumbered))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('alignLeft', this._handleAlignLeft))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('alignCenter', this._handleAlignCenter))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('alignRight', this._handleAlignRight))),
                React.createElement(ToolbarButton_1.default, __assign({}, this._getFormatButtonProps('link', this._handleLink))),
                React.createElement(ToolbarButton_1.default, { key: 'clearFormatting', canBeActive: false, fabricIconKey: 'ClearFormatting', onClick: this._handleClearFormatting, title: RteStrings_resx_1.default.FormattingBarClearFormattingButtonTitle, automationId: 'clearFormatting-button', onBlur: this._handleFormattingBarBlur })
            ];
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    BaseRte.prototype._formatOrPrepare = function (formatKey) {
        this.focus();
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName(formatKey), CLICK_ACTION);
        var format = this._config.formats.get(formatKey);
        if (format.maskedBy) {
            for (var _i = 0, _a = format.maskedBy; _i < _a.length; _i++) {
                var maskingFormat = _a[_i];
                if (this._buttonStates.get(maskingFormat) === ToolbarButton_1.ButtonState.Active) {
                    return;
                }
            }
        }
        var range = this._editor.getSelection();
        var _b = [range.start, range.end], start = _b[0], end = _b[1];
        var isApplied = this._editor.isFormatAppliedToRange(start, end, format);
        if (!(this._cleanupBeforeFormatting(start, end, format) && isApplied)) {
            var formats = {};
            formats[format.editorKey] = isApplied ? false : (format.editorValue !== undefined ? format.editorValue : true);
            this._editor.format(start, end, formats);
            this._finalizeAction(formatKey);
        }
    };
    BaseRte.prototype._handleAlignCenter = function () {
        this._formatOrPrepare('alignCenter');
    };
    BaseRte.prototype._handleAlignLeft = function () {
        this._formatOrPrepare(this._isRtl ? 'alignRight' : 'alignLeft');
    };
    BaseRte.prototype._handleAlignRight = function () {
        this._formatOrPrepare(this._isRtl ? 'alignLeft' : 'alignRight');
    };
    BaseRte.prototype._handleBold = function () {
        this._formatOrPrepare('bold');
    };
    BaseRte.prototype._handleHeading2 = function () {
        this._formatOrPrepare('h2');
    };
    BaseRte.prototype._handleHeading3 = function () {
        this._formatOrPrepare('h3');
    };
    BaseRte.prototype._handleHeading4 = function () {
        this._formatOrPrepare('h4');
    };
    BaseRte.prototype._handleItalic = function () {
        this._formatOrPrepare('italic');
    };
    BaseRte.prototype._handleListBullets = function () {
        this._formatOrPrepare('bullet');
    };
    BaseRte.prototype._handleListNumbered = function () {
        this._formatOrPrepare('list');
    };
    BaseRte.prototype._handlePlainText = function () {
        this.focus();
        if (this._currentSelection) {
            var blockStyles = this._config.supportedFormatsArray.filter(function (format) { return format.isBlockStyle; });
            this._cleanupBeforeFormatting(this._currentSelection.start, this._currentSelection.end, blockStyles[0]);
            this._finalizeAction();
        }
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('PlainText'), CLICK_ACTION);
    };
    BaseRte.prototype._handleQuote = function () {
        this._formatOrPrepare('blockquote');
    };
    BaseRte.prototype._handleClearFormatting = function () {
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('ClearFormatting'), CLICK_ACTION);
        this.focus();
        var range = this._currentSelection;
        var _a = [range.start, range.end], start = _a[0], end = _a[1];
        this._editor.clearFormatting(start, end);
        this._finalizeAction(RteStrings_resx_1.default.FormattingBarClearFormattingButtonTitle);
    };
    BaseRte.prototype._handleUnderline = function () {
        this._formatOrPrepare('underline');
    };
    BaseRte.prototype._handleUnlink = function () {
        this.focus();
        sp_telemetry_1._EngagementLogger.logEvent(this._engagementLoggerClickTagName('Unlink'), CLICK_ACTION);
        if (this._currentSelection) {
            this._editor.format(this._currentSelection.start, this._currentSelection.end, { 'link': false });
            this._finalizeAction(RteStrings_resx_1.default.FormattingBarUnlinkButtonTitle);
        }
        if (this._IS_CKEDITOR_FLIGHTED) {
            this._closeLinkDialog();
        }
    };
    BaseRte.prototype._cleanupBeforeFormatting = function (start, end, newFormat) {
        var formatsToClear = {};
        if (newFormat.isBlockStyle) {
            var blockStyles = this._config.supportedFormatsArray.filter(function (format) { return format.isBlockStyle; });
            for (var _i = 0, blockStyles_1 = blockStyles; _i < blockStyles_1.length; _i++) {
                var format = blockStyles_1[_i];
                formatsToClear[format.editorKey] = false;
            }
        }
        if (newFormat.masks) {
            for (var _a = 0, _b = newFormat.masks; _a < _b.length; _a++) {
                var maskedFormatKey = _b[_a];
                formatsToClear[this._config.formats.get(maskedFormatKey).editorKey] = false;
            }
        }
        this._editor.format(start, end, formatsToClear, true);
        return formatsToClear.hasOwnProperty(newFormat.editorKey);
    };
    BaseRte.prototype._onMessageBarDismiss = function () {
        this.setState({ isImageWrappedWithText: false });
    };
    BaseRte.prototype._onContextualMenuDismiss = function () {
        this.setState({ isContextMenuVisible: false });
    };
    BaseRte.prototype._onLinkDialogSaved = function (displayText) {
        if (this._linkDialog.textFieldValue) {
            if (this._IS_CKEDITOR_FLIGHTED) {
                this._editor.format(this._currentSelection.start, this._currentSelection.end, {
                    'link': this._linkDialog.textFieldValue,
                    'linkText': displayText
                });
            }
            else {
                this._editor.format(this._currentSelection.start, this._currentSelection.end, { 'link': this._linkDialog.textFieldValue });
            }
        }
        this._linkElement = undefined;
        this._finalizeAction(RteStrings_resx_1.default.FormattingBarLinkButtonTitle);
        this._closeLinkDialog();
    };
    BaseRte.prototype._handleEditorFocus = function (evt) {
        this._restoreOnFocus();
    };
    BaseRte.prototype._handleFormattingBarBlur = function (evt) {
        this._hideFormattingBarOnBlur(evt.relatedTarget);
    };
    BaseRte.prototype._handleEditorBlur = function (evt) {
        var _this = this;
        this._async.setTimeout(function () {
            return _this._hideFormattingBarOnBlur(evt.relatedTarget);
        }, 100);
    };
    BaseRte.prototype._hideFormattingBarOnBlur = function (target) {
        var elem = target;
        if ((this._editorElement && this._editorElement.contains(elem)) ||
            (this._formattingbarElement && this._formattingbarElement.contains(elem)) ||
            elem && elem.className === 'ControlZone ControlZone--edit ControlZone--selected') {
            return;
        }
        else {
            this._updateFormattingBar(true);
        }
    };
    BaseRte.prototype._handleKeyUp = function (evt) {
        this._checkSelectionChange();
        this._updateActiveButtons();
    };
    BaseRte.prototype._setButtonStates = function () {
        var range = this._editor.getSelection();
        if (range) {
            var updatedFormats = new Map();
            for (var _i = 0, _a = this._config.supportedFormatsArray; _i < _a.length; _i++) {
                var format = _a[_i];
                updatedFormats.set(format.key, false);
            }
            var maskingFormats = this._config.supportedFormatsArray.filter(function (format) { return !!format.masks; });
            for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
                var maskingFormat = maskingFormats_1[_b];
                if (!updatedFormats.get(maskingFormat.key)) {
                    var isActive = this._editor.isFormatAppliedToRange(range.start, range.end, maskingFormat);
                    this._buttonStates.set(maskingFormat.key, isActive ? ToolbarButton_1.ButtonState.Active : ToolbarButton_1.ButtonState.Normal);
                    updatedFormats.set(maskingFormat.key, true);
                    if (isActive) {
                        for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                            var maskedFormat = _d[_c];
                            this._buttonStates.set(maskedFormat, ToolbarButton_1.ButtonState.Disabled);
                            updatedFormats.set(maskedFormat, true);
                        }
                    }
                }
            }
            for (var _e = 0, _f = this._config.supportedFormatsArray; _e < _f.length; _e++) {
                var format = _f[_e];
                if (!updatedFormats.get(format.key)) {
                    var isActive = this._editor.isFormatAppliedToRange(range.start, range.end, format);
                    this._buttonStates.set(format.key, isActive ? ToolbarButton_1.ButtonState.Active : ToolbarButton_1.ButtonState.Normal);
                }
            }
        }
        if (this._isRtl) {
            var left = this._buttonStates.get('alignLeft');
            this._buttonStates.set('alignLeft', this._buttonStates.get('alignRight'));
            this._buttonStates.set('alignRight', left);
        }
    };
    BaseRte.prototype._updateActiveButtons = function () {
        this.forceUpdate();
    };
    return BaseRte;
}(office_ui_fabric_react_1.BaseComponent));
BaseRte._URL_VALIDATION_REGEX = new RegExp('((^https?:\/\/)|(^ftp:\/\/)|(^file:\/\/)|(^mailto:)|(^news:)|(^pnm:\/\/)|(^mms:\/\/)|(^\/)|(^#)|(^\\\\)).+', 'i');
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_onContextualMenu", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleSelectionChange", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_updateSelection", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_onBeforePaste", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleKeyDown", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleLink", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleFormattingBarKeyDown", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_onSPRteLoad", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_checkSelectionChange", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_getFormatButtonProps", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleCloseSubmenu", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleAlignCenter", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleAlignLeft", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleAlignRight", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleBold", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleHeading2", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleHeading3", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleHeading4", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleItalic", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleListBullets", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleListNumbered", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handlePlainText", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleQuote", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleClearFormatting", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleUnderline", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleUnlink", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_onMessageBarDismiss", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_onContextualMenuDismiss", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_onLinkDialogSaved", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleEditorFocus", null);
__decorate([
    office_ui_fabric_react_1.autobind 
], BaseRte.prototype, "_handleFormattingBarBlur", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleEditorBlur", null);
__decorate([
    office_ui_fabric_react_1.autobind
], BaseRte.prototype, "_handleKeyUp", null);
exports.BaseRte = BaseRte;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var CKTextEditor_1 = __webpack_require__(30);
var QuillEditor_1 = __webpack_require__(223);
var sp_core_library_1 = __webpack_require__(4);
var sp_telemetry_1 = __webpack_require__(5);
var CanvasStore_1 = __webpack_require__(9);
var CanvasControlType_1 = __webpack_require__(6);
var sp_lodash_subset_1 = __webpack_require__(11);
var BaseRte_1 = __webpack_require__(59);
var SPRteQuillConfiguration_1 = __webpack_require__(227);
var SPRteCKEditorConfiguration_1 = __webpack_require__(61);
var office_ui_fabric_react_1 = __webpack_require__(0);
var CKEditorFlights_1 = __webpack_require__(29);
var SPRte = (function (_super) {
    __extends(SPRte, _super);
    function SPRte(props) {
        var _this = _super.call(this, props, sp_core_library_1._SPFlight.isEnabled(CKEditorFlights_1.CKEDITOR_FLIGHT_ID) ?
            { editor: CKTextEditor_1.default, config: new SPRteCKEditorConfiguration_1.default, loader: CKTextEditor_1.default.moduleLoader } :
            { editor: QuillEditor_1.default, config: new SPRteQuillConfiguration_1.default(), loader: QuillEditor_1.default.moduleLoader }) || this;
        _this.TAG_NAME = 'Canvas.';
        _this._REMOVE_EXTRALINE_REGEX = new RegExp(/\n/g);
        _this._restoreScrollTopOnNextFocus = false;
        _this._isPasting = false;
        _this._handleScroll = _this._async.debounce(_this._handleScroll, 100);
        return _this;
    }
    SPRte.prototype._createNewEditor = function (innerHTML, startupFocus) {
        return this._options.editor.createNewEditor(this._config, innerHTML, this._editorElement, this._handleSelectionChange, this._handleTextChange.bind(this), startupFocus, this._onImagePaste.bind(this), this._onPaste.bind(this), this._onContextualMenu.bind(this));
    };
    SPRte.prototype._onImagePaste = function (isImageValid, imageBlob, innerHTML) {
        _super.prototype._onImagePaste.call(this, isImageValid, imageBlob, innerHTML);
        if (isImageValid) {
            this._updateFormattingBar(true, true);
            this._createImageWebPartAndSplitRTE(innerHTML, imageBlob, this.props.position, this.props.id);
        }
    };
    SPRte.prototype.componentDidMount = function () {
        _super.prototype.componentDidMount.call(this);
    };
    SPRte.prototype.componentDidUpdate = function (prevProps, prevState) {
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit && this.context.store && this.context.store.scrollableParent) {
            this._formattingbar ?
                this.context.store.scrollableParent.addEventListener('scroll', this._handleScroll) :
                this.context.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
    };
    SPRte.prototype._postEditorCreatedHandlerComplete = function () {
        this.context.store.webPartManager.setPropertyPaneState(undefined);
        if (!this.props.addedFromPersistedData) {
            this.focus();
        }
    };
    SPRte.prototype._closeLinkDialog = function () {
        this._restoreScrollTopOnNextFocus = true;
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        _super.prototype._closeLinkDialog.call(this);
    };
    SPRte.prototype._openLinkDialog = function (defaultAddress) {
        if (defaultAddress === void 0) { defaultAddress = ''; }
        _super.prototype._openLinkDialog.call(this, defaultAddress);
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
    };
    SPRte.prototype._restoreOnFocus = function () {
        var restore = _super.prototype._restoreOnFocus.call(this);
        if (this._restoreScrollTopOnNextFocus && this._currentScrollTop) {
            this._restoreScrollTopOnNextFocus = false;
            this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
            restore = true;
        }
        return restore;
    };
    SPRte.prototype.focus = function () {
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
        _super.prototype.focus.call(this);
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
    };
    SPRte.prototype._handleTextChange = function () {
        _super.prototype._handleTextChange.call(this);
        if (this._isPasting) {
            this._onAfterPaste();
        }
        if (this.state.displayMode === sp_core_library_1.DisplayMode.Edit && this.props.onChange) {
            this.props.onChange();
        }
    };
    SPRte.prototype._updateFormattingBar = function (isHidden, forceHide) {
        if (!this._editorElement) {
            return;
        }
        var updatePosition = true;
        var newState = {
            formattingBarPosition: {
                left: SPRte._TOOLBAR_DEFAULT_POSITION.left,
                top: SPRte._TOOLBAR_DEFAULT_POSITION.top,
                position: SPRte._TOOLBAR_DEFAULT_POSITION.position,
                right: SPRte._TOOLBAR_DEFAULT_POSITION.right
            },
            isFormattingBarHidden: isHidden
        };
        if (isHidden && this._formattingbarElement) {
            if (!forceHide && this._editableDiv && document.activeElement && document.activeElement === this._editableDiv) {
                isHidden = false;
            }
            else {
                var buttonNodes = this._formattingbarElement.querySelectorAll('.ToolbarButton');
                for (var i = 0; i < buttonNodes.length; i++) {
                    if (this._isSelectionChangeFromToolbar || document.activeElement.isEqualNode(buttonNodes[i])) {
                        this._isSelectionChangeFromToolbar = false;
                        newState.isFormattingBarHidden = false;
                        newState.formattingBarPosition = this.state.formattingBarPosition;
                        isHidden = false;
                        updatePosition = false;
                        break;
                    }
                }
            }
            if (isHidden && !document.activeElement.isContentEditable) {
                window.getSelection().removeAllRanges();
            }
        }
        if (!isHidden) {
            newState.isFormattingBarHidden = false;
            if (updatePosition) {
                newState.formattingBarPosition = this._getFormattingBarPosition();
            }
        }
        this.setState(newState);
    };
    SPRte.prototype._onBeforePaste = function () {
        this._currentScrollTop = this.context.store.scrollableParent.scrollTop;
        this._isPasting = true;
    };
    SPRte.prototype._handleScroll = function () {
        if (this.state.formattingBarPosition) {
            var isSticky = this.state.formattingBarPosition.position === 'fixed';
            if (this._shouldFormattingBarStick() ? !isSticky : isSticky) {
                var newState = {
                    formattingBarPosition: this._getFormattingBarPosition(),
                    isLinkDialogOpen: false
                };
                this.setState(newState);
            }
        }
    };
    SPRte.prototype._getFormattingBarPosition = function () {
        var floatRight = (this._isRtl && !this._isRTEInLastColumn()) ||
            (!this._isRtl && this._isRTEInLastColumn());
        var left = floatRight ? undefined : SPRte._TOOLBAR_DEFAULT_POSITION.left;
        var top = SPRte._TOOLBAR_DEFAULT_POSITION.top;
        var right = floatRight ? 0 : SPRte._TOOLBAR_DEFAULT_POSITION.right;
        var position = 'absolute';
        var isFloating = false;
        if (this._formattingbarElement) {
            if (this._currentSelection && this._currentSelection.start !== this._currentSelection.end) {
                var startBounds = this._editor.getBounds(this._currentSelection.start);
                var endBounds = this._editor.getBounds(Math.max(0, this._currentSelection.end - 1));
                if (startBounds.top === endBounds.top) {
                    isFloating = true;
                    endBounds.left = startBounds.left <= endBounds.left ? endBounds.left : this._editorElement.offsetWidth;
                    var toolbarLeft = (startBounds.left + endBounds.left) / 2 - this._formattingbarWidth / 2;
                    var controlZoneWidth = this._editorElement.offsetWidth + SPRte._CONTROLZONE_PADDING_HORIZONTAL * 2;
                    left = toolbarLeft + this._formattingbarWidth <= controlZoneWidth ?
                        Math.max(toolbarLeft, SPRte._TOOLBAR_DEFAULT_POSITION.left) :
                        controlZoneWidth - this._formattingbarWidth;
                    top = startBounds.top < SPRte._LINE_HEIGHT ?
                        SPRte._TOOLBAR_DEFAULT_POSITION.top :
                        startBounds.top + SPRte._TOOLBAR_DEFAULT_POSITION.top;
                    position = 'absolute';
                    if (left === 0) {
                        if (this._isRtl && !this._isRTEInLastColumn()) {
                            right = undefined;
                        }
                        else if (this._isRTEInLastColumn()) {
                            left = undefined;
                            right = 0;
                        }
                    }
                }
            }
            if (!isFloating && this._shouldFormattingBarStick()) {
                if (floatRight) {
                    right = right + window.innerWidth -
                        this._editorElement.getBoundingClientRect().right - SPRte._CONTROLZONE_PADDING_HORIZONTAL;
                }
                else {
                    left = SPRte._TOOLBAR_DEFAULT_POSITION.left +
                        this._editorElement.getBoundingClientRect().left - SPRte._CONTROLZONE_PADDING_HORIZONTAL;
                }
                top = this.context.store.scrollableParent.getBoundingClientRect().top;
                position = 'fixed';
            }
        }
        return { left: left, top: top, position: position, right: right };
    };
    SPRte.prototype._onAfterPaste = function () {
        var _this = this;
        sp_telemetry_1._EngagementLogger.logEvent(this.TAG_NAME + 'CopyPaste');
        this._isPasting = false;
        this.context.store.scrollableParent.scrollTop = this._currentScrollTop;
        window.setTimeout(function () {
            _this.context.store.scrollableParent.scrollTop = _this._currentScrollTop;
            var range = _this._editor.getSelection();
            if (range) {
                var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
                var cursorTop = _this._editor.getBounds(range.start).top;
                var editorTop = _this._editableDiv.getBoundingClientRect().top;
                if (editorTop + cursorTop > viewportHeight) {
                    _this.context.store.scrollableParent.scrollTop =
                        _this._currentScrollTop + editorTop + cursorTop - viewportHeight + SPRte._LINE_HEIGHT;
                }
            }
        }, 10);
    };
    SPRte.prototype._shouldFormattingBarStick = function () {
        if (this._editorElement) {
            var scrollableParentTop = this.context.store.scrollableParent &&
                this.context.store.scrollableParent.getBoundingClientRect().top;
            var rteRect = this._editorElement.getBoundingClientRect();
            return rteRect.top <= scrollableParentTop &&
                scrollableParentTop <= rteRect.bottom;
        }
    };
    SPRte.prototype._isRTEInLastColumn = function () {
        return CanvasStore_1.default.isLayoutSupported &&
            this.props.position &&
            (this.props.position.sectionIndex === 3 || this.props.position.sectionIndex === 2);
    };
    SPRte.prototype._createImageWebPartAndSplitRTE = function (innerHTML, imageSource, position, id) {
        var itemPropsRTE = {
            controlType: CanvasControlType_1.default.RTE,
            displayMode: this.state.displayMode,
            id: sp_core_library_1.Guid.newGuid().toString(),
            innerHTML: innerHTML
        };
        var imageWebPartManifestId = 'd1d91016-032f-456d-98a4-721247c305e8';
        var itemPropsImageWebPart = this.context.store.getToolBoxItem(imageWebPartManifestId);
        if (itemPropsImageWebPart) {
            itemPropsImageWebPart.webPartData.properties.imageBlob = imageSource;
            itemPropsImageWebPart.webPartData.id = sp_core_library_1.Guid.newGuid().toString();
            if (CanvasStore_1.default.isLayoutSupported) {
                this._addRTEAndImageWebPartWithLayout(position, itemPropsRTE, itemPropsImageWebPart);
            }
            else {
                this._addRTEAndImageWebPartWithoutLayout(id, itemPropsRTE, itemPropsImageWebPart);
            }
        }
    };
    SPRte.prototype._addRTEAndImageWebPartWithLayout = function (position, itemPropsRTE, itemPropsImageWebPart) {
        var controls = this.context.store.canvasLayout.fetchAllControls();
        var currentIndex = sp_lodash_subset_1.findIndex(controls, function (control) {
            return (position.zoneIndex === control.position.zoneIndex &&
                position.sectionIndex === control.position.sectionIndex &&
                position.controlIndex === control.position.controlIndex &&
                position.sectionFactor === control.position.sectionFactor);
        });
        var nextIndex = currentIndex + 1;
        var nextControlPosition;
        if (nextIndex < controls.length &&
            controls[nextIndex].position.zoneIndex === position.zoneIndex &&
            controls[nextIndex].position.sectionIndex === position.sectionIndex) {
            nextControlPosition = sp_lodash_subset_1.clone(controls[nextIndex].position);
            this.context.store.addControlToCanvas(sp_lodash_subset_1.clone(nextControlPosition), itemPropsImageWebPart, true);
            this._addRTEInCanvas(itemPropsRTE, sp_lodash_subset_1.clone(nextControlPosition));
        }
        else {
            nextControlPosition = {
                zoneIndex: position.zoneIndex,
                sectionIndex: position.sectionIndex,
                sectionFactor: position.sectionFactor,
                controlIndex: position.controlIndex + 1
            };
            this._addRTEInCanvas(itemPropsRTE, sp_lodash_subset_1.clone(nextControlPosition));
            this.context.store.addControlToCanvas(sp_lodash_subset_1.clone(nextControlPosition), itemPropsImageWebPart, true);
        }
    };
    SPRte.prototype._addRTEAndImageWebPartWithoutLayout = function (id, itemPropsRTE, itemPropsImageWebPart) {
        var controls = this.context.store.controlsProps;
        var currentIndex = sp_lodash_subset_1.findIndex(controls, function (control) {
            return id === control.id;
        });
        this.context.store.addControlToCanvas(currentIndex + 1, itemPropsImageWebPart, true);
        this._addRTEInCanvas(itemPropsRTE, currentIndex + 2);
    };
    SPRte.prototype._addRTEInCanvas = function (itemPropsRTE, position) {
        var innerHTML = itemPropsRTE.innerHTML.replace(this._REMOVE_EXTRALINE_REGEX, '');
        if (innerHTML !== SPRte._EMPTY_RTE_HTML) {
            this.context.store.addControlToCanvas(position, itemPropsRTE, true);
        }
    };
    return SPRte;
}(BaseRte_1.BaseRte));
SPRte.contextTypes = {
    store: React.PropTypes.object.isRequired
};
SPRte._TOOLBAR_DEFAULT_POSITION = {
    left: 0,
    top: -36,
    position: 'absolute',
    right: undefined
};
SPRte._BASE_SCROLL_THRESHOLD = -10;
SPRte._CONTROLZONE_PADDING_HORIZONTAL = 8;
SPRte._LINE_HEIGHT = 23;
SPRte._EMPTY_RTE_HTML = '<p>&nbsp;</p>';
__decorate([
    office_ui_fabric_react_1.autobind
], SPRte.prototype, "_onBeforePaste", null);
__decorate([
    office_ui_fabric_react_1.autobind
], SPRte.prototype, "_handleScroll", null);
__decorate([
    office_ui_fabric_react_1.autobind
], SPRte.prototype, "_onAfterPaste", null);
exports.default = SPRte;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RteStrings_resx_1 = __webpack_require__(12);
var SPRteCKEditorConfiguration = (function () {
    function SPRteCKEditorConfiguration() {
        this._supportedFormatsArray = [
            {
                key: 'bold',
                editorKey: 'bold',
                browserKey: 'bold',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Bold',
                    shortcut: 'Ctrl+B',
                    title: RteStrings_resx_1.default.FormattingBarBoldButtonTitle
                }
            },
            {
                key: 'italic',
                editorKey: 'italic',
                browserKey: 'italic',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Italic',
                    shortcut: 'Ctrl+I',
                    title: RteStrings_resx_1.default.FormattingBarItalicButtonTitle
                }
            },
            {
                key: 'underline',
                editorKey: 'underline',
                browserKey: 'underline',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Underline',
                    shortcut: 'Ctrl+U',
                    title: RteStrings_resx_1.default.FormattingBarUnderlineButtonTitle
                }
            },
            {
                key: 'link',
                editorKey: 'link',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                masks: ['underline'],
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Link',
                    shortcut: 'Ctrl+K',
                    title: RteStrings_resx_1.default.FormattingBarLinkButtonTitle
                }
            },
            {
                key: 'alignLeft',
                editorKey: 'justifyleft',
                browserKey: 'justifyLeft',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignLeft',
                    title: RteStrings_resx_1.default.FormattingBarAlignLeftButtonTitle
                }
            },
            {
                key: 'alignCenter',
                editorKey: 'justifycenter',
                browserKey: 'justifyCenter',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignCenter',
                    title: RteStrings_resx_1.default.FormattingBarAlignCenterButtonTitle
                }
            },
            {
                key: 'alignRight',
                editorKey: 'justifyright',
                browserKey: 'justifyRight',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignRight',
                    title: RteStrings_resx_1.default.FormattingBarAlignRightButtonTitle
                }
            },
            {
                key: 'bullet',
                editorKey: 'bulletedlist',
                browserKey: 'insertUnorderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'BulletedList',
                    title: RteStrings_resx_1.default.FormattingBarBulletListButtonTitle
                }
            },
            {
                key: 'list',
                editorKey: 'numberedlist',
                browserKey: 'insertOrderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'NumberedList',
                    title: RteStrings_resx_1.default.FormattingBarNumberedListButtonTitle
                }
            },
            {
                key: 'h2',
                editorKey: 'heading2',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    className: 'ToolbarButton--h2'
                }
            },
            {
                key: 'h3',
                editorKey: 'heading3',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    className: 'ToolbarButton--h3'
                }
            },
            {
                key: 'h4',
                editorKey: 'heading4',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    className: 'ToolbarButton--h4'
                }
            },
            {
                key: 'blockquote',
                editorKey: 'blockquote',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    className: 'ToolbarButton--blockquote'
                }
            }
        ];
        this._formats = new Map();
        for (var _i = 0, _a = this._supportedFormatsArray; _i < _a.length; _i++) {
            var format = _a[_i];
            this._formats.set(format.key, format);
        }
        var maskingFormats = this._supportedFormatsArray.filter(function (format) { return !!format.masks; });
        for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
            var maskingFormat = maskingFormats_1[_b];
            for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                var maskedFormatKey = _d[_c];
                var maskedFormat = this._formats.get(maskedFormatKey);
                if (!maskedFormat.maskedBy) {
                    maskedFormat.maskedBy = [maskingFormat.key];
                }
                else {
                    maskedFormat.maskedBy.push(maskingFormat.key);
                }
            }
        }
    }
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "editorElementClassName", {
        get: function () {
            return 'cke_editable';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "formats", {
        get: function () {
            return this._formats;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteCKEditorConfiguration.prototype, "supportedFormatsArray", {
        get: function () {
            return this._supportedFormatsArray;
        },
        enumerable: true,
        configurable: true
    });
    return SPRteCKEditorConfiguration;
}());
exports.default = SPRteCKEditorConfiguration;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function StripOutNewLinesAndSpacesFromInnerHTML(innerHTML) {
    return innerHTML.replace(/>\s+</g, '><');
}
exports.StripOutNewLinesAndSpacesFromInnerHTML = StripOutNewLinesAndSpacesFromInnerHTML;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sp_page_context_1 = __webpack_require__(23);
var sp_extension_base_1 = __webpack_require__(33);
var PlaceholderCollection_1 = __webpack_require__(67);
var ApplicationCustomizerContext = (function (_super) {
    __extends(ApplicationCustomizerContext, _super);
    function ApplicationCustomizerContext(extensionContextParameters, applicationCustomizerContextParameters) {
        var _this = _super.call(this, extensionContextParameters) || this;
        _this._placeholders = new PlaceholderCollection_1.default(_this.serviceScope);
        _this.serviceScope.whenFinished(function () {
            _this._pageContext = _this.serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
        });
        return _this;
    }
    Object.defineProperty(ApplicationCustomizerContext.prototype, "pageContext", {
        get: function () {
            return this._pageContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ApplicationCustomizerContext.prototype, "placeholders", {
        get: function () {
            return this._placeholders;
        },
        enumerable: true,
        configurable: true
    });
    return ApplicationCustomizerContext;
}(sp_extension_base_1.ExtensionContext));
exports.default = ApplicationCustomizerContext;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = __webpack_require__(71);
var sp_extension_base_1 = __webpack_require__(33);
var BaseApplicationCustomizer = (function (_super) {
    __extends(BaseApplicationCustomizer, _super);
    function BaseApplicationCustomizer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BaseApplicationCustomizer.prototype.onRender = function () {
    };
    return BaseApplicationCustomizer;
}(sp_extension_base_1.BaseExtension));
__decorate([
    decorators_1.virtual
], BaseApplicationCustomizer.prototype, "onRender", null);
exports.default = BaseApplicationCustomizer;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DialogManagerConfiguration = (function () {
    function DialogManagerConfiguration() {
    }
    Object.defineProperty(DialogManagerConfiguration, "instance", {
        get: function () {
            if (!this._instance) {
                this._instance = new DialogManagerConfiguration();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManagerConfiguration.prototype, "allowDialogs", {
        get: function () {
            return this._allowDialogs;
        },
        set: function (value) {
            this._allowDialogs = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DialogManagerConfiguration.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    DialogManagerConfiguration.prototype.initialize = function (domElement, allowDialogs) {
        if (allowDialogs === void 0) { allowDialogs = true; }
        this._allowDialogs = allowDialogs;
        this._domElement = domElement;
    };
    DialogManagerConfiguration.prototype.dispose = function () {
        this._allowDialogs = undefined;
        this._domElement = undefined;
    };
    return DialogManagerConfiguration;
}());
exports.default = DialogManagerConfiguration;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(4);
var sp_telemetry_1 = __webpack_require__(5);
var Placeholder = (function () {
    function Placeholder(definition) {
        this._disposeHandler = undefined;
        sp_core_library_1.Validate.isNotNullOrUndefined(definition, 'definition');
        sp_core_library_1.Validate.isNonemptyString(definition.name, 'definition.name');
        sp_core_library_1.Validate.isNotNullOrUndefined(definition.domElement, 'definition.domElement');
        this._name = definition.name;
        this._parentElement = definition.domElement;
    }
    Object.defineProperty(Placeholder.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Placeholder.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        enumerable: true,
        configurable: true
    });
    Placeholder.prototype._tryAttach = function (options) {
        if (this._domElement) {
            return false;
        }
        this._domElement = document.createElement('div');
        this._parentElement.appendChild(this._domElement);
        this._disposeHandler = options.onDispose;
        return true;
    };
    Placeholder.prototype.dispose = function () {
        if (this._domElement) {
            if (this._disposeHandler) {
                try {
                    this._disposeHandler(this);
                }
                catch (error) {
                    sp_telemetry_1._TraceLogger.logError(Placeholder._logSource, new Error("The onDispose API threw an exception for placeholder '" + this._name + "'. Error information is '" + error.message + "'")); 
                }
                this._disposeHandler = undefined;
            }
            this._parentElement.removeChild(this._domElement);
            this._domElement = undefined;
        }
    };
    return Placeholder;
}());
Placeholder._logSource = sp_telemetry_1._LogSource.create('Placeholder');
exports.default = Placeholder;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var PlaceholderManager_1 = __webpack_require__(31);
var Placeholder_1 = __webpack_require__(66);
var PlaceholderCollection = (function () {
    function PlaceholderCollection(serviceScope) {
        var _this = this;
        this._placeholders = undefined;
        serviceScope.whenFinished(function () {
            _this._placeholderManager = serviceScope.consume(PlaceholderManager_1.default.serviceKey);
        });
    }
    PlaceholderCollection.prototype.tryAttach = function (name, options) {
        if (!this._tryInitialize() || !this._placeholders.has(name)) {
            return undefined;
        }
        var placeholder = this._placeholders.get(name);
        if (!placeholder) {
            throw new Error('PlaceHolder dictionary has only the key but not the value for the placeholder');
        }
        var isAttached = placeholder._tryAttach(options);
        if (!isAttached) {
            throw new Error('Trying to attach the placeholder twice before being disposed. This is not allowed.');
        }
        return placeholder;
    };
    Object.defineProperty(PlaceholderCollection.prototype, "placeholderNames", {
        get: function () {
            if (!this._tryInitialize()) {
                return [];
            }
            var array = [];
            var iterator = this._placeholders.keys();
            for (var result = iterator.next(); !result.done; result = iterator.next()) {
                array.push(result.value);
            }
            return array;
        },
        enumerable: true,
        configurable: true
    });
    PlaceholderCollection.prototype._tryInitialize = function () {
        if (this._placeholders) {
            return true;
        }
        if (this._placeholderManager && this._placeholderManager.definitions) {
            this._placeholders = new Map();
            for (var _i = 0, _a = this._placeholderManager.definitions; _i < _a.length; _i++) {
                var definition = _a[_i];
                var placeholder = new Placeholder_1.default(definition);
                this._placeholders.set(definition.name, placeholder);
            }
            return true;
        }
        return false;
    };
    return PlaceholderCollection;
}());
exports.default = PlaceholderCollection;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(4);
var SPThemeProvider_1 = __webpack_require__(236);
var SPGlobalErrorHandler_1 = __webpack_require__(232);
var DialogManagerConfiguration_1 = __webpack_require__(65);
var SPPageChrome_module_scss_1 = __webpack_require__(235);
var SPPageChrome = (function () {
    function SPPageChrome(serviceScope) {
        this._createPageChrome();
        DialogManagerConfiguration_1.default.instance.initialize(this.dialogContainerDiv);
        if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('48CB5A9D-4E94-40F0-B51F-24480C28E565'), '7/13/2016', 'EnableTheming')) {
            this._spThemeProvider = new SPThemeProvider_1.default(serviceScope);
            this._spThemeProvider.loadThemedStyles();
        }
    }
    SPPageChrome.getInstance = function (serviceScope) {
        if (SPPageChrome._instance === undefined) {
            SPPageChrome._instance = new SPPageChrome(serviceScope);
        }
        return SPPageChrome._instance;
    };
    SPPageChrome.prototype.changeSuiteNavHeight = function (pixels) {
        var top = parseInt(pixels, 10) + 'px';
        if (!this._isFlexLayoutEnabled) {
            this.appDiv.style.top = top;
            this.appDiv.style.height = "calc(100% - " + top + ")";
            this.propertyPaneContainerDiv.style.top = top;
        }
        this.suiteNavDiv.style.height = top;
    };
    SPPageChrome.prototype._createPageChrome = function () {
        document.body.className = 'ms-font-m';
        var pageChromeDiv = document.createElement('div');
        pageChromeDiv.setAttribute('class', this._isFlexLayoutEnabled ? 'SPPageChrome' : 'SPPageChromeNoFlexbox');
        this.suiteNavDiv = document.createElement('div');
        this.suiteNavDiv.setAttribute('id', 'SuiteNavPlaceHolder');
        this.appDiv = document.createElement('div');
        this.appDiv.setAttribute('class', this._isFlexLayoutEnabled ? "SPPageChrome-app" : "SPPageChromeNoFlexbox-app " + SPPageChrome_module_scss_1.default.spPageContentTransition);
        this.appDiv.setAttribute('id', 'spPageChromeAppDiv');
        this.propertyPaneContainerDiv = document.createElement('div');
        if (this._isFlexLayoutEnabled) {
            this.propertyPaneContainerDiv.setAttribute('class', "spPropertyPaneContainer " + SPPageChrome_module_scss_1.default.spPageContentTransition);
            this.propertyPaneContainerDiv.setAttribute('id', 'spPropertyPaneContainer');
        }
        else {
            this.propertyPaneContainerDiv.setAttribute('class', "spPropertyPaneContainerNoFlexbox " + SPPageChrome_module_scss_1.default.spPageContentTransition);
            this.propertyPaneContainerDiv.setAttribute('id', 'spPropertyPaneContainerNoFlexbox');
        }
        pageChromeDiv.appendChild(this.suiteNavDiv);
        if (this._isFlexLayoutEnabled) {
            this.appAndPropertyPaneDiv = document.createElement('div');
            this.appAndPropertyPaneDiv.setAttribute('class', "spAppAndPropertyPanelContainer");
            pageChromeDiv.appendChild(this.appAndPropertyPaneDiv);
            this.appAndPropertyPaneDiv.appendChild(this.appDiv);
            this.appAndPropertyPaneDiv.appendChild(this.propertyPaneContainerDiv);
        }
        else {
            pageChromeDiv.appendChild(this.appDiv);
            pageChromeDiv.appendChild(this.propertyPaneContainerDiv);
        }
        this.dialogContainerDiv = document.createElement('div');
        this.dialogContainerDiv.setAttribute('id', 'spDialogContainerDiv');
        pageChromeDiv.appendChild(this.dialogContainerDiv);
        document.body.appendChild(pageChromeDiv);
        if (this._shouldHandleGlobalErrors && !window.onerror) {
            window.onerror = SPGlobalErrorHandler_1.default.basicTracingHandler;
        }
    };
    Object.defineProperty(SPPageChrome.prototype, "_shouldHandleGlobalErrors", {
        get: function () {
            return !sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('BAC66CD5-F1C1-4BDD-9FFD-A8C6044EB285'), '10/13/2016', 'GlobalErrorHandler');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPPageChrome.prototype, "_isFlexLayoutEnabled", {
        get: function () {
            return !sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('E17AF313-E05B-4055-BDF7-7CD508F8853F'), '5/9/2017', 'Switch to flexbox');
        },
        enumerable: true,
        configurable: true
    });
    return SPPageChrome;
}());
exports.default = SPPageChrome;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var sp_http_1 = __webpack_require__(20);
var sp_loader_1 = __webpack_require__(35);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var ISuiteNavDataSource_1 = __webpack_require__(32);
var SPOSuiteNavDataSource_1 = __webpack_require__(245);
var OnPremSuiteNavDataSource_1 = __webpack_require__(244);
var O365ShellWrapper_1 = __webpack_require__(242);
var SPPageChrome_1 = __webpack_require__(68);
var SuiteNavManager = (function () {
    function SuiteNavManager(suiteNavManagerConfiguration, suiteNavDiv, serviceScope) {
        var _this = this;
        this._suiteNavManagerConfiguration = suiteNavManagerConfiguration;
        this._suiteNavDataSource = undefined;
        this._o365Shell = undefined;
        this._suiteNavManagerConfiguration.o365ShellRenderSettings.top = suiteNavDiv.id;
        this._suiteNavDiv = suiteNavDiv;
        this._serviceScope = serviceScope;
        serviceScope.whenFinished(function () {
            _this._httpClient = serviceScope.consume(sp_http_1.SPHttpClient.serviceKey);
        });
        if (!suiteNavManagerConfiguration.isSuiteNavDisabled()) {
            SPPageChrome_1.default.getInstance(this._serviceScope).changeSuiteNavHeight(SuiteNavManager._defaultSuiteNavHeight);
        }
    }
    SuiteNavManager._updateCache = function (model, service) {
        SuiteNavManager._cache.setValue(SuiteNavManager.DATA_KEY, model);
        SuiteNavManager._cache.setValue(SuiteNavManager.DATE_KEY, new Date());
        SuiteNavManager._cache.setValue(SuiteNavManager.VERSION_KEY, SuiteNavManager.CACHE_VERSION);
        SuiteNavManager._cache.setValue(SuiteNavManager.SESSION_KEY, true, odsp_utilities_bundle_1.DataStoreCachingType.session);
        SuiteNavManager._cache.setValue(SuiteNavManager.SERVICE_KEY, service);
    };
    SuiteNavManager._clearCache = function () {
        SuiteNavManager._cache.remove(SuiteNavManager.DATA_KEY);
        SuiteNavManager._cache.remove(SuiteNavManager.DATE_KEY);
        SuiteNavManager._cache.remove(SuiteNavManager.VERSION_KEY);
        SuiteNavManager._cache.remove(SuiteNavManager.SERVICE_KEY);
    };
    SuiteNavManager.prototype.setComponentVisibility = function (setVisible) {
        var _this = this;
        this._suiteNavDiv.hidden = !setVisible;
        if (this._suiteNavModel) {
            this._suiteNavModel.then(function (model) {
                SPPageChrome_1.default.getInstance(_this._serviceScope).changeSuiteNavHeight(setVisible ?
                    model.NavBarData.Dimensions.Top :
                    '0px');
            });
        }
    };
    SuiteNavManager.prototype.loadSuiteNav = function () {
        var _this = this;
        this._suiteNavModel = this._getSuiteNavModel();
        this._suiteNavModel
            .then(function (suiteNavModel) { return _this._modifySuiteNavModel(suiteNavModel); })
            .then(function (suiteNavModel) { return _this._getSuiteNavShell(suiteNavModel); })
            .then(function (o365ShellWrapper) { return _this._renderSuiteNav(o365ShellWrapper); });
    };
    SuiteNavManager.prototype._getSuiteNavModel = function () {
        if (this._isCacheValid() && !this._isCacheOutdated()) {
            return this._loadSuiteNavFromCache();
        }
        else {
            SuiteNavManager._clearCache();
            return this._loadSuiteNavFromServer();
        }
    };
    SuiteNavManager.prototype._loadSuiteNavFromCache = function () {
        var _this = this;
        return new Promise(function (complete) {
            SuiteNavManager._cache.getValue(SuiteNavManager.SERVICE_KEY) ===
                ISuiteNavDataSource_1.SuiteNavSource.SPO ?
                _this._suiteNavDataSource = _this._createSPODataSource() :
                _this._suiteNavDataSource = _this._createOnPremDataSource();
            complete(SuiteNavManager._cache.getValue(SuiteNavManager.DATA_KEY));
        });
    };
    SuiteNavManager.prototype._loadSuiteNavFromServer = function () {
        var _this = this;
        this._suiteNavDataSource = this._createSPODataSource();
        var onPremDataSource = this._createOnPremDataSource();
        var onPremSuiteNavResponse = onPremDataSource.loadData();
        onPremSuiteNavResponse.catch(function () {
            _this._createSuiteNavErrorLogEntry('loadData', 'Failed to retrieve Hybrid SuiteNavData');
        });
        return this._suiteNavDataSource.loadData().then(function (response) {
            return response;
        }).catch(function () {
            _this._createSuiteNavErrorLogEntry('loadData', 'Failed to retrieve SPO SuiteNavData');
            _this._suiteNavDataSource = onPremDataSource;
            return onPremSuiteNavResponse;
        });
    };
    SuiteNavManager.prototype._modifySuiteNavModel = function (suiteNavResponse) {
        suiteNavResponse.NavBarData =
            this._suiteNavManagerConfiguration.modifySuiteNavData(suiteNavResponse.NavBarData);
        return suiteNavResponse;
    };
    SuiteNavManager.prototype._getSuiteNavShell = function (suiteNavModel) {
        if (!suiteNavModel) {
            this._createSuiteNavErrorLogEntry('getO365Shell', 'SuiteNavModel is undefined');
        }
        suiteNavModel.CacheToken = this._suiteNavManagerConfiguration.cacheToken;
        suiteNavModel.UserIdentifier = this._suiteNavManagerConfiguration.systemUserKey;
        SuiteNavManager._updateCache(suiteNavModel, this._suiteNavDataSource.suiteNavService);
        SPPageChrome_1.default.getInstance(this._serviceScope).changeSuiteNavHeight(suiteNavModel.NavBarData.Dimensions.Top);
        var element = document.createElement('link');
        element.rel = 'stylesheet';
        element.type = 'text/css';
        element.href = suiteNavModel.CssUrl;
        document.head.appendChild(element);
        var promise = new Promise(function (complete) {
            sp_loader_1.SPComponentLoader.loadScript(suiteNavModel.JsUrl).then(function () {
                var o365Shell = new O365ShellWrapper_1.default();
                o365Shell.SetData(suiteNavModel.NavBarData);
                complete(o365Shell);
            });
        });
        return promise;
    };
    SuiteNavManager.prototype._renderSuiteNav = function (o365Shell) {
        var _this = this;
        this._o365Shell = o365Shell;
        this._o365Shell.RenderAsync(this._suiteNavManagerConfiguration.o365ShellRenderSettings, function () {
            _this._onRender(o365Shell);
        }, function () {
            _this._onPostRender();
        });
        this._o365Shell.OnHasMember('LoadShellPlus', function () {
            _this._loadShellPlus(_this._o365Shell);
        });
    };
    SuiteNavManager.prototype._onRender = function (o365Shell) {
        if (this._suiteNavManagerConfiguration.hamburgerCallback) {
            if (o365Shell.Navigation.OnHamburgerButtonClick) {
                o365Shell.Navigation.OnHamburgerButtonClick(this._suiteNavManagerConfiguration.hamburgerCallback);
            }
        }
    };
    SuiteNavManager.prototype._onPostRender = function () {
        if (this._suiteNavManagerConfiguration.suiteNavPostRenderCallback) {
            this._suiteNavManagerConfiguration.suiteNavPostRenderCallback();
        }
    };
    SuiteNavManager.prototype._loadShellPlus = function (o365Shell) {
        var _this = this;
        return new Promise(function () {
            o365Shell.LoadShellPlus();
        }).catch(function (errorMessage) {
            _this._createSuiteNavErrorLogEntry('loadShellPlus', errorMessage);
        });
    };
    SuiteNavManager.prototype._isCacheValid = function () {
        var model = SuiteNavManager._cache.getValue(SuiteNavManager.DATA_KEY);
        var oldVersion = SuiteNavManager._cache.getValue(SuiteNavManager.VERSION_KEY);
        return (model && model.NavBarData &&
            ((model.JsUrl && model.CssUrl)) &&
            oldVersion === SuiteNavManager.CACHE_VERSION &&
            model.UserIdentifier &&
            model.UserIdentifier === this._suiteNavManagerConfiguration.systemUserKey &&
            model.CacheToken === this._suiteNavManagerConfiguration.cacheToken);
    };
    SuiteNavManager.prototype._isCacheOutdated = function () {
        var cacheDate = Date.parse(SuiteNavManager._cache.getValue(SuiteNavManager.DATE_KEY));
        var currentDate = new Date();
        var cachedThisSession = SuiteNavManager._cache.getValue(SuiteNavManager.SESSION_KEY, odsp_utilities_bundle_1.DataStoreCachingType.session);
        return (isNaN(cacheDate) ||
            currentDate.getTime() - cacheDate > 24 * 60 * 60 * 1000 ||
            (odsp_utilities_bundle_1.DataStore.hasStorageType(odsp_utilities_bundle_1.DataStoreCachingType.session) && !cachedThisSession));
    };
    SuiteNavManager.prototype._createSPODataSource = function () {
        return new SPOSuiteNavDataSource_1.default(this._httpClient, this._suiteNavManagerConfiguration.currentUICultureName, this._suiteNavManagerConfiguration.webServerRelativeUrl);
    };
    SuiteNavManager.prototype._createOnPremDataSource = function () {
        return new OnPremSuiteNavDataSource_1.default(this._httpClient, this._suiteNavManagerConfiguration.currentUICultureName, this._suiteNavManagerConfiguration.webServerRelativeUrl);
    };
    SuiteNavManager.prototype._createSuiteNavErrorLogEntry = function (moduleName, errorMessage) {
        sp_telemetry_1._TraceLogger.logVerbose(SuiteNavManager._logSource, 'SuiteNavManager ' + moduleName + ' ' + errorMessage);
    };
    return SuiteNavManager;
}());
SuiteNavManager._defaultSuiteNavHeight = '50px';
SuiteNavManager.CACHE_PREFIX = 'SPPPLATSuiteNav';
SuiteNavManager.SERVICE_KEY = 'SuiteNavService';
SuiteNavManager.DATA_KEY = 'Data';
SuiteNavManager.DATE_KEY = 'CacheDate';
SuiteNavManager.VERSION_KEY = 'CacheVersion';
SuiteNavManager.SESSION_KEY = 'CachedThisSession';
SuiteNavManager.CACHE_VERSION = 1;
SuiteNavManager._cache = new odsp_utilities_bundle_1.DataStore(SuiteNavManager.CACHE_PREFIX, odsp_utilities_bundle_1.DataStoreCachingType.local);
SuiteNavManager._logSource = sp_telemetry_1._LogSource.create('SuiteNavManager');
exports.default = SuiteNavManager;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "full_width_69006192e2822d1ca155670897d8e541.png";

/***/ }),
/* 71 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_71__;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var ErrorDialog_resx_1 = __webpack_require__(161);
var ErrorDialog = (function (_super) {
    __extends(ErrorDialog, _super);
    function ErrorDialog() {
        var _this = _super.call(this) || this;
        _this.state = {
            showDialog: false
        };
        return _this;
    }
    ErrorDialog.prototype.render = function () {
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: this.state.showDialog, type: office_ui_fabric_react_1.DialogType.largeHeader, title: ErrorDialog_resx_1.default.Title, subText: ErrorDialog_resx_1.default.SubText, isBlocking: false },
            React.createElement("span", null, ErrorDialog_resx_1.default.ClickHerePrefix),
            React.createElement(office_ui_fabric_react_1.Link, { href: 'https://dev.office.com/sharepoint/docs/spfx/web-parts/get-started/build-a-hello-world-web-part' }, ErrorDialog_resx_1.default.ClickHereLink),
            React.createElement("span", null, ErrorDialog_resx_1.default.ClickHereSuffix),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.Button, { buttonType: office_ui_fabric_react_1.ButtonType.primary, onClick: this._close }, ErrorDialog_resx_1.default.OkButtonText))));
    };
    ErrorDialog.prototype.open = function () {
        this.setState({ showDialog: true });
    };
    ErrorDialog.prototype._close = function () {
        this.setState({ showDialog: false });
    };
    return ErrorDialog;
}(React.Component));
__decorate([
    office_ui_fabric_react_1.autobind
], ErrorDialog.prototype, "open", null);
__decorate([
    office_ui_fabric_react_1.autobind
], ErrorDialog.prototype, "_close", null);
exports.default = ErrorDialog;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var sp_core_library_1 = __webpack_require__(4);
var office_ui_fabric_react_1 = __webpack_require__(0);
var WorkbenchCommandBar_1 = __webpack_require__(184);
var CanvasHost_1 = __webpack_require__(158);
var MobilePreview_1 = __webpack_require__(19);
var SerializedCanvasView_1 = __webpack_require__(180);
var Workbench_resx_1 = __webpack_require__(187);
var Workbench_module_scss_1 = __webpack_require__(186);
var WorkBench = (function (_super) {
    __extends(WorkBench, _super);
    function WorkBench(props) {
        var _this = _super.call(this, props) || this;
        var urlParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        _this.state = {
            displayMobilePreview: false,
            showSerializedCanvasView: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone,
            isEditing: (urlParams.getValue('Mode') !== 'Read'),
            officeHeaderTitle: Workbench_resx_1.default.Office365Title,
            hasOfficeHeader: false,
            hasCommandBar: false,
            a11yManagerLoaded: false
        };
        return _this;
    }
    WorkBench.prototype.render = function () {
        var mobilePreview = undefined;
        var pageStore = this.props.pageStore;
        if (this.state.displayMobilePreview) {
            mobilePreview = React.createElement(MobilePreview_1.default, { onExit: this._closeMobilePreview, deviceType: this.state.mobilePreviewDeviceType });
        }
        var serializeCallback = pageStore.getSerializeCallback();
        return (React.createElement("div", { className: office_ui_fabric_react_1.css(Workbench_module_scss_1.default.workbench, 'ms-Fabric is-focusVisible') },
            React.createElement("div", { className: Workbench_module_scss_1.default.header },
                React.createElement("div", { className: Workbench_module_scss_1.default.headerMenu },
                    React.createElement(office_ui_fabric_react_1.Icon, { iconName: 'Waffle' })),
                React.createElement("div", { className: office_ui_fabric_react_1.css(Workbench_module_scss_1.default.headerTitle, 'ms-font-xl') },
                    React.createElement("em", null, this.state.officeHeaderTitle),
                    Workbench_resx_1.default.SharePointWorkbenchTitle),
                React.createElement("div", { className: Workbench_module_scss_1.default.headerPerson },
                    React.createElement(office_ui_fabric_react_1.Icon, { iconName: 'Contact' }))),
            React.createElement("div", null,
                React.createElement("div", { id: 'workbenchCommandBar', className: Workbench_module_scss_1.default.commandBar },
                    React.createElement(WorkbenchCommandBar_1.default, { isEditing: this.state.isEditing, onClickMobileView: this._onClickMobileView, onClickTabletView: this._onClickTabletView, toggleEdit: this._toggleEdit, clearPage: pageStore.clearPageState, savePage: pageStore.savePageState, onClickSerializeCanvasView: this._onClickSerializeCanvasView })),
                React.createElement("div", { id: 'workbenchPageContent', className: Workbench_module_scss_1.default.pageContent },
                    React.createElement(CanvasHost_1.default, { store: pageStore, isEditing: this.state.isEditing, hasOfficeHeader: this.state.hasOfficeHeader, hasCommandBar: this.state.hasCommandBar }))),
            mobilePreview,
            React.createElement(SerializedCanvasView_1.default, { getSerializedData: function (json) { return (serializeCallback) ? serializeCallback(json) : undefined; }, isVisible: this.state.showSerializedCanvasView, closeCallback: this._closeClickSerializeCanvasView })));
    };
    WorkBench.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.state.isEditing !== prevState.isEditing) {
            var context_1 = this.context;
            if (context_1 && context_1.a11yManager) {
                if (this.state.isEditing) {
                    context_1.a11yManager.focusById('previewButton');
                    context_1.a11yManager.alert(Workbench_resx_1.default.ScreenReaderDisplayModeSwitchToEditMode);
                }
                else {
                    context_1.a11yManager.focusById('editButton');
                    context_1.a11yManager.alert(Workbench_resx_1.default.ScreenReaderDisplayModeSwitchToReadMode);
                }
            }
        }
    };
    WorkBench.prototype._toggleEdit = function () {
        this.setState({
            isEditing: !this.state.isEditing
        });
    };
    WorkBench.prototype._onClickMobileView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._onClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: true
        });
    };
    WorkBench.prototype._closeClickSerializeCanvasView = function () {
        this.setState({
            showSerializedCanvasView: false
        });
    };
    WorkBench.prototype._onClickTabletView = function () {
        this.setState({
            displayMobilePreview: true,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Tablet
        });
        this._setSuiteNavZIndex('0');
    };
    WorkBench.prototype._closeMobilePreview = function () {
        this.setState({
            displayMobilePreview: false,
            mobilePreviewDeviceType: MobilePreview_1.DeviceType.Phone
        });
        this._setSuiteNavZIndex('5');
    };
    WorkBench.prototype._setSuiteNavZIndex = function (value) {
        var suiteNav = document.getElementById('SuiteNavPlaceHolder');
        if (suiteNav) {
            suiteNav.style.zIndex = value;
        }
    };
    return WorkBench;
}(React.Component));
WorkBench.contextTypes = {
    a11yManager: React.PropTypes.object
};
__decorate([
    office_ui_fabric_react_1.autobind
], WorkBench.prototype, "_toggleEdit", null);
__decorate([
    office_ui_fabric_react_1.autobind
], WorkBench.prototype, "_onClickMobileView", null);
__decorate([
    office_ui_fabric_react_1.autobind
], WorkBench.prototype, "_onClickSerializeCanvasView", null);
__decorate([
    office_ui_fabric_react_1.autobind
], WorkBench.prototype, "_closeClickSerializeCanvasView", null);
__decorate([
    office_ui_fabric_react_1.autobind
], WorkBench.prototype, "_onClickTabletView", null);
__decorate([
    office_ui_fabric_react_1.autobind
], WorkBench.prototype, "_closeMobilePreview", null);
exports.WorkBench = WorkBench;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_NAR8NFw8cblGJm9t5CjqOw'];


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var PageStore = (function () {
    function PageStore(serviceScope) {
        var _this = this;
        this._PAGE_DATA_KEY = 'sp_webpart_workbench_state';
        this._pageReadyPromise = new Promise(function (resolve) {
            _this._resolvePageReady = resolve;
        });
        this._serviceScope = serviceScope;
        window.setInterval(this.savePageState, 3 * 1000);
    }
    Object.defineProperty(PageStore.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    PageStore.prototype.getSerializeCallback = function () {
        return this._serializePage;
    };
    PageStore.prototype.setSerializeCallback = function (callback) {
        this._serializePage = callback;
        if (window['SP']) {
            window['SP'].logSerializedPageState = callback;
        }
    };
    PageStore.prototype.setClearCallback = function (callback) {
        this._clearPage = callback;
    };
    PageStore.prototype.savePageState = function () {
        if (this._serializePage) {
            sessionStorage.setItem(this._PAGE_DATA_KEY, this._serializePage());
        }
    };
    PageStore.prototype.clearPageState = function () {
        sessionStorage.removeItem(this._PAGE_DATA_KEY);
        if (this._clearPage) {
            this._clearPage();
        }
    };
    PageStore.prototype.getPageState = function () {
        return sessionStorage.getItem(this._PAGE_DATA_KEY);
    };
    PageStore.prototype.getPageReadyPromise = function () {
        return this._pageReadyPromise;
    };
    PageStore.prototype.setPageReady = function () {
        this._resolvePageReady();
    };
    return PageStore;
}());
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "getSerializeCallback", null);
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "setSerializeCallback", null);
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "setClearCallback", null);
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "savePageState", null);
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "clearPageState", null);
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "getPageState", null);
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "getPageReadyPromise", null);
__decorate([
    office_ui_fabric_react_1.autobind
], PageStore.prototype, "setPageReady", null);
exports.PageStore = PageStore;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(95);
var styles = {};
exports.default = styles;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ApplicationCustomizerContext_1 = __webpack_require__(63);
exports.ApplicationCustomizerContext = ApplicationCustomizerContext_1.default;
var BaseApplicationCustomizer_1 = __webpack_require__(64);
exports.BaseApplicationCustomizer = BaseApplicationCustomizer_1.default;
var Placeholder_1 = __webpack_require__(66);
exports.Placeholder = Placeholder_1.default;
var PlaceholderCollection_1 = __webpack_require__(67);
exports.PlaceholderCollection = PlaceholderCollection_1.default;
var PlaceholderManager_1 = __webpack_require__(31);
exports._PlaceholderManager = PlaceholderManager_1.default;
var DialogManagerConfiguration_1 = __webpack_require__(65);
exports._DialogManagerConfiguration = DialogManagerConfiguration_1.default;
var _spShell_1 = __webpack_require__(239);
exports._spShell = _spShell_1.default;
var BaseApplication_1 = __webpack_require__(231);
exports.BaseApplication = BaseApplication_1.default;


/***/ }),
/* 78 */,
/* 79 */,
/* 80 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 81 */,
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(120);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(121);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(122);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(123);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(124);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(125);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(126);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(127);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(128);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(129);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(130);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(131);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(132);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(133);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(134);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(135);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(136);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(137);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(138);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(139);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(140);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(141);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(142);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(143);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(144);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(145);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(146);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(147);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(148);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(149);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(150);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(151);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(152);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(153);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(154);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(155);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(156);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(157);
var loader = __webpack_require__(2);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".belowHeader_87bb9867,.canvasHost_87bb9867,.content_87bb9867{position:absolute;left:0;top:0;right:0;bottom:0}.belowHeader_87bb9867,.content_87bb9867{overflow:hidden}.content_87bb9867{transition:margin-right .6s ease;-webkit-transition:margin-right .6s ease;padding:10px 30px;overflow-y:auto}.hasHeader_87bb9867 .belowHeader_87bb9867{top:50px}.hasCommandBar_87bb9867 .content_87bb9867{top:40px}.canvasHost_87bb9867 .NavPane_87bb9867{width:220px;right:auto}", ""]);

// exports


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".clickStopNavBar_a6a062f7{height:30px;border-width:0;border-top-width:1px;border-style:solid;box-sizing:content-box;font-size:14px;font-weight:400;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:1px solid transparent}.navBarItems_a6a062f7{display:block;list-style:none;margin:0 7px 0 0;padding:0}.mobilePreviewDeviceTitle_a6a062f7{width:200px;margin:auto;text-align:center;padding:4px;position:relative}", ""]);

// exports


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".clickStop_800cddc3{border-width:0;border-left-width:2px;border-right-width:2px;border-style:solid;height:30px;line-height:30px;position:absolute}.clickStop_800cddc3:hover{background-color:#c8c8c8;cursor:pointer}.clickStopSelected_800cddc3{background-color:#c8c8c8}.navBarItem_800cddc3{float:left;margin-right:18px;font-size:14px;padding:0;box-sizing:border-box;display:block}", ""]);

// exports


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".mobilePreviewDevice_1b54d398{border-radius:15px;border-style:solid;position:relative;margin:auto;margin-top:70px}.mobilePreviewPortrait_1b54d398{border-width:60px 16px}.mobilePreviewLandscape_1b54d398{border-width:16px 60px}.mobilePreviewTablet_1b54d398{border-width:40px}.mobilePreviewIframe_1b54d398{width:100%;height:100%;position:absolute;border:none}", ""]);

// exports


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".xField_e24b9168{left:15px}.yField_e24b9168{left:140px}.mobilePreviewTextfieldXY_e24b9168{margin:10px;position:absolute;top:15px;width:114px}.mobilePreviewTextfieldXY_e24b9168 .xyTextfields_e24b9168{position:absolute;min-width:20px;width:50px;right:0;height:28px;box-sizing:border-box;margin:0;box-shadow:none;border:1px solid;font-size:12px;padding:6px 10px 8px;outline:0}.mobilePreviewTextfieldXY_e24b9168 .xyLabels_e24b9168{position:absolute;font-size:20px;left:0;padding:0;font-weight:400;margin:0;box-shadow:none;box-sizing:border-box;display:block}", ""]);

// exports


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".mobilePreviewNavBar_521549d6{height:50px;font-size:14px;font-weight:400;box-sizing:border-box;margin:0;box-shadow:none;padding:0 10px;width:100%;outline:1px solid transparent}.navBarItems_521549d6{display:block;list-style:none;margin:0 7px 0 0;padding:0}.navBarItem_521549d6{margin-right:0;float:left;font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative}.navBarItemRight_521549d6{float:right;margin:0}.mobilePreviewTitle_521549d6{line-height:50px;margin-left:15px;font-size:xx-large}.mobilePreviewXIcon_521549d6{font-size:30px;border-left-width:1px;margin:auto;margin-left:30px;line-height:50px}.mobilePreviewXIcon_521549d6:hover{cursor:pointer;color:#767676}", ""]);

// exports


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".mobilePreviewDeviceIcon_5d41f606{margin:auto;padding:auto;font-size:40px;line-height:50px}.mobilePreviewDeviceIcon_5d41f606:hover{cursor:pointer;color:#767676}.navBarItemRight_5d41f606{font-size:14px;padding:0;box-sizing:border-box;display:block;height:40px;line-height:40px;position:relative;float:right;margin:0}", ""]);

// exports


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".mobilePreviewURLbar_6478cfe3{height:100%;padding:5px;width:100%}.mobilePreviewTextfield_6478cfe3{position:absolute;left:0;width:calc(100% - 135px)}.mobilePreviewURLbutton_6478cfe3{position:absolute;right:0;margin:6px;background-color:#c8c8c8;border:1px solid #c8c8c8;border-radius:2px;top:4px}.mobilePreviewURLbutton_6478cfe3:hover{background-color:#a6a6a6}.mobilePreviewURLbutton_6478cfe3:active,.mobilePreviewURLbutton_6478cfe3:focus{background-color:#c8c8c8;border:1px solid #a6a6a6}", ""]);

// exports


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".mobilePreviewRotateIcon_082813d4{position:absolute;right:30px;top:15px;font-size:50px;margin:5px;cursor:pointer;font-weight:100}", ""]);

// exports


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".mobilePreviewContainer_245ca886{position:fixed;top:0;bottom:0;left:0;right:0;background:rgba(0,0,0,.87);z-index:2147483647;box-sizing:border-box;padding:0;font-family:Segoe UI Semilight WestEuropean,Segoe UI Semilight,Segoe UI,Tahoma,Arial,sans-serif}.mobilePreviewDeviceContainer_245ca886{position:relative;height:calc(100% - 71px);-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:auto;display:-webkit-box;display:-ms-flexbox;display:flex}", ""]);

// exports


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".container_e114bfc8{min-width:90vw!important}.content_e114bfc8{height:70vh}.pivotItem_e114bfc8{overflow-y:scroll;height:66vh}.learnMoreLink_e114bfc8{position:absolute;margin-top:20px!important;z-index:1}.serializedTextArea_e114bfc8{font-family:monospace}", ""]);

// exports


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".serializedWebPartItem_16d8b5cb{margin:20px 0}", ""]);

// exports


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".workbench_fee8014b{position:absolute;top:0;right:0;bottom:0;left:0;overflow-x:hidden}.header_fee8014b{background:#000;height:50px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.headerMenu_fee8014b{background-color:#0075c7;font-size:30px;height:50px;left:0;text-align:center;width:50px}.headerMenu_fee8014b,.headerTitle_fee8014b{color:#fff;line-height:50px;position:absolute;top:0}.headerTitle_fee8014b{left:66px}.headerTitle_fee8014b em{border-right:1px solid #666;font-style:normal;margin-right:12px;padding-right:20px}.headerPerson_fee8014b{background-color:#a6a6a6;border-left:5px solid #b6cfd8;color:#fff;font-size:48px;height:50px;line-height:50px;position:absolute;right:0;text-align:center;width:50px}.pageContent_fee8014b{border:1px solid #e5e5e5;border-bottom:0;bottom:0;margin:0 auto;max-width:924px;position:absolute;top:106px}html[dir=ltr] .pageContent_fee8014b{transition:right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:right 367ms cubic-bezier(.1,.9,.2,1)}html[dir=rtl] .pageContent_fee8014b{transition:left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:left 367ms cubic-bezier(.1,.9,.2,1)}html[dir=ltr] .pageContent_fee8014b{left:16px}html[dir=ltr] .pageContent_fee8014b,html[dir=rtl] .pageContent_fee8014b{right:16px}html[dir=rtl] .pageContent_fee8014b{left:16px}html[dir=ltr] .commandBar_fee8014b{transition:padding-right 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-right 367ms cubic-bezier(.1,.9,.2,1)}html[dir=rtl] .commandBar_fee8014b{transition:padding-left 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:padding-left 367ms cubic-bezier(.1,.9,.2,1)}html[dir=ltr] .commandBar_fee8014b{padding-right:0}html[dir=rtl] .commandBar_fee8014b{padding-left:0}", ""]);

// exports


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".SPPageChromeNoFlexbox-app{top:0!important;height:100%!important}", ""]);

// exports


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".defaultIconClass_61761a30{border:1px solid;border-color:\"[theme:themePrimary, default: #0078d7]\";height:35px;position:absolute;width:35px}.dropLocation_61761a30{background-color:\"[theme:themePrimary, default: #0078d7]\";z-index:10}.dropLocation_61761a30.horizontalLine_61761a30{height:3px}.dropLocation_61761a30.verticalLine_61761a30{width:3px}.noselect_61761a30{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.linePositionAbsolute_61761a30{position:absolute}.linePositionAbsolute_61761a30.horizontalLine_61761a30{left:0;right:0}.linePositionAbsolute_61761a30.verticalLine_61761a30{top:0;bottom:0}.iconVisible_61761a30{visibility:visible}.iconCollapsed_61761a30{visibility:collapse}.iconAdditionalStyle_61761a30{pointer-events:none;z-index:11}.cursorDragging_61761a30 *{cursor:-webkit-grabbing!important;cursor:grabbing!important}.handleGrab_61761a30{cursor:-webkit-grab!important;cursor:grab!important}.screenReaderOnly_61761a30{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".dragIconContainer_8d52230c{position:absolute;top:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:\"[theme:neutralLighterAlt, default: #f8f8f8]\"}.dragIconContainer_8d52230c .dragIcon_8d52230c{width:50px;height:50px;background-color:\"[theme:themePrimary, default:#0078d7]\"}.dragIconContainer_8d52230c .dragIcon_8d52230c .ms-Icon{font-size:32px;padding:9px}.dragIconContainer_8d52230c .dragText_8d52230c{height:22px;padding:4px;max-width:200px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;background-color:rgba(0,0,0,.5)}.dragIconContainer_8d52230c .singleColumn_8d52230c:before{content:\"\\F1D3\"}.dragIconContainer_8d52230c .doubleColumn_8d52230c:before{content:\"\\F1D4\"}.dragIconContainer_8d52230c .tripleColumn_8d52230c:before{content:\"\\F1D5\"}.dragIconContainer_8d52230c .columnLeftTwoThirds_8d52230c:before{content:\"\\F1D6\"}.dragIconContainer_8d52230c .columnRightTwoThirds_8d52230c:before{content:\"\\F1D7\"}.disabledArea_8d52230c{position:relative}.disabledArea_8d52230c:before{background-color:\"[theme:neutralSecondary, default: #666666]\";content:\"\";display:block;position:absolute;height:100%;width:100%;z-index:100;opacity:.6}", ""]);

// exports


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, "@media screen and (min-width:1024px){.CanvasSection--edit{min-width:312px}.CanvasSection--edit:nth-child(n+2):before{content:\"\";position:absolute;height:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\"}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before{border-left:1px dashed}[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{border-right:1px dashed}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before{left:-1px}[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{right:-1px}}@media screen and (max-width:1023px){.CanvasSection--edit:nth-child(n+2):before{content:\"\";position:absolute;width:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-bottom:1px dashed}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before{right:0}[dir=ltr] .CanvasSection--edit:nth-child(n+2):before,[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{left:0}[dir=rtl] .CanvasSection--edit:nth-child(n+2):before{right:0}}@media screen and (min-width:641px){.CanvasSection--read .ControlZone{margin-top:24px}.CanvasSection--read .ControlZone:last-of-type{margin-bottom:24px}.CanvasSectionFullWidth--read .ControlZone{margin-top:0}}", ""]);

// exports


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasToolboxHint{background:0 0;border:none;cursor:pointer;height:25px;left:48px;right:48px;margin-top:-26px;opacity:0;outline:0;padding:0;position:absolute;transition:all .3s ease;width:calc(100% - 96px);color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.CanvasToolboxHint .CanvasToolboxHint-plusButton{background-color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-radius:50%;color:\"[theme:white, default: #ffffff]\";font-size:15px;height:25px;line-height:25px;padding:0;position:absolute;text-align:center;top:0;width:25px;z-index:1;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint .CanvasToolboxHint-plusButton{left:calc(50% - 12.5px)}[dir=rtl] .CanvasToolboxHint .CanvasToolboxHint-plusButton{right:calc(50% - 12.5px)}.CanvasToolboxHint .CanvasToolboxHint-plusButton .ms-Icon{position:relative}.CanvasToolboxHint:after{border-top:1px solid;content:\"\";height:1px;position:absolute;top:12px;width:100%;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint:after{left:0}[dir=rtl] .CanvasToolboxHint:after{right:0}.CanvasToolboxHint.is-visible{opacity:1}.CanvasToolboxHint:first-of-type:nth-last-of-type(1){margin-top:-13px;opacity:1}.CanvasToolboxHint:focus,.CanvasToolboxHint:hover{opacity:1}.CanvasToolboxHint:focus .CanvasToolboxHint-plusButton,.CanvasToolboxHint:hover .CanvasToolboxHint-plusButton{background-color:\"[theme:themePrimary, default:#0078d7]\"}.CanvasToolboxHint:focus:after,.CanvasToolboxHint:hover:after{border-color:\"[theme:themePrimary, default:#0078d7]\"}@media screen and (min-width:641px){.CanvasToolboxHint:first-of-type{margin-top:-13px}}@media screen and (-ms-high-contrast:active){.CanvasToolboxHint{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxHint{color:#37006e}}", ""]);

// exports


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasToolboxHint{background:0 0;border:none;cursor:pointer;height:23px;opacity:0;outline:0;padding:0;position:relative;transition:all .3s ease;width:100%;color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper{max-width:1200px}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton{background-color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-radius:50%;color:\"[theme:white, default: #ffffff]\";font-size:15px;height:23px;line-height:23px;opacity:0;padding:0;position:relative;text-align:center;top:0;width:23px;z-index:1;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton{left:calc(50% - 11.5px)}[dir=rtl] .CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton{right:calc(50% - 11.5px)}.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper .CanvasToolboxHint-plusButton .ms-Icon{position:relative}.CanvasToolboxHint:after{border-top:1px dashed;content:\"\";height:1px;position:absolute;top:12px;width:100%;transition:all .3s ease}[dir=ltr] .CanvasToolboxHint:after{left:0}[dir=rtl] .CanvasToolboxHint:after{right:0}.CanvasToolboxHint.is-visible{opacity:1}.CanvasToolboxHint.zone-selected:after{border-top:1px solid;border-top-color:\"[theme:themePrimary, default:#0078d7]\"}.CanvasToolboxHint.zone-selected .CanvasToolboxHint-plusButton{background-color:\"[theme:themePrimary, default:#0078d7]\";opacity:1}.CanvasToolboxHint.zone-focused:after{border-top:1px solid;border-top-color:\"[theme:neutralTertiary, default: #a6a6a6]\"}.CanvasToolboxHint:focus,.CanvasToolboxHint:hover{opacity:1}.CanvasToolboxHint:focus .CanvasToolboxHint-plusButton,.CanvasToolboxHint:hover .CanvasToolboxHint-plusButton{background-color:\"[theme:themePrimary, default:#0078d7]\";opacity:1}.CanvasToolboxHint:focus:after,.CanvasToolboxHint:hover:after{border-color:\"[theme:themePrimary, default:#0078d7]\"}.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.Canvas>.CanvasToolboxHint:first-of-type:nth-last-of-type(1) .CanvasToolboxHint-plusButton,.CanvasSection button.CanvasToolboxHint .CanvasToolboxHint-plusButton{opacity:1}.CanvasSection button.CanvasToolboxHint:after{border-top:1px solid}.CanvasSection button.CanvasToolboxHint:focus:after,.CanvasSection button.CanvasToolboxHint:hover:after{border-color:\"[theme:themePrimary, default:#0078d7]\"}.CanvasSection:hover button.CanvasToolboxHint:first-of-type:nth-last-of-type(1),.CanvasZone--selected button.CanvasToolboxHint:first-of-type:nth-last-of-type(1){opacity:1}@media screen and (-ms-high-contrast:active){.CanvasToolboxHint{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxHint{color:#37006e}}", ""]);

// exports


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasZone{max-width:1280px;padding:0 12px}.CanvasZone:focus{outline:0}.CanvasZone.CanvasZone--centerAlign{margin:auto;max-width:1204px}.CanvasZone.CanvasZone--selected .CanvasSection--edit:before{color:\"[theme:themePrimary, default:#0078d7]\";border-bottom:1px solid}[dir=ltr] .CanvasZone.CanvasZone--selected .CanvasSection--edit:before{border-left:1px solid}[dir=rtl] .CanvasZone.CanvasZone--selected .CanvasSection--edit:before{border-right:1px solid}.CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{color:\"[theme:neutralTertiary, default: #a6a6a6]\";border-bottom:1px dashed}[dir=ltr] .CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{border-left:1px dashed}[dir=rtl] .CanvasZone.CanvasZone--controlSelected .CanvasSection--edit:before{border-right:1px dashed}.CanvasZone.CanvasZone--controlSelected+button.CanvasToolboxHint{opacity:1}.CanvasZone.CanvasZone--controlSelected .CanvasZoneToolbar .CanvasControlToolbar-item,.CanvasZone:hover .CanvasZoneToolbar .CanvasControlToolbar-item{color:\"[theme:themePrimary, default:#0078d7]\"}.CanvasZone.CanvasZone--fullWidth{max-width:100%;padding:0;margin:0}.CanvasZone.CanvasZone--fullWidth .CanvasSection{padding-left:0;padding-right:0}.CanvasZone.CanvasZone--fullWidth .CanvasSection--fullWidth{margin-top:-12px;margin-bottom:-12px}.CanvasZone.CanvasZone--fullWidth .CanvasSectionFullWidth--read{margin-top:0}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapper{padding-left:40px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapper{padding-right:40px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapper{padding-right:24px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasToolboxHint-plusButtonWrapper{padding-left:24px}.CanvasZone.CanvasZone--fullWidth .centerAlign{margin:auto}.CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{border:1px solid \"[theme:neutralLight, default: #eaeaea]\";top:8px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{left:8px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{right:8px}[dir=ltr] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{padding-right:2px}[dir=rtl] .CanvasZone.CanvasZone--fullWidth .CanvasControlToolbar{padding-left:2px}.CanvasZone .CanvasZoneToolbar{margin-top:-12px;position:absolute;width:32px}[dir=ltr] .CanvasZone .CanvasZoneToolbar{left:-32px}[dir=rtl] .CanvasZone .CanvasZoneToolbar{right:-32px}.CanvasZone .CanvasZoneToolbar.FixedToolbar{margin-top:0;position:fixed;left:auto;right:auto}.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item{background-color:transparent;color:\"[theme:neutralTertiary, default: #a6a6a6]\";height:32px;min-width:32px;width:32px}.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item:focus,.CanvasZone .CanvasZoneToolbar .CanvasControlToolbar-item:hover{background-color:\"[theme:themePrimary, default:#0078d7]\";color:\"[theme:white, default: #ffffff]\";cursor:pointer}.CanvasZone:first-child.CanvasZone--fullWidth .ControlZone{margin-top:0}@media screen and (min-width:1024px){.CanvasZone--edit{display:-webkit-box;display:-ms-flexbox;display:flex}.CanvasZone--edit.CanvasZone--empty{height:320px}.CanvasZone--edit.CanvasZone--fullWidth{min-height:320px}}@media screen and (min-width:641px){.CanvasZone{padding:0 24px}[dir=ltr] .CanvasZone.CanvasZone--edit{padding-left:40px}[dir=rtl] .CanvasZone.CanvasZone--edit{padding-right:40px}[dir=ltr] .CanvasZone.CanvasZone--edit{padding-right:24px}[dir=rtl] .CanvasZone.CanvasZone--edit{padding-left:24px}.CanvasZone.CanvasZone--edit.CanvasZone--fullWidth{max-width:100%;padding:0;margin:0;min-height:320px}}", ""]);

// exports


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".Canvas{max-width:1280px;padding:0 12px;position:relative}@media screen and (min-width:641px){.Canvas:not(.Canvas--edit){padding:8px 24px}.Canvas--edit{padding-top:16px;padding-bottom:16px}[dir=ltr] .Canvas--edit{padding-left:40px}[dir=rtl] .Canvas--edit{padding-right:40px}[dir=ltr] .Canvas--edit{padding-right:24px}[dir=rtl] .Canvas--edit{padding-left:24px}}.Canvas-screenReaderOnly{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasComponent{position:relative}.CanvasSectionBarBg{position:absolute;top:0;height:100%;width:32px;background-color:\"[theme:neutralLighter, default: #f4f4f4]\"}[dir=ltr] .CanvasSectionBarBg{left:0}[dir=rtl] .CanvasSectionBarBg{right:0}.Canvas{position:relative;padding:0}.Canvas>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper{padding:0 12px}.Canvas>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper.centerAlign{margin:auto}@media screen and (min-width:641px){[dir=ltr] .Canvas--edit.Canvas--withLayout{margin-left:32px}[dir=rtl] .Canvas--edit.Canvas--withLayout{margin-right:32px}[dir=ltr] .Canvas--edit.Canvas--withLayout{box-shadow:-4px 0 8px -5px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}[dir=rtl] .Canvas--edit.Canvas--withLayout{box-shadow:4px 0 8px -5px \"[theme:neutralTertiaryAlt, default: #c8c8c8]\"}.Canvas--edit{padding-bottom:80px}[dir=ltr] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper{padding-left:40px}[dir=rtl] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper{padding-right:40px}[dir=ltr] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper{padding-right:24px}[dir=rtl] .Canvas--edit>.CanvasToolboxHint .CanvasToolboxHint-plusButtonWrapper{padding-left:24px}}.Canvas-screenReaderOnly{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".ControlZone{padding:8px;margin:16px 0 32px;outline:0;position:relative}.ControlZone .ControlZone-target{bottom:0;cursor:pointer;left:0;right:0;position:absolute;top:0}.ControlZone .ControlZone-target:focus{outline:0}.ControlZone .ControlZone-target.ControlZone-target--hidden{z-index:-1}.ControlZone:after{border:1px solid;color:\"[theme:neutralTertiary, default: #a6a6a6]\";bottom:0;content:\"\";left:0;right:0;pointer-events:none;position:absolute;top:0;transition:all .3s ease}.ControlZone .CanvasControlToolbar,.ControlZone:after{opacity:0;transition:all .3s ease}.ControlZone.ControlZone--edit.ControlZone--selected .CanvasControlToolbar,.ControlZone.ControlZone--edit.ControlZone--selected:after,.ControlZone.ControlZone--edit:focus .CanvasControlToolbar,.ControlZone.ControlZone--edit:focus:after,.ControlZone.ControlZone--edit:hover .CanvasControlToolbar,.ControlZone.ControlZone--edit:hover:after{opacity:1}.ControlZone.ControlZone--selected:after{border:1px solid;color:\"[theme:themePrimary, default:#0078d7]\"}.ControlZone.ControlZone--selected+button.CanvasToolboxHint{opacity:1}.ControlZone .ControlZone-screenReaderOnly{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}", ""]);

// exports


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasZone:not(.CanvasZone--fullWidth) .ControlZone{padding:8px}.ControlZone .ControlZone-target{bottom:0;cursor:pointer;left:0;right:0;position:absolute;top:0}.ControlZone .ControlZone-target:focus{outline:0}.ControlZone .ControlZone-target.ControlZone-target--hidden{z-index:-1}.ControlZone:after{border:1px solid;color:\"[theme:neutralTertiary, default: #a6a6a6]\";bottom:0;content:\"\";left:0;right:0;pointer-events:none;position:absolute;top:0;transition:all .3s ease}.ControlZone .CanvasControlToolbar,.ControlZone:after{opacity:0;transition:all .3s ease}.ControlZone.ControlZone--edit{outline:0;position:relative}.ControlZone.ControlZone--edit.ControlZone--selected .CanvasControlToolbar,.ControlZone.ControlZone--edit.ControlZone--selected:after,.ControlZone.ControlZone--edit:focus .CanvasControlToolbar,.ControlZone.ControlZone--edit:focus:after,.ControlZone.ControlZone--edit:hover .CanvasControlToolbar,.ControlZone.ControlZone--edit:hover:after{opacity:1}.ControlZone.ControlZone--selected:after{border:1px solid;color:\"[theme:themePrimary, default:#0078d7]\"}.ControlZone.ControlZone--selected+button.CanvasToolboxHint{opacity:1}.ControlZone .ControlZone-screenReaderOnly{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}", ""]);

// exports


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".ToolbarButton{background-color:\"[theme:neutralPrimary, default: #333333]\";border:1px solid transparent;height:34px;overflow:hidden;padding:0 8px;position:relative;text-align:center;top:0;transition:all .3s;transition-property:background-color,color;min-width:34px;color:\"[theme:neutralLighterAlt, default: #f8f8f8]\";font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;font-size:14px}.ToolbarButton .ms-Icon{font-size:16px;line-height:1.2}.ToolbarButton:hover{background-color:\"[theme:neutralSecondaryAlt, default: #767676]\";cursor:pointer}.ToolbarButton.ToolbarButton--active{background-color:\"[theme:themeSecondary, default:#2b88d8]\"}.ToolbarButton.ToolbarButton--active+.ToolbarButton--divider:after,.ToolbarButton.ToolbarButton--active.ToolbarButton--divider:after{border:\"[theme:themeSecondary, default:#2b88d8]\"}.ToolbarButton:active{background-color:\"[theme:themeDarkAlt, default:#106ebe]\"}.ToolbarButton.ToolbarButton--disabled,.ToolbarButton.ToolbarButton--disabled:hover{background-color:\"[theme:neutralPrimary, default: #333333]\";color:\"[theme:neutralSecondary, default: #666666]\"}.ToolbarButton.ToolbarButton--disabled .ms-Icon,.ToolbarButton.ToolbarButton--disabled:hover .ms-Icon{color:\"[theme:neutralSecondary, default: #666666]\"}.ToolbarButton:focus{border:1px solid;outline:0}.ToolbarButton.ToolbarButton--divider:after{content:\"\";position:absolute;height:20px;top:6px}[dir=ltr] .ToolbarButton.ToolbarButton--divider:after{left:0}[dir=rtl] .ToolbarButton.ToolbarButton--divider:after{right:0}[dir=ltr] .ToolbarButton.ToolbarButton--divider:after{border-left:1px solid}[dir=rtl] .ToolbarButton.ToolbarButton--divider:after{border-right:1px solid}.ToolbarButton--h2{font-size:21px;font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}.ToolbarButton--blockquote{font-style:italic}", ""]);

// exports


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".ToolbarSubmenu{width:44px;position:relative}.ToolbarSubmenu .ToolbarButton{width:44px}[dir=ltr] .ToolbarSubmenu-displayButton{padding-right:20px}[dir=rtl] .ToolbarSubmenu-displayButton{padding-left:20px}.ToolbarSubmenu-caret{color:\"[theme:neutralLighterAlt, default: #f8f8f8]\";font-size:8px;pointer-events:none;position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);z-index:1}[dir=ltr] .ToolbarSubmenu-caret{right:4px}[dir=rtl] .ToolbarSubmenu-caret{left:4px}.ToolbarSubmenu-menuItems{display:none;position:absolute;top:34px}[dir=ltr] .ToolbarSubmenu-menuItems .ToolbarButton{padding-right:20px}[dir=rtl] .ToolbarSubmenu-menuItems .ToolbarButton{padding-left:20px}.ToolbarSubmenu--wide{width:160px!important}.ToolbarSubmenu--wide .ToolbarButton{width:100%}[dir=ltr] .ToolbarSubmenu--wide .ToolbarButton{text-align:left}[dir=rtl] .ToolbarSubmenu--wide .ToolbarButton{text-align:right}.ToolbarSubmenu.is-open .ToolbarSubmenu-menuItems{display:block}", ""]);

// exports


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasControlToolbar{position:absolute;top:0;width:32px;z-index:1}[dir=ltr] .CanvasControlToolbar{left:-40px}[dir=rtl] .CanvasControlToolbar{right:-40px}[dir=ltr] .CanvasControlToolbar{padding-right:10px}[dir=rtl] .CanvasControlToolbar{padding-left:10px}.singleColumn:before{content:\"\\F1D3\"}.doubleColumn:before{content:\"\\F1D4\"}.tripleColumn:before{content:\"\\F1D5\"}.columnLeftTwoThirds:before{content:\"\\F1D6\"}.columnRightTwoThirds:before{content:\"\\F1D7\"}", ""]);

// exports


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasToolboxItemsGroup{clear:both}.CanvasToolboxItemsGroup-header{background-color:\"[theme:neutralLighter, default: #f4f4f4]\";color:\"[theme:neutralPrimary, default: #333333]\";font-family:Segoe UI Semibold WestEuropean,Segoe UI Semibold,Segoe WP Semibold,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;font-size:12px;height:32px;letter-spacing:1px;line-height:32px;padding:0 12px}.CanvasToolboxItemsGroup-header--Embedded{background:0 0}.CanvasToolboxItemsGroup-divider{margin:0;border:0;border-top:1px solid;color:\"[theme:neutralLight, default: #eaeaea]\"}", ""]);

// exports


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasToolboxItem{background-color:transparent;border:1px solid transparent;height:88px;overflow:hidden;padding:0;width:33.333%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{background-color:\"[theme:themeLighter, default:#deecf9]\";cursor:pointer}.CanvasToolboxItem:focus .CanvasToolboxItem-icon,.CanvasToolboxItem:focus .CanvasToolboxItem-title,.CanvasToolboxItem:hover .CanvasToolboxItem-icon,.CanvasToolboxItem:hover .CanvasToolboxItem-title{color:\"[theme:themeDarkAlt, default:#106ebe]\"}[dir=ltr] .CanvasToolboxItemFloat{float:left}[dir=rtl] .CanvasToolboxItemFloat{float:right}.CanvasToolboxItem--Embedded{width:25%;display:inline-block}.CanvasToolboxItem-icon{color:\"[theme:neutralPrimary, default: #333333]\";display:block;font-size:28px;line-height:48px}.CanvasToolboxItem-icon.ms-Icon--SingleColumn:before{content:\"\\F1D3\"}.CanvasToolboxItem-icon.ms-Icon--DoubleColumn:before{content:\"\\F1D4\"}.CanvasToolboxItem-icon.ms-Icon--TripleColumn:before{content:\"\\F1D5\"}.CanvasToolboxItem-icon.ms-Icon--ColumnLeftTwoThirds:before{content:\"\\F1D6\"}.CanvasToolboxItem-icon.ms-Icon--ColumnRightTwoThirds:before{content:\"\\F1D7\"}.CanvasToolboxItem-image{padding:10px 0;width:40px;height:28px}.CanvasToolboxItem-title{color:\"[theme:neutralSecondary, default: #666666]\";display:block;font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;font-size:13px;padding:0 8px;text-align:center;overflow:hidden;text-overflow:ellipsis;max-width:88px}@media screen and (-ms-high-contrast:active){.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{color:#1aebff}}@media screen and (-ms-high-contrast:black-on-white){.CanvasToolboxItem:focus,.CanvasToolboxItem:hover{color:#37006e}}", ""]);

// exports


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".CanvasToolboxContainer{position:absolute;top:0;width:100%;max-width:1280px}[dir=ltr] .CanvasToolboxContainer{left:0}[dir=rtl] .CanvasToolboxContainer{right:0}.CanvasToolbox{background:\"[theme:white, default: #ffffff]\";border:1px solid #d6d6d6;box-shadow:0 0 8px 0 rgba(0,0,0,.2);box-sizing:border-box;max-height:330px;margin-top:26px;overflow-y:auto;position:absolute;width:292px;z-index:10;margin-left:0;margin-right:0}[dir=ltr] .CanvasToolbox{left:0}[dir=rtl] .CanvasToolbox{right:0}.CanvasToolbox .CanvasToolbox-Error{background-color:#fde7e9;font-family:Segoe UI Semibold WestEuropean,Segoe UI Semibold,Segoe WP Semibold,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;font-size:12px;letter-spacing:1px;padding:0 12px}.CanvasToolbox .ms-Spinner-container{margin-top:151px}[dir=ltr] .CanvasToolbox .ms-Spinner-container{margin-left:132px}[dir=rtl] .CanvasToolbox .ms-Spinner-container{margin-right:132px}.CanvasToolboxContainer--Embedded{max-width:none}.CanvasToolbox--Embedded{width:420px;text-align:center;border:none;box-shadow:none;margin:100px auto;position:relative}", ""]);

// exports


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".screenReaderOnly_55c07e91{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}", ""]);

// exports


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".cke_editable{overflow:hidden}[dir=ltr] .cke_editable{text-align:left}[dir=rtl] .cke_editable{text-align:right}[dir=ltr] .cke_editable ol,[dir=ltr] .cke_editable ul{padding-left:50px}[dir=rtl] .cke_editable ol,[dir=rtl] .cke_editable ul{padding-right:50px}[dir=ltr] .cke_editable li:before{margin-left:-19px}[dir=rtl] .cke_editable li:before{margin-right:-19px}[dir=ltr] .cke_editable li:before{margin-right:4px}[dir=rtl] .cke_editable li:before{margin-left:4px}[dir=ltr] .cke_editable li:before{text-align:right}[dir=rtl] .cke_editable li:before{text-align:left}.cke_editable ol{counter-reset:item}.cke_editable ol>li{counter-increment:item}.cke_editable ol ol>li{display:block}.cke_editable ol ol>li:before{content:counter(item,lower-alpha) \". \"}.cke_editable table,.cke_editable td,.cke_editable th,.cke_editable tr{border:1px solid!important;border-collapse:collapse}.cke_editable table{margin-top:10px;margin-bottom:10px;max-width:820px!important}.cke_editable td,.cke_editable td p,.cke_editable th,.cke_editable th p{font-family:Segoe UI WestEuropean,Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;font-size:15px;font-weight:400;color:\"[theme:neutralPrimary, default: #333333]\";word-wrap:break-word;font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;margin:0}.cke_editable th{font-weight:600;text-align:center}.cke_editable td,.cke_editable th{padding-top:8px;padding-bottom:8px}[dir=ltr] .cke_editable td,[dir=ltr] .cke_editable th{padding-left:8px}[dir=rtl] .cke_editable td,[dir=rtl] .cke_editable th{padding-right:8px}[dir=ltr] .cke_editable td,[dir=ltr] .cke_editable th{padding-right:16px}[dir=ltr] [dir=rtl] .cke_editable td,[dir=ltr] [dir=rtl] .cke_editable th,[dir=rtl] .cke_editable td,[dir=rtl] .cke_editable th{padding-left:16px}[dir=rtl] [dir=rtl] .cke_editable td,[dir=rtl] [dir=rtl] .cke_editable th{padding-right:16px}[dir=ltr] [dir=rtl] .cke_editable td,[dir=ltr] [dir=rtl] .cke_editable th{padding-right:8px}[dir=rtl] [dir=rtl] .cke_editable td,[dir=rtl] [dir=rtl] .cke_editable th{padding-left:8px}.cke_editable td[valign=top]{padding-top:8px;padding-bottom:0}[dir=ltr] .cke_editable td[valign=top]{padding-left:8px}[dir=rtl] .cke_editable td[valign=top]{padding-right:8px}[dir=ltr] .cke_editable td[valign=top]{padding-right:16px}[dir=rtl] .cke_editable td[valign=top]{padding-left:16px}.cke_editable td[valign=bottom]{padding-top:0;padding-bottom:8px}[dir=ltr] .cke_editable td[valign=bottom]{padding-left:8px}[dir=rtl] .cke_editable td[valign=bottom]{padding-right:8px}[dir=ltr] .cke_editable td[valign=bottom]{padding-right:16px}[dir=rtl] .cke_editable td[valign=bottom]{padding-left:16px}.cke_editable td[align=center],.cke_editable td p[style*=\"text-align:center\"],.cke_editable td p[style*=\"text-align: center\"]{padding:8px 16px}.cke_editable td[align=left],.cke_editable td p[style*=\"text-align:left\"],.cke_editable td p[style*=\"text-align: left\"]{padding:8px 16px 8px 8px}.cke_editable td[align=right],.cke_editable td p[style*=\"text-align:right\"],.cke_editable td p[style*=\"text-align: right\"]{padding:8px 8px 8px 16px}.cke_editable tr td th:nth-last-child(n+20):first-child,.cke_editable tr td th:nth-last-child(n+20):first-child~*{padding:4px!important;font-size:10px!important}[dir=ltr] .cke_editable .ql-indent-1{padding-left:40px}[dir=rtl] .cke_editable .ql-indent-1{padding-right:40px}[dir=ltr] .cke_editable li.ql-indent-1{padding-left:59px}[dir=rtl] .cke_editable li.ql-indent-1{padding-right:59px}[dir=ltr] .cke_editable .ql-indent-2{padding-left:80px}[dir=rtl] .cke_editable .ql-indent-2{padding-right:80px}[dir=ltr] .cke_editable li.ql-indent-2{padding-left:99px}[dir=rtl] .cke_editable li.ql-indent-2{padding-right:99px}[dir=ltr] .cke_editable .ql-indent-3{padding-left:120px}[dir=rtl] .cke_editable .ql-indent-3{padding-right:120px}[dir=ltr] .cke_editable li.ql-indent-3{padding-left:139px}[dir=rtl] .cke_editable li.ql-indent-3{padding-right:139px}[dir=ltr] .cke_editable .ql-indent-4{padding-left:160px}[dir=rtl] .cke_editable .ql-indent-4{padding-right:160px}[dir=ltr] .cke_editable li.ql-indent-4{padding-left:179px}[dir=rtl] .cke_editable li.ql-indent-4{padding-right:179px}[dir=ltr] .cke_editable .ql-indent-5{padding-left:200px}[dir=rtl] .cke_editable .ql-indent-5{padding-right:200px}[dir=ltr] .cke_editable li.ql-indent-5{padding-left:219px}[dir=rtl] .cke_editable li.ql-indent-5{padding-right:219px}[dir=ltr] .cke_editable .ql-indent-6{padding-left:240px}[dir=rtl] .cke_editable .ql-indent-6{padding-right:240px}[dir=ltr] .cke_editable li.ql-indent-6{padding-left:259px}[dir=rtl] .cke_editable li.ql-indent-6{padding-right:259px}[dir=ltr] .cke_editable .ql-indent-7{padding-left:280px}[dir=rtl] .cke_editable .ql-indent-7{padding-right:280px}[dir=ltr] .cke_editable li.ql-indent-7{padding-left:299px}[dir=rtl] .cke_editable li.ql-indent-7{padding-right:299px}[dir=ltr] .cke_editable .ql-indent-8{padding-left:320px}[dir=rtl] .cke_editable .ql-indent-8{padding-right:320px}[dir=ltr] .cke_editable li.ql-indent-8{padding-left:339px}[dir=rtl] .cke_editable li.ql-indent-8{padding-right:339px}[dir=ltr] .cke_editable .ql-align-right{text-align:right}[dir=rtl] .cke_editable .ql-align-right{text-align:left}.cke_editable .ql-align-center{text-align:center}@media only screen and (max-width:640px){.cke_editable table,.cke_editable td,.cke_editable th{padding:8px!important;word-break:break-all}.cke_editable table{max-width:600px!important}.cke_editable td p,.cke_editable td p span,.cke_editable th p,.cke_editable th p span{font-size:12px!important}}", ""]);

// exports


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".rteFlyout-visible{position:absolute;z-index:2;box-shadow:0 0 5px 0 #c8c8c8;top:-45px;font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}@media (max-width:720px){.rteFlyout-visible .rteFlyout-button{padding:10px;font-size:11px}}.rteFlyout-visible .rteFlyout-button:hover{background:#0078d7}.rteFlyout-visible .rteFlyout-button .ms-Icon{padding:13px;color:#767676;font-size:14px!important}.rteFlyout-visible .rteFlyout-button:hover .ms-Icon{color:#fff}.rteFlyout-visible .rteFlyout-button img{vertical-align:middle;display:inline-block}.rteFlyout-visible .stack-panel-class{background:\"[theme:neutralPrimary, default: #333333]\"}.rteFlyout-button{background-color:transparent;border-width:0;padding:0;cursor:pointer!important}.stack-panel-class{white-space:nowrap}.SPRteFormattingBar{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;background-color:\"[theme:neutralPrimary, default: #333333]\";transition:all 367ms cubic-bezier(.1,.9,.2,1);min-width:505px;max-width:none}[dir=ltr] .SPRteFormattingBar .ToolbarButton,[dir=ltr] .SPRteFormattingBar .ToolbarSubmenu{float:left}[dir=rtl] .SPRteFormattingBar .ToolbarButton,[dir=rtl] .SPRteFormattingBar .ToolbarSubmenu{float:right}.SPRteFormattingBar.faded{display:none}.SPRteFormattingBar-divider{height:16px;margin-top:8px;width:0;border-right:1px solid}[dir=ltr] .SPRteFormattingBar-divider{float:left}[dir=rtl] .SPRteFormattingBar-divider{float:right}.msIcon_h2_temp:after{content:\"H2\";font-size:16px;font-style:normal;font-weight:600}.button_quote_temp .ms-Icon{font-size:28px!important;font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;line-height:1.7!important}.button_linkRemove_temp .ms-Icon:after{content:\"x\";font-family:Arial}[dir=ltr] .button_linkRemove_temp .ms-Icon:after{margin-left:-5px}[dir=rtl] .button_linkRemove_temp .ms-Icon:after{margin-right:-5px}[dir=ltr] .button_linkRemove_temp .ms-Icon:after{margin-right:5px}[dir=rtl] .button_linkRemove_temp .ms-Icon:after{margin-left:5px}", ""]);

// exports


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".LinkDialogContainer_0b185234{min-width:360px;max-width:none}", ""]);

// exports


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, "/*!\n * Quill Editor v1.1.0\n * https://quilljs.com/\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n */.ql-container{box-sizing:border-box;font-family:Helvetica,Arial,sans-serif;font-size:13px;height:100%;margin:0;position:relative}.ql-container.ql-disabled .ql-tooltip{visibility:hidden}.ql-clipboard{left:-100000px;height:1px;overflow-y:hidden;position:absolute;top:50%}.ql-clipboard p{margin:0;padding:0}.ql-editor{box-sizing:border-box;cursor:text;line-height:1.42;height:100%;outline:0;overflow-y:auto;padding:12px 15px;tab-size:4;-moz-tab-size:4;text-align:left;white-space:pre-wrap;word-wrap:break-word}.ql-editor blockquote,.ql-editor h1,.ql-editor h2,.ql-editor h3,.ql-editor h4,.ql-editor h5,.ql-editor h6,.ql-editor ol,.ql-editor p,.ql-editor pre,.ql-editor ul{margin:0;padding:0;counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol,.ql-editor ul{padding-left:1.5em}.ql-editor ol>li,.ql-editor ul>li{list-style-type:none}.ql-editor ul>li:before{content:\"\\25CF\"}.ql-editor li:before{display:inline-block;margin-right:.3em;text-align:right;white-space:nowrap;width:1.2em}.ql-editor li:not(.ql-direction-rtl):before{margin-left:-1.5em}.ql-editor ol li,.ql-editor ul li{padding-left:1.5em}.ql-editor ol li{counter-reset:list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;counter-increment:list-num}.ql-editor ol li:before{content:counter(list-num,decimal) \". \"}.ql-editor ol li.ql-indent-1{counter-increment:list-1}.ql-editor ol li.ql-indent-1:before{content:counter(list-1,lower-alpha) \". \"}.ql-editor ol li.ql-indent-1{counter-reset:list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-2{counter-increment:list-2}.ql-editor ol li.ql-indent-2:before{content:counter(list-2,lower-roman) \". \"}.ql-editor ol li.ql-indent-2{counter-reset:list-3 list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-3{counter-increment:list-3}.ql-editor ol li.ql-indent-3:before{content:counter(list-3,decimal) \". \"}.ql-editor ol li.ql-indent-3{counter-reset:list-4 list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-4{counter-increment:list-4}.ql-editor ol li.ql-indent-4:before{content:counter(list-4,lower-alpha) \". \"}.ql-editor ol li.ql-indent-4{counter-reset:list-5 list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-5{counter-increment:list-5}.ql-editor ol li.ql-indent-5:before{content:counter(list-5,lower-roman) \". \"}.ql-editor ol li.ql-indent-5{counter-reset:list-6 list-7 list-8 list-9}.ql-editor ol li.ql-indent-6{counter-increment:list-6}.ql-editor ol li.ql-indent-6:before{content:counter(list-6,decimal) \". \"}.ql-editor ol li.ql-indent-6{counter-reset:list-7 list-8 list-9}.ql-editor ol li.ql-indent-7{counter-increment:list-7}.ql-editor ol li.ql-indent-7:before{content:counter(list-7,lower-alpha) \". \"}.ql-editor ol li.ql-indent-7{counter-reset:list-8 list-9}.ql-editor ol li.ql-indent-8{counter-increment:list-8}.ql-editor ol li.ql-indent-8:before{content:counter(list-8,lower-roman) \". \"}.ql-editor ol li.ql-indent-8{counter-reset:list-9}.ql-editor ol li.ql-indent-9{counter-increment:list-9}.ql-editor ol li.ql-indent-9:before{content:counter(list-9,decimal) \". \"}.ql-editor .ql-indent-1:not(.ql-direction-rtl){padding-left:3em}.ql-editor li.ql-indent-1:not(.ql-direction-rtl){padding-left:4.5em}.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:3em}.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right{padding-right:4.5em}.ql-editor .ql-indent-2:not(.ql-direction-rtl){padding-left:6em}.ql-editor li.ql-indent-2:not(.ql-direction-rtl){padding-left:7.5em}.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:6em}.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right{padding-right:7.5em}.ql-editor .ql-indent-3:not(.ql-direction-rtl){padding-left:9em}.ql-editor li.ql-indent-3:not(.ql-direction-rtl){padding-left:10.5em}.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:9em}.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right{padding-right:10.5em}.ql-editor .ql-indent-4:not(.ql-direction-rtl){padding-left:12em}.ql-editor li.ql-indent-4:not(.ql-direction-rtl){padding-left:13.5em}.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:12em}.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right{padding-right:13.5em}.ql-editor .ql-indent-5:not(.ql-direction-rtl){padding-left:15em}.ql-editor li.ql-indent-5:not(.ql-direction-rtl){padding-left:16.5em}.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:15em}.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right{padding-right:16.5em}.ql-editor .ql-indent-6:not(.ql-direction-rtl){padding-left:18em}.ql-editor li.ql-indent-6:not(.ql-direction-rtl){padding-left:19.5em}.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:18em}.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right{padding-right:19.5em}.ql-editor .ql-indent-7:not(.ql-direction-rtl){padding-left:21em}.ql-editor li.ql-indent-7:not(.ql-direction-rtl){padding-left:22.5em}.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:21em}.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right{padding-right:22.5em}.ql-editor .ql-indent-8:not(.ql-direction-rtl){padding-left:24em}.ql-editor li.ql-indent-8:not(.ql-direction-rtl){padding-left:25.5em}.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:24em}.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right{padding-right:25.5em}.ql-editor .ql-indent-9:not(.ql-direction-rtl){padding-left:27em}.ql-editor li.ql-indent-9:not(.ql-direction-rtl){padding-left:28.5em}.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:27em}.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right{padding-right:28.5em}.ql-editor .ql-video{display:block;max-width:100%}.ql-editor .ql-video.ql-align-center{margin:0 auto}.ql-editor .ql-video.ql-align-right{margin:0 0 0 auto}.ql-editor .ql-bg-black{background-color:#000}.ql-editor .ql-bg-red{background-color:#e60000}.ql-editor .ql-bg-orange{background-color:#f90}.ql-editor .ql-bg-yellow{background-color:#ff0}.ql-editor .ql-bg-green{background-color:#008a00}.ql-editor .ql-bg-blue{background-color:#06c}.ql-editor .ql-bg-purple{background-color:#93f}.ql-editor .ql-color-white{color:#fff}.ql-editor .ql-color-red{color:#e60000}.ql-editor .ql-color-orange{color:#f90}.ql-editor .ql-color-yellow{color:#ff0}.ql-editor .ql-color-green{color:#008a00}.ql-editor .ql-color-blue{color:#06c}.ql-editor .ql-color-purple{color:#93f}.ql-editor .ql-font-serif{font-family:Georgia,Times New Roman,serif}.ql-editor .ql-font-monospace{font-family:Monaco,Courier New,monospace}.ql-editor .ql-size-small{font-size:.75em}.ql-editor .ql-size-large{font-size:1.5em}.ql-editor .ql-size-huge{font-size:2.5em}.ql-editor .ql-direction-rtl{direction:rtl;text-align:inherit}.ql-editor .ql-align-center{text-align:center}.ql-editor .ql-align-justify{text-align:justify}.ql-editor .ql-align-right{text-align:right}.ql-editor.ql-blank:before{color:rgba(0,0,0,.6);content:attr(data-placeholder);font-style:italic;pointer-events:none;position:absolute}.ql-editor{overflow:hidden}[dir=ltr] .ql-editor{text-align:left}[dir=rtl] .ql-editor{text-align:right}.ql-editor ol,.ql-editor ul{list-style-position:inside}[dir=ltr] .ql-editor ol,[dir=ltr] .ql-editor ul{padding-left:20px}[dir=rtl] .ql-editor ol,[dir=rtl] .ql-editor ul{padding-right:20px}[dir=ltr] .ql-editor li:before{margin-left:-19px}[dir=rtl] .ql-editor li:before{margin-right:-19px}[dir=ltr] .ql-editor li:before{margin-right:4px}[dir=rtl] .ql-editor li:before{margin-left:4px}[dir=ltr] .ql-editor li:before{text-align:right}[dir=rtl] .ql-editor li:before{text-align:left}[dir=ltr] .ql-editor ol li,[dir=ltr] .ql-editor ul li{padding-left:19px}[dir=rtl] .ql-editor ol li,[dir=rtl] .ql-editor ul li{padding-right:19px}[dir=ltr] .ql-editor .ql-indent-1{padding-left:40px}[dir=rtl] .ql-editor .ql-indent-1{padding-right:40px}[dir=ltr] .ql-editor li.ql-indent-1{padding-left:59px}[dir=rtl] .ql-editor li.ql-indent-1{padding-right:59px}[dir=ltr] .ql-editor .ql-indent-2{padding-left:80px}[dir=rtl] .ql-editor .ql-indent-2{padding-right:80px}[dir=ltr] .ql-editor li.ql-indent-2{padding-left:99px}[dir=rtl] .ql-editor li.ql-indent-2{padding-right:99px}[dir=ltr] .ql-editor .ql-indent-3{padding-left:120px}[dir=rtl] .ql-editor .ql-indent-3{padding-right:120px}[dir=ltr] .ql-editor li.ql-indent-3{padding-left:139px}[dir=rtl] .ql-editor li.ql-indent-3{padding-right:139px}[dir=ltr] .ql-editor .ql-indent-4{padding-left:160px}[dir=rtl] .ql-editor .ql-indent-4{padding-right:160px}[dir=ltr] .ql-editor li.ql-indent-4{padding-left:179px}[dir=rtl] .ql-editor li.ql-indent-4{padding-right:179px}[dir=ltr] .ql-editor .ql-indent-5{padding-left:200px}[dir=rtl] .ql-editor .ql-indent-5{padding-right:200px}[dir=ltr] .ql-editor li.ql-indent-5{padding-left:219px}[dir=rtl] .ql-editor li.ql-indent-5{padding-right:219px}[dir=ltr] .ql-editor .ql-indent-6{padding-left:240px}[dir=rtl] .ql-editor .ql-indent-6{padding-right:240px}[dir=ltr] .ql-editor li.ql-indent-6{padding-left:259px}[dir=rtl] .ql-editor li.ql-indent-6{padding-right:259px}[dir=ltr] .ql-editor .ql-indent-7{padding-left:280px}[dir=rtl] .ql-editor .ql-indent-7{padding-right:280px}[dir=ltr] .ql-editor li.ql-indent-7{padding-left:299px}[dir=rtl] .ql-editor li.ql-indent-7{padding-right:299px}[dir=ltr] .ql-editor .ql-indent-8{padding-left:320px}[dir=rtl] .ql-editor .ql-indent-8{padding-right:320px}[dir=ltr] .ql-editor li.ql-indent-8{padding-left:339px}[dir=rtl] .ql-editor li.ql-indent-8{padding-right:339px}[dir=ltr] .ql-editor .ql-align-right{text-align:right}[dir=rtl] .ql-editor .ql-align-right{text-align:left}", ""]);

// exports


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, ".cke_editable,.ql-editor{cursor:text;margin:0;padding:0;min-height:68px;margin-bottom:-16px}.cke_editable:focus,.ql-editor:focus{outline:0}.ql-paste-manager{position:absolute;text-indent:-9999px;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;border:0}.ql-editor.ql-ie-9 br,.ql-editor.ql-ie-10 br{display:none}@media screen and (min-width:1024px){.CanvasSection.ms-u-xl4 .cke_editable ol,.CanvasSection.ms-u-xl4 .cke_editable p,.CanvasSection.ms-u-xl4 .cke_editable td,.CanvasSection.ms-u-xl4 .cke_editable td p,.CanvasSection.ms-u-xl4 .cke_editable th,.CanvasSection.ms-u-xl4 .cke_editable th p,.CanvasSection.ms-u-xl4 .cke_editable ul{font-size:15px}}.cke_editable.ql-blank:before,.cke_editable blockquote,.cke_editable div,.cke_editable h2,.cke_editable h3,.cke_editable h4,.cke_editable ol,.cke_editable p,.cke_editable ul,.ql-editor.ql-blank:before,.ql-editor blockquote,.ql-editor div,.ql-editor h2,.ql-editor h3,.ql-editor h4,.ql-editor ol,.ql-editor p,.ql-editor ul{-webkit-font-smoothing:antialiased;color:\"[theme:neutralPrimary, default: #333333]\";line-height:1.5;margin:0 0 16px;padding:0;word-wrap:break-word}.cke_editable.ql-blank:before,.ql-editor.ql-blank:before{color:\"[theme:neutralTertiary, default: #a6a6a6]\"!important;content:attr(data-placeholder);font-size:16px;font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;font-style:normal;position:absolute;pointer-events:none}.cke_editable div,.cke_editable p,.ql-editor div,.ql-editor p{font-size:15px;font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}.cke_editable h2,.cke_editable h3,.cke_editable h4,.ql-editor h2,.ql-editor h3,.ql-editor h4{font-weight:100;font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif!important}.cke_editable h2,.ql-editor h2{font-size:24px}.cke_editable h3,.ql-editor h3{font-size:21px}.cke_editable h4,.ql-editor h4{font-size:17px;font-family:Segoe UI Semilight WestEuropean,Segoe UI Semilight,Segoe WP Semilight,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}.cke_editable ol,.cke_editable ul,.ql-editor ol,.ql-editor ul{font-size:15px;font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;padding:0}.cke_editable ol li,.cke_editable ul li,.ql-editor ol li,.ql-editor ul li{margin-bottom:8px}.cke_editable ol,.ql-editor ol{list-style-type:decimal}.cke_editable ul,.ql-editor ul{list-style-type:disc}.cke_editable blockquote,.cke_editable div.quote-true,.ql-editor blockquote,.ql-editor div.quote-true{border-bottom:1px solid;border-top:1px solid;border-bottom-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\";border-top-color:\"[theme:neutralTertiaryAlt, default: #c8c8c8]\";border-left:none;border-right:none;font-family:Segoe UI Light WestEuropean,Segoe UI Light,Segoe WP Light,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;font-size:24px;font-style:italic;margin:28px 0;padding:32px;text-align:center;color:\"[theme:neutralSecondaryAlt, default: #767676]\"}.cke_editable blockquote p,.ql-editor blockquote p{font-size:24px;margin:0}.cke_editable a,.ql-editor a{text-decoration:underline}.cke_editable i,.ql-editor i{font-style:italic}.cke_editable u,.ql-editor u{text-decoration:underline}@media screen and (min-width:480px){.cke_editable h2,.ql-editor h2{font-size:28px}.cke_editable h3,.ql-editor h3{font-size:24px}.cke_editable h4,.ql-editor h4{font-size:21px}.cke_editable blockquote,.cke_editable div.quote-true,.ql-editor blockquote,.ql-editor div.quote-true{font-size:24px}}@media screen and (min-width:1024px){.cke_editable h2,.ql-editor h2{font-size:28px}.cke_editable h3,.ql-editor h3{font-size:24px}.cke_editable h4,.ql-editor h4{font-size:21px}.cke_editable.ql-blank:before,.cke_editable div,.cke_editable ol,.cke_editable p,.cke_editable ul,.ql-editor.ql-blank:before,.ql-editor div,.ql-editor ol,.ql-editor p,.ql-editor ul{font-size:17px;font-family:Segoe UI Semilight WestEuropean,Segoe UI Semilight,Segoe WP Semilight,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif;line-height:1.5}.cke_editable td,.cke_editable td p,.cke_editable th,.cke_editable th p,.ql-editor td,.ql-editor td p,.ql-editor th,.ql-editor th p{font-family:Segoe UI WestEuropean,Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;font-size:15px;font-weight:400;font-family:Segoe UI Regular WestEuropean,Segoe UI,Segoe WP,Tahoma,Arial,sans-serif}}", ""]);

// exports


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, "body{height:100vh;margin:0;padding:0}.SPPageChrome{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%}#SuiteNavPlaceHolder{background-color:#333;width:100%;z-index:5}#SuiteNavPlaceHolder:empty{display:none}.SPPageChrome-app,.SPPageChrome-app>div{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:100%}.SPPageChromeNoFlexbox-app{position:absolute;right:0;bottom:0;left:0;overflow:visible}.spAppAndPropertyPanelContainer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;height:100%}.spPropertyPaneContainer{width:0;position:relative;z-index:999}.spPropertyPaneContainer button{display:none}.spPropertyPaneContainerNoFlexbox{top:50px;position:fixed;right:-340px;bottom:0;z-index:999}.spPageContentTransition_68c35b48{transition:width 367ms cubic-bezier(.1,.9,.2,1);-webkit-transition:width 367ms cubic-bezier(.1,.9,.2,1)}", ""]);

// exports


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)();
// imports


// module
exports.push([module.i, "[id^=spPropertyPaneContainer].showPane_3767c5d3{width:340px}[id^=spPropertyPaneContainer].showPane_3767c5d3 button{display:block}[id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_3767c5d3{position:absolute;top:50px;bottom:0;z-index:999}html[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_3767c5d3{right:-340px}html[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].spPropertyPaneContainer_3767c5d3{left:-340px}html[dir=ltr] [id^=spPropertyPaneContainerNoFlexbox].showPane_3767c5d3{right:0}html[dir=rtl] [id^=spPropertyPaneContainerNoFlexbox].showPane_3767c5d3{left:0}html[dir=ltr] [id^=spPageChromeAppDiv].shrinkContent_3767c5d3{right:340px}html[dir=rtl] [id^=spPageChromeAppDiv].shrinkContent_3767c5d3{left:340px}html[dir=ltr] [id^=workbenchPageContent].shrinkContent_3767c5d3{right:340px}html[dir=rtl] [id^=workbenchPageContent].shrinkContent_3767c5d3{left:340px}html[dir=ltr] [id^=workbenchCommandBar].shrinkContent_3767c5d3{padding-right:340px}html[dir=rtl] [id^=workbenchCommandBar].shrinkContent_3767c5d3{padding-left:340px}", ""]);

// exports


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var sp_canvas_1 = __webpack_require__(45);
var sp_core_library_1 = __webpack_require__(4);
var office_ui_fabric_react_1 = __webpack_require__(0);
var PropertyPaneController_module_scss_1 = __webpack_require__(247);
var CanvasHost_module_scss_1 = __webpack_require__(159);
var CanvasHost_resx_1 = __webpack_require__(160);
var CanvasHost = (function (_super) {
    __extends(CanvasHost, _super);
    function CanvasHost() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CanvasHost.prototype.componentDidMount = function () {
        var _this = this;
        var canvasOptions = {
            serviceScope: this.props.store.serviceScope,
            mode: this._getDisplayMode()
        };
        this._canvas = new sp_canvas_1.Canvas(this._canvasElement, canvasOptions);
        this.props.store.getPageReadyPromise().then(function () {
            var render = function () {
                _this._canvas.render(_this.props.store.getPageState());
                _this.props.store.setClearCallback(_this._clearPage);
                _this.props.store.setSerializeCallback(_this._canvas.serialize);
            };
            _this._canvas.fetchWebparts(true)
                .then(render)
                .catch(function (error) {
                console.error(sp_core_library_1.Text.format(CanvasHost_resx_1.default.FetchFailedError, error));
                render();
            });
        });
    };
    CanvasHost.prototype.componentDidUpdate = function (props) {
        if (this._canvas) {
            this._canvas.displayMode = this._getDisplayMode();
        }
    };
    CanvasHost.prototype.serialize = function (toJson) {
        return this._canvas.serialize(toJson);
    };
    CanvasHost.prototype.render = function () {
        var _this = this;
        var rootClass = office_ui_fabric_react_1.css(CanvasHost_module_scss_1.default.canvasHost, (_a = {},
            _a[CanvasHost_module_scss_1.default.hasHeader] = this.props.hasOfficeHeader,
            _a[CanvasHost_module_scss_1.default.hasCommandBar] = this.props.hasCommandBar,
            _a));
        return (React.createElement("div", { className: rootClass },
            React.createElement("div", { className: CanvasHost_module_scss_1.default.belowHeader },
                React.createElement("div", { className: CanvasHost_module_scss_1.default.content },
                    React.createElement("div", { ref: function (canvasElement) { return _this._canvasElement = canvasElement; } })))));
        var _a;
    };
    CanvasHost.prototype._getDisplayMode = function () {
        return this.props.isEditing ? sp_core_library_1.DisplayMode.Edit : sp_core_library_1.DisplayMode.Read;
    };
    CanvasHost.prototype._clearPage = function () {
        this._canvas.render();
        var propertyPaneContainer = document.getElementById('propertyPaneContainer');
        if (propertyPaneContainer) {
            propertyPaneContainer.classList.remove(PropertyPaneController_module_scss_1.default.showPane);
            window.setTimeout(function () {
                while (propertyPaneContainer.firstChild) {
                    propertyPaneContainer.removeChild(propertyPaneContainer.firstChild);
                }
            }, 1000);
        }
    };
    return CanvasHost;
}(React.Component));
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasHost.prototype, "serialize", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasHost.prototype, "_clearPage", null);
exports.default = CanvasHost;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(82);
var styles = {
    canvasHost: 'canvasHost_87bb9867',
    belowHeader: 'belowHeader_87bb9867',
    content: 'content_87bb9867',
    hasHeader: 'hasHeader_87bb9867',
    hasCommandBar: 'hasCommandBar_87bb9867',
    NavPane: 'NavPane_87bb9867',
};
exports.default = styles;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_vd/LT/qfiQhbHFfeM1GtlA'];


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_FQya7ZjwIyrOEutOa+omIA'];


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.mobilePreviewDevices = {
    phones: [
        { name: 'iPhone 6 Plus', width: 414, height: 736 },
        { name: 'Samsung Galaxy S6/S7', width: 360, height: 640 },
        { name: 'iPhone 5', width: 320, height: 568 },
        { name: 'Microsoft Lumia 1520', width: 432, height: 768 }
    ],
    tablets: [
        { name: 'Microsoft Surface Pro 3', width: 1440, height: 960 },
        { name: 'Microsoft Surface Pro', width: 1280, height: 720 },
        { name: 'iPad', width: 1024, height: 768 },
        { name: 'iPad Pro', width: 1366, height: 1024 },
        { name: 'Samsung Galaxy Tab', width: 1280, height: 800 }
    ],
    desktops: []
};


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewClickStop_1 = __webpack_require__(165);
var MobilePreviewClickStopBar_module_scss_1 = __webpack_require__(164);
var MobilePreview_resx_1 = __webpack_require__(18);
var MobilePreviewClickStopBar = (function (_super) {
    __extends(MobilePreviewClickStopBar, _super);
    function MobilePreviewClickStopBar(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewClickStopBar.prototype.render = function () {
        var props = this.props;
        var deviceDiv = [];
        var _loop_1 = function (device) {
            var selected = false;
            if (device === props.currentDevice) {
                selected = true;
            }
            deviceDiv.push(React.createElement(MobilePreviewClickStop_1.default, { key: device.name, device: device, onClick: function () { return props.onSelectClickStop(device); }, selected: selected, orientation: props.currentOrientation, deviceType: this_1.props.deviceType }));
        };
        var this_1 = this;
        for (var _i = 0, _a = props.devices; _i < _a.length; _i++) {
            var device = _a[_i];
            _loop_1(device);
        }
        var containerStyle = office_ui_fabric_react_1.css(MobilePreviewClickStopBar_module_scss_1.default.clickStopNavBar, 'ms-borderColor-neutralTertiaryAlt', 'ms-bgColor-neutralLighter', 'ms-fontColor-neutralPrimary');
        return (React.createElement("div", { className: containerStyle, "data-sp-a11y-alertonfocusin": MobilePreview_resx_1.default.ScreenReaderDevicePickerEntered },
            React.createElement(office_ui_fabric_react_1.FocusZone, { direction: office_ui_fabric_react_1.FocusZoneDirection.horizontal },
                React.createElement("ul", { className: MobilePreviewClickStopBar_module_scss_1.default.navBarItems },
                    deviceDiv,
                    React.createElement("div", { id: 'clickStopBarLabel', className: MobilePreviewClickStopBar_module_scss_1.default.mobilePreviewDeviceTitle }, props.currentDevice.name)))));
    };
    return MobilePreviewClickStopBar;
}(React.Component));
exports.default = MobilePreviewClickStopBar;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(83);
var styles = {
    clickStopNavBar: 'clickStopNavBar_a6a062f7',
    navBarItems: 'navBarItems_a6a062f7',
    mobilePreviewDeviceTitle: 'mobilePreviewDeviceTitle_a6a062f7',
};
exports.default = styles;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreview_1 = __webpack_require__(19);
var MobilePreviewClickStop_module_scss_1 = __webpack_require__(166);
var MobilePreview_resx_1 = __webpack_require__(18);
var MobilePreviewClickStop = (function (_super) {
    __extends(MobilePreviewClickStop, _super);
    function MobilePreviewClickStop(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewClickStop.prototype.render = function () {
        var _this = this;
        var effectiveWidth = this.props.device.width;
        if (this.props.deviceType === MobilePreview_1.DeviceType.Phone) {
            if (this.props.orientation === MobilePreview_1.DeviceOrientation.Landscape) {
                effectiveWidth = this.props.device.height;
            }
        }
        else if (this.props.deviceType === MobilePreview_1.DeviceType.Tablet) {
            if (this.props.orientation === MobilePreview_1.DeviceOrientation.Portrait) {
                effectiveWidth = this.props.device.height;
            }
        }
        var leftCalc = "calc(50% - " + effectiveWidth / 2 + "px)";
        var divStyle = {
            width: effectiveWidth,
            left: leftCalc
        };
        var className = office_ui_fabric_react_1.css(MobilePreviewClickStop_module_scss_1.default.navBarItem, 'ms-borderColor-white', MobilePreviewClickStop_module_scss_1.default.clickStop, (_a = {},
            _a[MobilePreviewClickStop_module_scss_1.default.clickStopSelected] = this.props.selected,
            _a));
        return (React.createElement("li", { className: className, role: 'button', "aria-label": this.props.device.name, tabIndex: 0, onClick: this._handleClick, onKeyDown: this._handleKeyDown, style: divStyle, onFocus: this._handleFocus, ref: function (c) { return _this._mainDiv = c; } }));
        var _a;
    };
    MobilePreviewClickStop.prototype._handleFocus = function () {
        if (document.activeElement === this._mainDiv && !this.props.selected) {
            if (this.context && this.context.a11yManager) {
                this.context.a11yManager.alert(MobilePreview_resx_1.default.ScreenReaderDevicePickerSelecetionChanged);
            }
        }
    };
    MobilePreviewClickStop.prototype._handleClick = function () {
        this.props.onClick(this.props.device);
    };
    MobilePreviewClickStop.prototype._handleKeyDown = function (evt) {
        if (evt.keyCode === 13) {
            this._handleClick();
        }
    };
    return MobilePreviewClickStop;
}(React.Component));
MobilePreviewClickStop.contextTypes = {
    a11yManager: React.PropTypes.object
};
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreviewClickStop.prototype, "_handleFocus", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreviewClickStop.prototype, "_handleClick", null);
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreviewClickStop.prototype, "_handleKeyDown", null);
exports.default = MobilePreviewClickStop;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(84);
var styles = {
    clickStop: 'clickStop_800cddc3',
    clickStopSelected: 'clickStopSelected_800cddc3',
    navBarItem: 'navBarItem_800cddc3',
};
exports.default = styles;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewDeviceView_module_scss_1 = __webpack_require__(168);
var MobilePreview_1 = __webpack_require__(19);
var MobilePreviewDeviceView = (function (_super) {
    __extends(MobilePreviewDeviceView, _super);
    function MobilePreviewDeviceView(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewDeviceView.prototype.render = function () {
        var formStyle = {
            width: this.props.currentDevice.width,
            height: this.props.currentDevice.height
        };
        var mobilePreviewClassName = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewDevice, 'ms-borderColor-neutralSecondaryAlt', this.props.deviceType === MobilePreview_1.DeviceType.Tablet ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewTablet :
            this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait ? MobilePreviewDeviceView_module_scss_1.default.mobilePreviewPortrait :
                MobilePreviewDeviceView_module_scss_1.default.mobilePreviewLandscape);
        var iFrameStyle = office_ui_fabric_react_1.css(MobilePreviewDeviceView_module_scss_1.default.mobilePreviewIframe, 'ms-bgColor-white');
        if (this.props.deviceType === MobilePreview_1.DeviceType.Phone) {
            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Landscape) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        if (this.props.deviceType === MobilePreview_1.DeviceType.Tablet) {
            if (this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait) {
                formStyle.width = this.props.currentDevice.height;
                formStyle.height = this.props.currentDevice.width;
            }
        }
        return (React.createElement("div", { className: mobilePreviewClassName, style: formStyle },
            React.createElement("iframe", { className: iFrameStyle, src: this.props.url })));
    };
    return MobilePreviewDeviceView;
}(React.Component));
exports.default = MobilePreviewDeviceView;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(85);
var styles = {
    mobilePreviewDevice: 'mobilePreviewDevice_1b54d398',
    mobilePreviewPortrait: 'mobilePreviewPortrait_1b54d398',
    mobilePreviewLandscape: 'mobilePreviewLandscape_1b54d398',
    mobilePreviewTablet: 'mobilePreviewTablet_1b54d398',
    mobilePreviewIframe: 'mobilePreviewIframe_1b54d398',
};
exports.default = styles;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewDimensionInput_module_scss_1 = __webpack_require__(170);
var MobilePreview_resx_1 = __webpack_require__(18);
var MobilePreviewDimensionInput = (function (_super) {
    __extends(MobilePreviewDimensionInput, _super);
    function MobilePreviewDimensionInput(props) {
        return _super.call(this, props) || this;
    }
    MobilePreviewDimensionInput.prototype.render = function () {
        var xContainerClassName = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss_1.default.xField);
        var yContainerClassName = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.mobilePreviewTextfieldXY, MobilePreviewDimensionInput_module_scss_1.default.yField);
        var textfieldsClass = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.xyTextfields, 'ms-borderColor-neutralTertiaryAlt', 'ms-fontColor-neutralSecondary');
        var labelsClass = office_ui_fabric_react_1.css(MobilePreviewDimensionInput_module_scss_1.default.xyLabels, 'ms-fontColor-neutralTertiaryAlt');
        return (React.createElement("div", null,
            React.createElement("div", { className: xContainerClassName },
                React.createElement("label", { className: labelsClass }, MobilePreview_resx_1.default.Width + ":"),
                React.createElement("input", { "aria-label": MobilePreview_resx_1.default.Width, className: textfieldsClass, onChange: this.props.onChangedX, value: this.props.currentDevice.width.toString() })),
            React.createElement("div", { className: yContainerClassName },
                React.createElement("label", { className: labelsClass }, MobilePreview_resx_1.default.Height + ":"),
                React.createElement("input", { "aria-label": MobilePreview_resx_1.default.Height, className: textfieldsClass, onChange: this.props.onChangedY, value: this.props.currentDevice.height.toString() }))));
    };
    return MobilePreviewDimensionInput;
}(React.Component));
exports.default = MobilePreviewDimensionInput;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(86);
var styles = {
    xField: 'xField_e24b9168',
    yField: 'yField_e24b9168',
    mobilePreviewTextfieldXY: 'mobilePreviewTextfieldXY_e24b9168',
    xyTextfields: 'xyTextfields_e24b9168',
    xyLabels: 'xyLabels_e24b9168',
};
exports.default = styles;


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewHeaderBar_module_scss_1 = __webpack_require__(172);
var MobilePreviewURLEntry_1 = __webpack_require__(175);
var MobilePreviewDeviceTypeSelector_1 = __webpack_require__(173);
var MobilePreviewHeaderBar = (function (_super) {
    __extends(MobilePreviewHeaderBar, _super);
    function MobilePreviewHeaderBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewHeaderBar.prototype.render = function () {
        var mobilePreviewURLEntry = React.createElement(MobilePreviewURLEntry_1.default, { onChangeURL: this.props.onChangeURL, onClickURLSubmit: this.props.onClickURLSubmit });
        var mobilePreviewDeviceTypeSelector = React.createElement(MobilePreviewDeviceTypeSelector_1.default, { onChangeDeviceType: this.props.onChangeDeviceType });
        var mobilePreviewNavBar = office_ui_fabric_react_1.css(MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewNavBar, 'ms-fontColor-neutralPrimary', 'ms-bgColor-neutralLighter');
        var navBarItems = office_ui_fabric_react_1.css('ms-Grid-row', MobilePreviewHeaderBar_module_scss_1.default.navBarItems);
        var navBarItemSmClass = office_ui_fabric_react_1.css('ms-Grid-col', 'ms-u-sm6', 'ms-u-md6', 'ms-u-lg3', MobilePreviewHeaderBar_module_scss_1.default.navBarItem);
        var navBarItemMdClass = office_ui_fabric_react_1.css('ms-Grid-col', 'ms-u-hiddenMdDown', 'ms-u-lg6', MobilePreviewHeaderBar_module_scss_1.default.navBarItem);
        var navBarItemRightClass = office_ui_fabric_react_1.css(MobilePreviewHeaderBar_module_scss_1.default.navBarItem, MobilePreviewHeaderBar_module_scss_1.default.navBarItemRight);
        var xClass = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--Cancel', 'ms-fontColor-neutralTertiary', MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewXIcon, 'ms-borderColor-neutralTertiaryAlt');
        return (React.createElement("div", { className: mobilePreviewNavBar },
            React.createElement("div", { className: navBarItems },
                React.createElement("div", { className: navBarItemSmClass },
                    React.createElement("span", { className: MobilePreviewHeaderBar_module_scss_1.default.mobilePreviewTitle }, "Mobile Preview")),
                React.createElement("div", { className: navBarItemMdClass }, mobilePreviewURLEntry),
                React.createElement("div", { className: 'ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg3' },
                    React.createElement("div", { className: navBarItemRightClass },
                        React.createElement("a", { role: 'button', onClick: this.props.onExit },
                            React.createElement("span", { className: xClass }))),
                    mobilePreviewDeviceTypeSelector))));
    };
    return MobilePreviewHeaderBar;
}(React.Component));
exports.default = MobilePreviewHeaderBar;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(87);
var styles = {
    mobilePreviewNavBar: 'mobilePreviewNavBar_521549d6',
    navBarItems: 'navBarItems_521549d6',
    navBarItem: 'navBarItem_521549d6',
    navBarItemRight: 'navBarItemRight_521549d6',
    mobilePreviewTitle: 'mobilePreviewTitle_521549d6',
    mobilePreviewXIcon: 'mobilePreviewXIcon_521549d6',
};
exports.default = styles;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewDeviceTypeSelector_module_scss_1 = __webpack_require__(174);
var MobilePreview_1 = __webpack_require__(19);
var MobilePreviewDeviceTypeSelector = (function (_super) {
    __extends(MobilePreviewDeviceTypeSelector, _super);
    function MobilePreviewDeviceTypeSelector() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewDeviceTypeSelector.prototype.render = function () {
        var _this = this;
        var spanClassNameMobile = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--CellPhone', 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        var spanClassNameTablet = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--Tablet', 'ms-fontColor-neutralTertiary', MobilePreviewDeviceTypeSelector_module_scss_1.default.mobilePreviewDeviceIcon);
        return (React.createElement("div", null,
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Phone); } },
                    React.createElement("span", { className: spanClassNameMobile }))),
            React.createElement("div", { className: MobilePreviewDeviceTypeSelector_module_scss_1.default.navBarItemRight },
                React.createElement("a", { tabIndex: 0, role: 'button', onClick: function () { return _this.props.onChangeDeviceType(MobilePreview_1.DeviceType.Tablet); } },
                    React.createElement("span", { className: spanClassNameTablet })))));
    };
    return MobilePreviewDeviceTypeSelector;
}(React.Component));
exports.default = MobilePreviewDeviceTypeSelector;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(88);
var styles = {
    mobilePreviewDeviceIcon: 'mobilePreviewDeviceIcon_5d41f606',
    navBarItemRight: 'navBarItemRight_5d41f606',
};
exports.default = styles;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewURLEntry_module_scss_1 = __webpack_require__(176);
var MobilePreview_resx_1 = __webpack_require__(18);
var MobilePreviewURLEntry = (function (_super) {
    __extends(MobilePreviewURLEntry, _super);
    function MobilePreviewURLEntry() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewURLEntry.prototype.render = function () {
        return (React.createElement("div", { className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewURLbar },
            React.createElement(office_ui_fabric_react_1.TextField, { className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewTextfield, placeholder: MobilePreview_resx_1.default.UrlTextBoxPlaceholder, onChanged: this._validateAndCompleteURL }),
            React.createElement(office_ui_fabric_react_1.Button, { className: MobilePreviewURLEntry_module_scss_1.default.mobilePreviewURLbutton, onClick: this.props.onClickURLSubmit }, "View Preview")));
    };
    MobilePreviewURLEntry.prototype._validateAndCompleteURL = function (value) {
        if (!value || value === '') {
            return;
        }
        var regex = /https?:\/\//;
        if (!regex.test(value)) {
            value = 'http://' + value;
        }
        this.props.onChangeURL(value);
    };
    return MobilePreviewURLEntry;
}(React.Component));
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreviewURLEntry.prototype, "_validateAndCompleteURL", null);
exports.default = MobilePreviewURLEntry;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(89);
var styles = {
    mobilePreviewURLbar: 'mobilePreviewURLbar_6478cfe3',
    mobilePreviewTextfield: 'mobilePreviewTextfield_6478cfe3',
    mobilePreviewURLbutton: 'mobilePreviewURLbutton_6478cfe3',
};
exports.default = styles;


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var MobilePreviewRotate_module_scss_1 = __webpack_require__(178);
var MobilePreview_1 = __webpack_require__(19);
var MobilePreviewRotate = (function (_super) {
    __extends(MobilePreviewRotate, _super);
    function MobilePreviewRotate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MobilePreviewRotate.prototype.render = function () {
        var rotateIconClass = office_ui_fabric_react_1.css('ms-Icon', 'ms-Icon--Refresh', 'ms-fontColor-neutralLight', MobilePreviewRotate_module_scss_1.default.mobilePreviewRotateIcon);
        return (React.createElement("div", null,
            React.createElement("a", { role: 'button', onClick: this._onClickRotate },
                React.createElement("span", { className: rotateIconClass }))));
    };
    MobilePreviewRotate.prototype._onClickRotate = function () {
        var orientation = this.props.currentOrientation === MobilePreview_1.DeviceOrientation.Portrait
            ? MobilePreview_1.DeviceOrientation.Landscape
            : MobilePreview_1.DeviceOrientation.Portrait;
        this.props.onRotate(orientation);
    };
    return MobilePreviewRotate;
}(React.Component));
__decorate([
    office_ui_fabric_react_1.autobind
], MobilePreviewRotate.prototype, "_onClickRotate", null);
exports.default = MobilePreviewRotate;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(90);
var styles = {
    mobilePreviewRotateIcon: 'mobilePreviewRotateIcon_082813d4',
};
exports.default = styles;


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(91);
var styles = {
    mobilePreviewContainer: 'mobilePreviewContainer_245ca886',
    mobilePreviewDeviceContainer: 'mobilePreviewDeviceContainer_245ca886',
};
exports.default = styles;


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_canvas_1 = __webpack_require__(45);
var SerializedWebPart_1 = __webpack_require__(182);
var encodingUtilities_1 = __webpack_require__(37);
var SerializedCanvasView_resx_1 = __webpack_require__(181);
var SerializedCanvasView_module_scss_1 = __webpack_require__(36);
var SerializedCanvasView = (function (_super) {
    __extends(SerializedCanvasView, _super);
    function SerializedCanvasView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedCanvasView.prototype.render = function () {
        var webpartDataCollection = (this.props.getSerializedData)
            ? JSON.parse(decodeURI(this.props.getSerializedData(true) || '[]'))
                .filter(function (controlData) { return controlData.controlType === sp_canvas_1.CanvasControlType.WebPartZone; })
                .map(function (controlData) { return controlData.webPartData; })
            : [];
        var serializedData = (this.props.getSerializedData) ? this.props.getSerializedData(false) : '';
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: this.props.isVisible, type: office_ui_fabric_react_1.DialogType.normal, onDismiss: this.props.closeCallback, title: SerializedCanvasView_resx_1.default.WebPartData, isBlocking: false, containerClassName: SerializedCanvasView_module_scss_1.default.container, contentClassName: SerializedCanvasView_module_scss_1.default.content },
            React.createElement("div", null,
                React.createElement(office_ui_fabric_react_1.Pivot, null,
                    React.createElement(office_ui_fabric_react_1.PivotItem, { linkText: SerializedCanvasView_resx_1.default.ModernPages },
                        React.createElement("div", { className: SerializedCanvasView_module_scss_1.default.pivotItem },
                            React.createElement("p", { className: SerializedCanvasView_module_scss_1.default.serializedTextArea }, encodingUtilities_1.getReactLines(serializedData)))),
                    React.createElement(office_ui_fabric_react_1.PivotItem, { linkText: SerializedCanvasView_resx_1.default.ClassicPages },
                        React.createElement("div", { className: SerializedCanvasView_module_scss_1.default.pivotItem }, webpartDataCollection.map(function (webpartData) {
                            return React.createElement(SerializedWebPart_1.default, { key: webpartData.instanceId, serializedWebPart: webpartData });
                        })))),
                React.createElement(office_ui_fabric_react_1.Link, { className: SerializedCanvasView_module_scss_1.default.learnMoreLink, href: 'https://dev.office.com/sharepoint/docs/spfx/web-parts/get-started/provision-sp-assets-from-package', target: '_blank' }, SerializedCanvasView_resx_1.default.WebPartDataHelpInfoLink)),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.Button, { onClick: this.props.closeCallback }, SerializedCanvasView_resx_1.default.Close))));
    };
    return SerializedCanvasView;
}(React.Component));
exports.default = SerializedCanvasView;


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_8EVKOH1av6NjR/ZNfdafrw'];


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_webpart_base_1 = __webpack_require__(17);
var encodingUtilities_1 = __webpack_require__(37);
var SerializedWebPart_module_scss_1 = __webpack_require__(183);
var SerializedCanvasView_module_scss_1 = __webpack_require__(36);
var SerializedWebPart = (function (_super) {
    __extends(SerializedWebPart, _super);
    function SerializedWebPart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SerializedWebPart.prototype.render = function () {
        var serializedString = sp_webpart_base_1.WebPartDataConverter.convertWebPartDataToHtml(this.props.serializedWebPart);
        var escapedSerializedString = encodingUtilities_1.htmlEncode(serializedString);
        var webPartXmlLines = ['<webParts>',
            '  <webPart xmlns="http://schemas.microsoft.com/WebPart/v3">',
            '    <metaData>',
            '      <type name="Microsoft.SharePoint.WebPartPages.ClientSideWebPart,',
            '        Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c" />',
            '      <importErrorMessage>Cannot Import WebPart</importErrorMessage>',
            '    </metaData>',
            '    <data>',
            '      <properties>',
            "        <property name=\"Title\" type=\"string\">" + this.props.serializedWebPart.title + "</property>",
            "        <property name=\"Description\" type=\"string\">" + this.props.serializedWebPart.description + "</property>",
            "        <property name=\"IconUrl\" type=\"string\">" + '' + "</property>",
            "        <property name=\"ClientSideWebPartId\">" + this.props.serializedWebPart.id + "</property>",
            "        <property name=\"ClientSideWebPartData\" type=\"string\">" + escapedSerializedString + "</property>",
            '      </properties>',
            '    </data>',
            '  </webPart>',
            '</webParts>'];
        return (React.createElement("p", { key: this.props.serializedWebPart.instanceId, className: office_ui_fabric_react_1.css(SerializedWebPart_module_scss_1.default.serializedWebPartItem, SerializedCanvasView_module_scss_1.default.serializedTextArea) }, encodingUtilities_1.getReactLines(webPartXmlLines)));
    };
    return SerializedWebPart;
}(React.Component));
exports.default = SerializedWebPart;


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(93);
var styles = {
    serializedWebPartItem: 'serializedWebPartItem_16d8b5cb',
};
exports.default = styles;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var WorkbenchCommandBar_resx_1 = __webpack_require__(185);
var WorkbenchCommandBar = (function (_super) {
    __extends(WorkbenchCommandBar, _super);
    function WorkbenchCommandBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WorkbenchCommandBar.prototype.render = function () {
        var items = this.props.isEditing ? [
            {
                key: 'save',
                name: WorkbenchCommandBar_resx_1.default.Save,
                icon: 'Save',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Save,
                title: WorkbenchCommandBar_resx_1.default.SaveAltText,
                onClick: this.props.savePage,
                'data-automation-id': 'workbench-command-bar-save'
            },
            {
                key: 'discard',
                name: WorkbenchCommandBar_resx_1.default.Discard,
                icon: 'RevToggleKey',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Discard,
                title: WorkbenchCommandBar_resx_1.default.DiscardAltText,
                onClick: this.props.clearPage,
                'data-automation-id': 'workbench-command-bar-discard'
            },
            {
                key: 'wpData',
                name: WorkbenchCommandBar_resx_1.default.WebPartData,
                icon: 'TriangleUp12',
                ariaLabel: WorkbenchCommandBar_resx_1.default.WebPartData,
                title: WorkbenchCommandBar_resx_1.default.WebPartDataAltText,
                onClick: this.props.onClickSerializeCanvasView,
                'data-automation-id': 'workbench-command-bar-serialize'
            }
        ] : [];
        var farItems = this.props.isEditing ? [
            {
                key: 'mobilePreview',
                name: WorkbenchCommandBar_resx_1.default.Mobile,
                icon: 'CellPhone',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Mobile,
                title: WorkbenchCommandBar_resx_1.default.MobleAltText,
                onClick: this.props.onClickMobileView,
                'data-automation-id': 'workbench-command-bar-mobile-cellphone'
            },
            {
                key: 'tabletPreview',
                name: WorkbenchCommandBar_resx_1.default.Tablet,
                icon: 'Tablet',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Tablet,
                title: WorkbenchCommandBar_resx_1.default.TabletAltText,
                onClick: this.props.onClickTabletView,
                'data-automation-id': 'workbench-command-bar-mobile-tablet'
            },
            {
                key: 'preview',
                name: WorkbenchCommandBar_resx_1.default.Preview,
                icon: 'View',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Preview,
                title: WorkbenchCommandBar_resx_1.default.PreviewAltText,
                onClick: this.props.toggleEdit,
                'data-automation-id': 'workbench-command-bar-preview',
                'data-sp-a11y-id': 'previewButton'
            }
        ] : [
            {
                key: 'edit',
                name: WorkbenchCommandBar_resx_1.default.Edit,
                icon: 'Edit',
                ariaLabel: WorkbenchCommandBar_resx_1.default.Edit,
                title: WorkbenchCommandBar_resx_1.default.EditAltText,
                onClick: this.props.toggleEdit,
                'data-automation-id': 'workbench-command-bar-edit',
                'data-sp-a11y-id': 'editButton'
            }
        ];
        return (React.createElement(office_ui_fabric_react_1.CommandBar, { "aria-live": 'polite', isSearchBoxVisible: false, items: items, farItems: farItems, role: 'toolbar' }));
    };
    return WorkbenchCommandBar;
}(React.Component));
exports.default = WorkbenchCommandBar;


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_nCtJlVOXBHa59LgYtajnjA'];


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(94);
var styles = {
    workbench: 'workbench_fee8014b',
    header: 'header_fee8014b',
    headerMenu: 'headerMenu_fee8014b',
    headerTitle: 'headerTitle_fee8014b',
    headerPerson: 'headerPerson_fee8014b',
    pageContent: 'pageContent_fee8014b',
    commandBar: 'commandBar_fee8014b',
};
exports.default = styles;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var strings =  false
    ? require('../../resx-strings/en-us.json')
    : __webpack_require__(10);
exports.default = strings['_IusqdbcSoVYQiit3+QRSxw'];


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Keyboard = (function () {
    function Keyboard() {
    }
    Keyboard.isEscape = function (e) {
        return Keyboard.isKey(27, e);
    };
    Keyboard.isEnter = function (e) {
        return Keyboard.isKey(13, e);
    };
    Keyboard.isShiftTab = function (e) {
        return Keyboard.isKey(9, e, { shift: true });
    };
    Keyboard.isTab = function (e) {
        return Keyboard.isKey(9, e);
    };
    Keyboard.isKey = function (keyCode, event, allowedModifiers) {
        if (!(allowedModifiers && allowedModifiers.alt) !== !event.altKey) {
            return false;
        }
        if (!(allowedModifiers && allowedModifiers.ctrl) !== !event.ctrlKey) {
            return false;
        }
        if (!(allowedModifiers && allowedModifiers.shift) !== !event.shiftKey) {
            return false;
        }
        return event.keyCode === keyCode;
    };
    return Keyboard;
}());
exports.default = Keyboard;


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var A11yManager_1 = __webpack_require__(39);
var AccessibleRegion = (function (_super) {
    __extends(AccessibleRegion, _super);
    function AccessibleRegion(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.state = { loaded: false };
        return _this;
    }
    AccessibleRegion.prototype.getChildContext = function () {
        return {
            a11yManager: this._a11yManager
        };
    };
    AccessibleRegion.prototype.render = function () {
        var _this = this;
        return React.createElement("div", { ref: function (c) { return _this._mainDiv = c; } }, this.props.children);
    };
    AccessibleRegion.prototype.componentDidMount = function () {
        if (this._mainDiv && !this._a11yManager) {
            this._a11yManager = new A11yManager_1.default(this._mainDiv, this.props.name, this.props.config);
            this.setState({
                loaded: true
            });
        }
    };
    return AccessibleRegion;
}(React.Component));
AccessibleRegion.childContextTypes = {
    a11yManager: React.PropTypes.object
};
exports.default = AccessibleRegion;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var DragZoneControl_1 = __webpack_require__(42);
var lodash = __webpack_require__(11);
var DragZone = (function (_super) {
    __extends(DragZone, _super);
    function DragZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DragZone.prototype.componentDidMount = function () {
        this._dragZoneControlOptions =
            lodash.extend({ host: this._container }, this.props);
        this._dragZoneControl = new DragZoneControl_1.DragZoneControl(this._dragZoneControlOptions);
        if (this.props.isEnabled) {
            this._dragZoneControl.activate();
        }
    };
    DragZone.prototype.componentDidUpdate = function (prevProps) {
        if (this.props.supportHorizontalReorder !== prevProps.supportHorizontalReorder) {
            this._dragZoneControlOptions.supportHorizontalReorder = this.props.supportHorizontalReorder;
        }
        if (this.props.isEnabled !== prevProps.isEnabled) {
            if (this.props.isEnabled) {
                this._dragZoneControl.activate();
            }
            else {
                this._dragZoneControl.deactivate();
            }
        }
        else if (this.props.isEnabled) {
            this._dragZoneControl.refreshHandles();
        }
    };
    DragZone.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { ref: function (div1) { return _this._container = div1; } }, this.props.children));
    };
    return DragZone;
}(React.PureComponent));
DragZone.defaultProps = {
    treeLevelTagsBottomUp: [],
    isEnabled: false,
    dropPositionOffsetTopPx: 0,
    dropPositionOffsetBottomPx: 0,
    supportKeyboardAlternative: true
};
exports.DragZone = DragZone;


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_lodash_subset_1 = __webpack_require__(11);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var sp_a11y_1 = __webpack_require__(34);
var KeyCodes;
(function (KeyCodes) {
    KeyCodes[KeyCodes["Enter"] = 13] = "Enter";
    KeyCodes[KeyCodes["Escape"] = 27] = "Escape";
    KeyCodes[KeyCodes["Space"] = 32] = "Space";
    KeyCodes[KeyCodes["LeftArrow"] = 37] = "LeftArrow";
    KeyCodes[KeyCodes["UpArrow"] = 38] = "UpArrow";
    KeyCodes[KeyCodes["RightArrow"] = 39] = "RightArrow";
    KeyCodes[KeyCodes["DownArrow"] = 40] = "DownArrow";
})(KeyCodes || (KeyCodes = {}));
var DATA_DRAG_HANDLE = 'data-drag-handle';
var DRAG_ZONE = 'DragZone';
var DragZoneKeyboard = (function () {
    function DragZoneKeyboard(options) {
        var _this = this;
        options.strings = options.strings || {
            handleTitle: '',
            moveStarted: '',
            moveComplete: '',
            moveCancelled: '',
            moveNotAllowed: '',
            moveInsideLevel: []
        }; 
        this._options = options;
        var handles = options.handles;
        var host = options.host, strings = options.strings;
        if (handles) {
            handles.forEach(function (handle) {
                handle.addEventListener('keydown', _this._viewModeKeyDown);
                handle.title = strings.handleTitle;
            });
        }
        else {
            host.addEventListener('keydown', this._viewModeKeyDown);
            handles = [];
        }
    }
    DragZoneKeyboard.prototype.dispose = function () {
        var _this = this;
        var _a = this._options, handles = _a.handles, host = _a.host;
        if (handles) {
            handles.forEach(function (handle) {
                handle.removeEventListener('keydown', _this._viewModeKeyDown);
            });
        }
        else {
            host.removeEventListener('keydown', this._viewModeKeyDown);
        }
    };
    DragZoneKeyboard.prototype.addHandles = function (handles) {
        var _this = this;
        handles.forEach(function (handle) {
            handle.addEventListener('keydown', _this._viewModeKeyDown);
            handle.title = _this._options.strings.handleTitle;
            _this._options.handles.push(handle);
        });
    };
    DragZoneKeyboard.prototype._viewModeKeyDown = function (evt) {
        if (!this._isMoving && (evt.keyCode === KeyCodes.Enter || evt.keyCode === KeyCodes.Space)) {
            var _a = this._options, tree = _a.tree, host = _a.host, strings = _a.strings;
            this._isMoving = true;
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveStarted);
            host.addEventListener('keydown', this._moveModeKeyDown);
            this._draggedElement = tree.getLeafElementFromHandle(evt.target);
            this._draggedPosition = tree.getHoverOverItemPosition(this._draggedElement);
            this._treeMatrix = tree.refreshPositionMatrix();
            this._currentLocationIndex = tree.getIndexInPositionMatrix(this._draggedPosition);
            evt.stopPropagation();
            evt.preventDefault();
        }
    };
    DragZoneKeyboard.prototype._moveModeKeyDown = function (evt) {
        var _a = this._options, removeLine = _a.removeLine, host = _a.host, moveItem = _a.moveItem, strings = _a.strings, supportHorizontalReorder = _a.supportHorizontalReorder, tree = _a.tree;
        if (evt.keyCode === KeyCodes.Escape) {
            removeLine();
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveCancelled);
            this._isMoving = false;
            this._setFocusOnHandle(this._draggedElement);
            host.removeEventListener('keydown', this._moveModeKeyDown);
        }
        else if (evt.keyCode === KeyCodes.Enter) {
            removeLine();
            moveItem(this._draggedPosition, this._dropPosition);
            this._isMoving = false;
            var newDraggedElement = tree.getElementFromPosition(this._dropPosition, true);
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, odsp_utilities_bundle_1.StringHelper.format(strings.moveComplete, this._formatFullPosition(this._draggedPosition), this._formatFullPosition(this._dropPosition)));
            this._setFocusOnHandle(newDraggedElement);
            host.removeEventListener('keydown', this._moveModeKeyDown);
        }
        else if (evt.keyCode === KeyCodes.DownArrow ||
            supportHorizontalReorder && KeyCodes.RightArrow === office_ui_fabric_react_1.getRTLSafeKeyCode(evt.keyCode)) {
            this._moveForward();
        }
        else if (evt.keyCode === KeyCodes.UpArrow ||
            supportHorizontalReorder && KeyCodes.LeftArrow === office_ui_fabric_react_1.getRTLSafeKeyCode(evt.keyCode)) {
            this._moveBack();
        }
        evt.stopPropagation();
        evt.preventDefault();
    };
    DragZoneKeyboard.prototype._setFocusOnHandle = function (element) {
        var _a = this._options, handleTag = _a.handleTag, tree = _a.tree;
        var dragHandle = tree.getHandleFromLeafElement(element, handleTag);
        if (dragHandle) {
            var tabIndex = dragHandle.getAttribute('tabindex');
            if (tabIndex !== '0') {
                dragHandle.setAttribute('tabindex', '0');
                dragHandle.focus();
                if (!isNaN(+tabIndex)) {
                    dragHandle.setAttribute('tabindex', tabIndex);
                }
            }
            else {
                dragHandle.focus();
            }
        }
    };
    DragZoneKeyboard.prototype._moveForward = function () {
        var _a = this._options, tree = _a.tree, moveLine = _a.moveLine, strings = _a.strings, scrollIntoView = _a.scrollIntoView;
        if (this._currentLocationIndex < this._treeMatrix.length - 1) {
            var newIndex = this._currentLocationIndex + 1;
            var newTentativeElement = tree.getElementFromPosition(this._treeMatrix[newIndex]);
            this._dropPosition = sp_lodash_subset_1.clone(this._treeMatrix[newIndex]);
            var line = void 0;
            if (!tree.isLeafElement(newTentativeElement)) {
                this._dropPosition[0]++;
                line = moveLine(newTentativeElement, false, false, true);
                this._currentLocationIndex++;
                sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
            }
            else {
                if (this._indexNotChanged) {
                    this._indexNotChanged = false;
                    this._dropPosition[0]++;
                    line = moveLine(newTentativeElement, true, false, true);
                    this._currentLocationIndex++;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
                else if (this._upperLevelChange(this._treeMatrix[this._currentLocationIndex], this._treeMatrix[newIndex])) {
                    line = moveLine(newTentativeElement, true, true, true);
                    this._indexNotChanged = true;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
                }
                else {
                    this._dropPosition[0]++;
                    line = moveLine(newTentativeElement, true, false, true);
                    this._currentLocationIndex++;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
                scrollIntoView('partial', line, 500, 0);
            }
        }
        else {
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveNotAllowed);
        }
    };
    DragZoneKeyboard.prototype._moveBack = function () {
        var _a = this._options, tree = _a.tree, moveLine = _a.moveLine, strings = _a.strings, scrollIntoView = _a.scrollIntoView;
        if (this._currentLocationIndex > 0) {
            var newIndex = this._currentLocationIndex - 1;
            var newTentativeElement = tree.getElementFromPosition(this._treeMatrix[newIndex]);
            this._dropPosition = sp_lodash_subset_1.clone(this._treeMatrix[newIndex]);
            var line = void 0;
            if (!tree.isLeafElement(newTentativeElement)) {
                this._dropPosition[0]++;
                line = moveLine(newTentativeElement, false, false, true);
                this._currentLocationIndex--;
                sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
            }
            else {
                if (this._indexNotChanged) {
                    this._indexNotChanged = false;
                    line = moveLine(newTentativeElement, true, true, true);
                    this._currentLocationIndex--;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
                else if (this._upperLevelChange(this._treeMatrix[this._currentLocationIndex], this._treeMatrix[newIndex])) {
                    this._dropPosition[0]++;
                    line = moveLine(newTentativeElement, true, false, true);
                    this._indexNotChanged = true;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatFullPosition(this._dropPosition));
                }
                else {
                    line = moveLine(newTentativeElement, true, true, true);
                    this._currentLocationIndex--;
                    sp_a11y_1.ScreenReader.alert(DRAG_ZONE, this._formatPosition(this._dropPosition));
                }
            }
            scrollIntoView('partial', line, 500, 0, true);
        }
        else {
            sp_a11y_1.ScreenReader.alert(DRAG_ZONE, strings.moveNotAllowed);
        }
    };
    DragZoneKeyboard.prototype._upperLevelChange = function (oldPosition, newPosition) {
        if (oldPosition.length !== newPosition.length || oldPosition.length < 2 || newPosition.length < 2) {
            return false;
        }
        for (var i = 1; i < oldPosition.length; i++) {
            if (oldPosition[i] !== newPosition[i]) {
                return true;
            }
        }
        return false;
    };
    DragZoneKeyboard.prototype._formatFullPosition = function (position) {
        var moveInsideLevel = this._options.strings.moveInsideLevel;
        if (moveInsideLevel.length === 0 || position.length === 0) {
            return;
        }
        return odsp_utilities_bundle_1.StringHelper.format.apply(odsp_utilities_bundle_1.StringHelper, [moveInsideLevel[moveInsideLevel.length - 1]].concat(position.reverse().map(function (val) {
            return val + 1;
        })));
    };
    DragZoneKeyboard.prototype._formatPosition = function (position) {
        var moveInsideLevel = this._options.strings.moveInsideLevel;
        if (moveInsideLevel.length === 0 || position.length === 0) {
            return;
        }
        return odsp_utilities_bundle_1.StringHelper.format(moveInsideLevel[0], position[0]);
    };
    return DragZoneKeyboard;
}());
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneKeyboard.prototype, "_viewModeKeyDown", null);
__decorate([
    office_ui_fabric_react_1.autobind
], DragZoneKeyboard.prototype, "_moveModeKeyDown", null);
exports.default = DragZoneKeyboard;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DragZoneUtilities_1 = __webpack_require__(43);
var sp_lodash_subset_1 = __webpack_require__(11);
var DATA_ATTRIBUTE = 'data-drag-tag';
var DATA_DISALLOWED_AREA_ATTRIBUTE = 'data-drag-disallowedArea-tag';
var DATA_DISALLOWED_ATTRIBUTE = 'data-drag-disallowed-tag';
var DATA_DRAG_HANDLE = 'data-drag-handle';
var DragZoneTree = (function () {
    function DragZoneTree(treeLevelTagsBottomUp, host) {
        this._bottomElements = new Map();
        this._positionMatrix = [];
        this._treeLevelTagsBottomUp = treeLevelTagsBottomUp;
        this._treeDepth = treeLevelTagsBottomUp.length;
        this._host = host;
        this._currentPosition = { x: undefined, y: undefined };
        this._startPosition = { x: undefined, y: undefined };
    }
    Object.defineProperty(DragZoneTree.prototype, "currentPosition", {
        get: function () {
            return this._currentPosition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneTree.prototype, "startPosition", {
        get: function () {
            return this._startPosition;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneTree.prototype, "depth", {
        get: function () {
            return this._treeDepth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragZoneTree.prototype, "getDraggedItem", {
        get: function () {
            return this._getLeafElementFromMousePosition(this._startPosition.x, this._startPosition.y);
        },
        enumerable: true,
        configurable: true
    });
    DragZoneTree.prototype.getHoverOverItemPosition = function (el) {
        var element = el ||
            this.getBottomMostElementFromMousePosition();
        if (element) {
            return this._getElementPosition(element);
        }
        else {
            return undefined;
        }
    };
    DragZoneTree.prototype.getDraggedItemPosition = function () {
        var draggedElement = this._getLeafElementFromMousePosition(this._startPosition.x, this._startPosition.y);
        if (draggedElement) {
            return this._getElementPosition(draggedElement);
        }
        else {
            return undefined;
        }
    };
    DragZoneTree.prototype.getLeafElementFromMousePosition = function () {
        return this._getLeafElementFromMousePosition(this._currentPosition.x, this._currentPosition.y);
    };
    DragZoneTree.prototype.isDragAllowed = function (draggedItem, dragOverElement, dataDragDisallowed) {
        var hoverOverItemWithDisallowedTag = this.getElementWithDataDisallowedAreaTag(dragOverElement, dataDragDisallowed);
        if (!draggedItem ||
            (hoverOverItemWithDisallowedTag &&
                DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(draggedItem, DATA_DISALLOWED_ATTRIBUTE, dataDragDisallowed))) {
            return false;
        }
        return true;
    };
    DragZoneTree.prototype.getBottomMostElementFromMousePosition = function (draggedItem, dataDragDisallowed) {
        var _this = this;
        var parents = [];
        var elem = document.elementFromPoint(this._currentPosition.x, this._currentPosition.y);
        if (!elem || (draggedItem && !this.isDragAllowed(draggedItem, elem, dataDragDisallowed))) {
            return undefined;
        }
        do {
            parents.push(elem);
            elem = elem.parentElement;
        } while (elem && elem !== this._host);
        var _loop_1 = function (i) {
            var candidates = parents.filter(function (element) {
                return DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(element, DATA_ATTRIBUTE, _this._treeLevelTagsBottomUp[i]);
            });
            if (candidates && candidates.length > 0) {
                var lastLeaf = this_1._getLastLeaf(candidates[0]);
                if (lastLeaf) {
                    var rect = lastLeaf.getBoundingClientRect();
                    if (rect.bottom < this_1._currentPosition.y) {
                        return { value: lastLeaf };
                    }
                    return { value: undefined };
                }
                return { value: candidates[0] };
            }
        };
        var this_1 = this;
        for (var i = 0; i < this._treeDepth; i++) {
            var state_1 = _loop_1(i);
            if (typeof state_1 === "object")
                return state_1.value;
        }
        return undefined;
    };
    DragZoneTree.prototype.isLeafElement = function (element) {
        return DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(element, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0]);
    };
    DragZoneTree.prototype.addDisallowedStyles = function (dataDragDisallowed, dataDragDisallowedCss) {
        var draggedItem = this._getLeafElementFromMousePosition(this._startPosition.x, this._startPosition.y);
        if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(draggedItem, DATA_DISALLOWED_ATTRIBUTE, dataDragDisallowed)) {
            this.applyRemoveCssToDataDragDisallowed(dataDragDisallowed, true, dataDragDisallowedCss);
        }
    };
    DragZoneTree.prototype.applyRemoveCssToDataDragDisallowed = function (dataDragDisallowedTag, apply, cssClass) {
        var elements = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(this._host, DATA_DISALLOWED_AREA_ATTRIBUTE, dataDragDisallowedTag);
        for (var i = 0; i < elements.length; i++) {
            if (apply) {
                elements[i].classList.add(cssClass);
            }
            else {
                elements[i].classList.remove(cssClass);
            }
        }
    };
    DragZoneTree.prototype.getElementWithDataDisallowedAreaTag = function (elem, value) {
        var tempElement = elem;
        var thisLevelElement = tempElement;
        while (tempElement && tempElement !== this._host) {
            if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(tempElement, DATA_DISALLOWED_AREA_ATTRIBUTE, value)) {
                return tempElement;
            }
            tempElement = tempElement.parentElement;
        }
        return undefined;
    };
    DragZoneTree.prototype.getIndexInPositionMatrix = function (position) {
        for (var i = 0; i < this._positionMatrix.length; i++) {
            var equals = true;
            for (var j = 0; j < position.length; j++) {
                if (position[j] !== this._positionMatrix[i][j]) {
                    equals = false;
                    break;
                }
            }
            if (equals) {
                return i;
            }
        }
        return -1;
    };
    DragZoneTree.prototype.getElementFromPosition = function (position, refreshMatrix) {
        if (refreshMatrix || this._bottomElements.size === 0) {
            this.refreshPositionMatrix();
        }
        var index = this.getIndexInPositionMatrix(position);
        if (index > -1 && index < this._bottomElements.size) {
            return this._bottomElements.get(index);
        }
        else {
            return undefined;
        }
    };
    DragZoneTree.prototype.getLeafElementFromHandle = function (handle) {
        var element = handle;
        while (element && element !== this._host) {
            if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(element, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0])) {
                return element;
            }
            element = element.parentElement;
        }
        return undefined;
    };
    DragZoneTree.prototype.getHandleFromLeafElement = function (draggedElement, value) {
        var dragHandles = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(draggedElement, DATA_DRAG_HANDLE, value);
        return dragHandles && dragHandles[0];
    };
    DragZoneTree.prototype.refreshPositionMatrix = function () {
        var currentPosition = [];
        this._positionMatrix = [];
        this._bottomElements = new Map();
        this._traverse(this._host, this._treeDepth - 1, currentPosition);
        this._fixMatrix(this._positionMatrix);
        return this._positionMatrix;
    };
    DragZoneTree.prototype._traverse = function (parent, tagLevel, currentPosition) {
        var children = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(parent, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[tagLevel]);
        if (children.length === 0 || tagLevel < 0) {
            this._positionMatrix.push(sp_lodash_subset_1.clone(currentPosition));
            this._bottomElements.set(this._positionMatrix.length - 1, parent);
            return;
        }
        for (var i = 0; i < children.length; i++) {
            currentPosition.push(i);
            this._traverse(children[i], tagLevel - 1, currentPosition);
            currentPosition.pop();
        }
    };
    DragZoneTree.prototype._fixMatrix = function (positionMatrix) {
        for (var i = 0; i < positionMatrix.length; i++) {
            for (var j = 0; j < this._treeDepth; j++) {
                if (positionMatrix[i].length <= j) {
                    positionMatrix[i].push(-1);
                }
            }
            positionMatrix[i] = positionMatrix[i].reverse();
        }
    };
    DragZoneTree.prototype._getElementPosition = function (element) {
        var treeIndeces = [];
        var tempElement = element;
        var tagLevel = this._getElementTagLevel(tempElement);
        for (var i = 0; i < this._treeDepth - 1; i++) {
            if (i < tagLevel) {
                treeIndeces[i] = 0;
                continue;
            }
            var thisLevelElement = tempElement;
            while (tempElement.parentElement && tempElement !== this._host) {
                tempElement = tempElement.parentElement;
                if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(tempElement, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[i + 1])) {
                    break;
                }
            }
            var siblings = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(tempElement, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[i]);
            treeIndeces[i] = siblings.indexOf(thisLevelElement);
            if (tempElement === this._host) {
                break;
            }
        }
        if (tempElement !== this._host) {
            var tagListLastIndex = this._treeDepth - 1;
            var siblings = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(this._host, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[tagListLastIndex]);
            treeIndeces[tagListLastIndex] = siblings.indexOf(tempElement);
        }
        return treeIndeces;
    };
    DragZoneTree.prototype._getElementTagLevel = function (element) {
        var tag = element.getAttribute(DATA_ATTRIBUTE);
        if (!tag) {
            return undefined;
        }
        return this._treeLevelTagsBottomUp.indexOf(tag);
    };
    DragZoneTree.prototype._getLeafElementFromMousePosition = function (x, y) {
        var elem = document.elementFromPoint(x, y);
        while (elem.parentElement && elem.parentElement !== this._host) {
            if (DragZoneUtilities_1.DragZoneUtilities.hasAttributeValue(elem, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0])) {
                return elem;
            }
            elem = elem.parentElement;
        }
        return undefined;
    };
    DragZoneTree.prototype._getLastLeaf = function (element) {
        var leaves = DragZoneUtilities_1.DragZoneUtilities.getElementsWithAttribute(element, DATA_ATTRIBUTE, this._treeLevelTagsBottomUp[0]);
        if (leaves.length === 0) {
            return undefined;
        }
        else {
            return leaves[leaves.length - 1];
        }
    };
    return DragZoneTree;
}());
exports.DragZoneTree = DragZoneTree;


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DragZone_1 = __webpack_require__(190);
exports.DragZone = DragZone_1.DragZone;
var DragZoneControl_1 = __webpack_require__(42);
exports.DragZoneControl = DragZoneControl_1.DragZoneControl;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(13);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(4);
var sp_telemetry_1 = __webpack_require__(5);
var CanvasControlFactory_1 = __webpack_require__(46);
var CanvasStore_1 = __webpack_require__(9);
var ControlZone_1 = __webpack_require__(54);
var CanvasA11y_1 = __webpack_require__(14);
var CanvasToolboxHint_1 = __webpack_require__(52);
var ConfirmationDialog_1 = __webpack_require__(205);
var CanvasLayout_1 = __webpack_require__(16);
var CreateEmptyZoneLayout_1 = __webpack_require__(25);
var ICanvasZone_1 = __webpack_require__(53);
var CanvasZone_1 = __webpack_require__(200);
var Toolbar_1 = __webpack_require__(26);
var Toolbox_1 = __webpack_require__(58);
var CanvasDragZone_1 = __webpack_require__(15);
var CanvasStrings_resx_1 = __webpack_require__(8);
var CanvasComponent = (function (_super) {
    __extends(CanvasComponent, _super);
    function CanvasComponent(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._zonesMap = new Map();
        _this._handleScroll = _this._async.debounce(_this._handleScroll, 50);
        return _this;
    }
    CanvasComponent.prototype.getChildContext = function () {
        return {
            store: this.props.store
        };
    };
    CanvasComponent.prototype.componentDidMount = function () {
        sp_telemetry_1._TraceLogger.logVerbose(CanvasComponent._logSource, "CanvasComponent is mounted");
        var canvasElement = ReactDOM.findDOMNode(this);
        this.props.store.canvasElement = canvasElement;
        this.props.store.a11yManager = new CanvasA11y_1.CanvasA11yManager(canvasElement);
        var canvasContainer = canvasElement;
        var hasScrollbar = false;
        do {
            canvasContainer = canvasContainer.parentElement;
            if (canvasContainer) {
                var overflowY = window.getComputedStyle(canvasContainer)['overflow-y'];
                hasScrollbar = (overflowY === 'scroll' || overflowY === 'auto');
            }
        } while (!hasScrollbar && canvasContainer && canvasContainer.tagName !== 'BODY');
        this.props.store.scrollableParent = canvasContainer;
        if (this.props.store.displayMode === sp_core_library_1.DisplayMode.Edit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.addEventListener('scroll', this._handleScroll);
        }
    };
    CanvasComponent.prototype.componentWillUnmount = function () {
        if (this.props.store.displayMode === sp_core_library_1.DisplayMode.Edit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
    };
    CanvasComponent.prototype.componentDidUpdate = function () {
        if (this.props.store.displayMode === sp_core_library_1.DisplayMode.Edit && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.addEventListener('scroll', this._handleScroll);
        }
        else if (this.props.store.displayMode === sp_core_library_1.DisplayMode.Read && this.props.store.scrollableParent) {
            this.props.store.scrollableParent.removeEventListener('scroll', this._handleScroll);
        }
    };
    CanvasComponent.prototype.render = function () {
        return CanvasStore_1.default.isLayoutSupported ? this._renderWithLayout() : this._renderWithoutLayout();
    };
    CanvasComponent.prototype._handleScroll = function () {
        this._zonesMap.forEach(function (zoneControl, key) {
            if (zoneControl) {
                zoneControl.handleScroll();
            }
        });
    };
    CanvasComponent.prototype._renderWithLayout = function () {
        var _this = this;
        sp_telemetry_1._TraceLogger.logVerbose(CanvasComponent._logSource, "CanvasComponent _renderWithLayout() is called");
        var store = this.props.store;
        var displayMode = store.displayMode;
        var toolboxProps = store.toolboxProps;
        var deletedControlLayout = store.deletedControlLayout;
        var canvasLayout = store.canvasLayout;
        var selectedLayout = canvasLayout.fetchCurrentSelection();
        var shouldCenterAlign = store.shouldCenterAlign;
        var zoneComponents = [];
        var zones = canvasLayout.zones;
        var numZones = zones.length;
        zones.forEach(function (curZone, curIdx) {
            zoneComponents.push(React.createElement(CanvasZone_1.default, { ref: function (zoneControl) {
                    if (zoneControl) {
                        _this._zonesMap.set(curZone.elementKey, zoneControl);
                    }
                    else {
                        _this._zonesMap.delete(curZone.elementKey);
                    }
                }, fullWidth: _this._isFullWidthSectionEnabled(curZone), selectedPosition: selectedLayout, key: curZone.elementKey, zone: curZone, shouldCenterAlign: shouldCenterAlign }));
            var nextZoneIndex = (curIdx + 1 === numZones) ?
                curZone.index + 1 :
                zones[curIdx + 1].index;
            var nextZoneLayout = CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(nextZoneIndex);
            var zoneBeforeState = _this._getZoneSelectionState(selectedLayout, zones[curIdx].index);
            var zoneAfterState = curIdx < zones.length - 1 &&
                _this._getZoneSelectionState(selectedLayout, zones[curIdx + 1].index);
            var adjacentZoneState = zoneBeforeState > zoneAfterState ?
                zoneBeforeState : zoneAfterState;
            zoneComponents.push(React.createElement(CanvasToolboxHint_1.default, { ariaLabel: CanvasStrings_resx_1.default.ToolboxHintSectionTitle, isVisible: true, shouldFocus: deletedControlLayout.zoneIndex === nextZoneIndex, row: undefined, layout: nextZoneLayout, adjacentZoneState: adjacentZoneState, key: "hint." + nextZoneLayout.zoneIndex, shouldCenterAlign: shouldCenterAlign }));
        });
        store.deletedControlLayout = CanvasLayout_1.default.undefinedControlPosition;
        var className = office_ui_fabric_react_1.css('Canvas', 'ms-Grid', {
            'Canvas--withLayout': CanvasStore_1.default.isPolarisMultiColumnEditEnabled,
            'Canvas--edit': displayMode === sp_core_library_1.DisplayMode.Edit
        });
        var firstZoneIdx = zones.length > 0 ?
            zones[0].index :
            CanvasLayout_1.default.firstLayoutIndex;
        var firstZoneLayout = CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(firstZoneIdx);
        var toolBoxHintHasFocus = deletedControlLayout.zoneIndex === firstZoneLayout.zoneIndex;
        var canvasContent = (React.createElement("div", { className: className, role: displayMode === sp_core_library_1.DisplayMode.Edit ? 'application' : undefined },
            React.createElement(CanvasToolboxHint_1.default, { ariaLabel: CanvasStrings_resx_1.default.ToolboxHintSectionTitle, isVisible: true, adjacentZoneState: zones.length > 0 ?
                    this._getZoneSelectionState(selectedLayout, zones[0].index) :
                    ICanvasZone_1.CanvasZoneSelectionState.None, shouldFocus: toolBoxHintHasFocus, row: undefined, layout: firstZoneLayout, shouldCenterAlign: shouldCenterAlign }),
            zoneComponents,
            React.createElement(Toolbox_1.default, __assign({}, toolboxProps)),
            React.createElement(ConfirmationDialog_1.default, __assign({}, store.confirmationDialogProps))));
        return (React.createElement("div", { className: 'CanvasComponent' },
            displayMode === sp_core_library_1.DisplayMode.Edit && CanvasStore_1.default.isPolarisMultiColumnEditEnabled ?
                React.createElement("div", { className: 'CanvasSectionBarBg' }) : undefined,
            CanvasStore_1.default.isReorderingSupported ?
                React.createElement(CanvasDragZone_1.default, { store: store, isEnabled: displayMode === sp_core_library_1.DisplayMode.Edit }, canvasContent) :
                canvasContent));
    };
    CanvasComponent.prototype._isFullWidthSectionEnabled = function (zone) {
        return zone.sections[0] &&
            zone.sections[0].factor === 0 &&
            this.props.store.siteSupportsFullWidth;
    };
    CanvasComponent.prototype._renderWithoutLayout = function () {
        sp_telemetry_1._TraceLogger.logVerbose(CanvasComponent._logSource, "CanvasComponent _renderWithoutLayout() is called");
        var store = this.props.store;
        var controlsProps = store.controlsProps;
        var deletedRow = store.deletedRow;
        var displayMode = store.displayMode;
        var toolboxProps = store.toolboxProps;
        var shouldCenterAlign = store.shouldCenterAlign;
        var rows = [];
        var row = 0;
        if (controlsProps) {
            for (var _i = 0, controlsProps_1 = controlsProps; _i < controlsProps_1.length; _i++) {
                var control = controlsProps_1[_i];
                var newControl = CanvasControlFactory_1.default.CreateCanvasControl(control, store);
                if (newControl) {
                    var isSelected = store.selectedControlId === control.id;
                    if (isSelected && row) {
                        rows.pop();
                        rows.push(React.createElement(CanvasToolboxHint_1.default, { ariaLabel: CanvasStrings_resx_1.default.ToolboxHintTitle, isVisible: true, key: row, row: row, shouldCenterAlign: shouldCenterAlign }));
                    }
                    rows.push(React.createElement(ControlZone_1.default, { displayMode: displayMode, id: control.id, isSelected: isSelected, key: control.id, row: row },
                        newControl,
                        React.createElement(Toolbar_1.default, { controlType: control.controlType, displayMode: displayMode, id: control.id, row: row, onConfigureButtonClick: store.handleConfigureButtonClicked, onDeleteButtonClick: store.handleDeleteControlButtonClicked })));
                    ++row;
                    rows.push(React.createElement(CanvasToolboxHint_1.default, { ariaLabel: CanvasStrings_resx_1.default.ToolboxHintTitle, isVisible: toolboxProps.row === row, shouldFocus: deletedRow === row, key: row, row: row, shouldCenterAlign: shouldCenterAlign }));
                }
            }
        }
        store.deletedRow = undefined;
        var className = office_ui_fabric_react_1.css('Canvas', {
            'Canvas--edit': displayMode === sp_core_library_1.DisplayMode.Edit
        });
        return (React.createElement("div", { className: className, role: displayMode === sp_core_library_1.DisplayMode.Edit ? 'application' : undefined },
            React.createElement(CanvasToolboxHint_1.default, { ariaLabel: CanvasStrings_resx_1.default.ToolboxHintTitle, shouldFocus: deletedRow === 0, isVisible: rows[0] && rows[0].props.isSelected || toolboxProps.row === 0, row: 0, shouldCenterAlign: shouldCenterAlign }),
            rows,
            React.createElement(Toolbox_1.default, __assign({}, toolboxProps)),
            React.createElement(ConfirmationDialog_1.default, __assign({}, store.confirmationDialogProps))));
    };
    CanvasComponent.prototype._getZoneSelectionState = function (selectedLayout, zoneIndex) {
        if (!selectedLayout) {
            return ICanvasZone_1.CanvasZoneSelectionState.None;
        }
        var isZoneSelected = selectedLayout.zoneIndex === zoneIndex;
        var isZoneActive = (!!selectedLayout.controlIndex || this.props.store.toolboxProps.isOpen) &&
            isZoneSelected;
        if (isZoneActive) {
            return ICanvasZone_1.CanvasZoneSelectionState.Active;
        }
        if (isZoneSelected) {
            return ICanvasZone_1.CanvasZoneSelectionState.Selected;
        }
        return ICanvasZone_1.CanvasZoneSelectionState.None;
    };
    return CanvasComponent;
}(office_ui_fabric_react_1.BaseComponent));
CanvasComponent.childContextTypes = {
    store: React.PropTypes.object.isRequired
};
CanvasComponent._logSource = sp_telemetry_1._LogSource.create('CanvasComponent');
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasComponent.prototype, "_handleScroll", null);
exports.default = CanvasComponent;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CanvasControlType_1 = __webpack_require__(6);
var CanvasDragZone_module_scss_1 = __webpack_require__(47);
var CanvasStrings_resx_1 = __webpack_require__(8);
var CanvasDragIcon = (function () {
    function CanvasDragIcon() {
        this._icon = this._getDefaultIcon();
    }
    CanvasDragIcon._extractLabelFromRTE = function (control) {
        var domParser = new DOMParser();
        var docToParse = domParser.parseFromString(control.innerHTML || '', 'text/html');
        var element = docToParse.firstElementChild && docToParse.firstElementChild;
        return (element && element.innerText) || CanvasStrings_resx_1.default.DragIconFallbackRTEText;
    };
    CanvasDragIcon._getIconStyle = function (iconName) {
        return "ms-Icon " + iconName;
    };
    Object.defineProperty(CanvasDragIcon.prototype, "HTMLIcon", {
        get: function () {
            return this._icon;
        },
        enumerable: true,
        configurable: true
    });
    CanvasDragIcon.prototype.setMoveIconBasedOnControl = function (control) {
        if (!control) {
            return;
        }
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        if (control.controlType === CanvasControlType_1.default.RTE) {
            iconControl.className = CanvasDragIcon._getIconStyle('ms-Icon--Font');
            textControl.innerText = CanvasDragIcon._extractLabelFromRTE(control);
        }
        else if (control.controlType === CanvasControlType_1.default.WebPartZone) {
            var webPart = control;
            if (webPart && webPart.webPartManifest && webPart.webPartManifest.preconfiguredEntries &&
                webPart.webPartManifest.preconfiguredEntries.length > 0) {
                var entry = webPart.webPartManifest.preconfiguredEntries[0]; 
                iconControl.className = CanvasDragIcon._getIconStyle("ms-Icon--" + entry.officeFabricIconFontName);
            }
            textControl.innerText = webPart && webPart.webPartData && webPart.webPartData.title;
        }
    };
    CanvasDragIcon.prototype.setMoveIconBasedOnZone = function (zone) {
        if (!zone) {
            return;
        }
        var iconControl = this._getTagByInternalId(CanvasDragIcon.ICON_INTERNAL_ID);
        var textControl = this._getTagByInternalId(CanvasDragIcon.TEXT_INTERNAL_ID);
        if (!iconControl || !textControl) {
            return;
        }
        iconControl.className = CanvasDragIcon._getIconStyle('ms-Icon--Edit');
        var text;
        switch (zone.layoutType) {
            case CanvasControlType_1.default.FullWidth:
                text = CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle(CanvasDragZone_module_scss_1.default.singleColumn);
                break;
            case CanvasControlType_1.default.OneColumn:
                text = CanvasStrings_resx_1.default.ToolboxOneColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle(CanvasDragZone_module_scss_1.default.singleColumn);
                break;
            case CanvasControlType_1.default.OneThirdColumnLeft:
                text = CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle(CanvasDragZone_module_scss_1.default.columnRightTwoThirds);
                break;
            case CanvasControlType_1.default.OneThirdColumnRight:
                text = CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle(CanvasDragZone_module_scss_1.default.columnLeftTwoThirds);
                break;
            case CanvasControlType_1.default.ThreeColumns:
                text = CanvasStrings_resx_1.default.ToolboxThreeColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle(CanvasDragZone_module_scss_1.default.tripleColumn);
                break;
            case CanvasControlType_1.default.TwoColumns:
                text = CanvasStrings_resx_1.default.ToolboxTwoColumnPart;
                iconControl.className = CanvasDragIcon._getIconStyle(CanvasDragZone_module_scss_1.default.doubleColumn);
                break;
            default:
                if (true) {
                    throw new Error('A new layout has been added, need to add drag icon string');
                }
        }
        textControl.innerText = text;
    };
    CanvasDragIcon.prototype._getDefaultIcon = function () {
        var dragIcon = document.createElement('div');
        dragIcon.className = CanvasDragZone_module_scss_1.default.dragIconContainer;
        var iconContainer = document.createElement('div');
        iconContainer.className = CanvasDragZone_module_scss_1.default.dragIcon;
        var iconElement = document.createElement('i');
        iconElement.setAttribute(CanvasDragIcon.DATA_INTERNAL_ID, CanvasDragIcon.ICON_INTERNAL_ID);
        iconContainer.appendChild(iconElement);
        var textContainer = document.createElement('div');
        textContainer.className = CanvasDragZone_module_scss_1.default.dragText;
        textContainer.classList.add('ms-fontSize-m');
        textContainer.setAttribute(CanvasDragIcon.DATA_INTERNAL_ID, CanvasDragIcon.TEXT_INTERNAL_ID);
        dragIcon.appendChild(iconContainer);
        dragIcon.appendChild(textContainer);
        document.body.appendChild(dragIcon);
        return dragIcon;
    };
    CanvasDragIcon.prototype._getTagByInternalId = function (internalId) {
        return this._icon.querySelector("[" + CanvasDragIcon.DATA_INTERNAL_ID + "='" + internalId + "']");
    };
    return CanvasDragIcon;
}());
CanvasDragIcon.ICON_INTERNAL_ID = 'iconControl';
CanvasDragIcon.TEXT_INTERNAL_ID = 'textControl';
CanvasDragIcon.DATA_INTERNAL_ID = 'data-internal-id';
exports.default = CanvasDragIcon;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_webpart_base_1 = __webpack_require__(17);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasStore_1 = __webpack_require__(9);
var CanvasStrings_resx_1 = __webpack_require__(8);
var CanvasZonePropertyPaneControl = (function (_super) {
    __extends(CanvasZonePropertyPaneControl, _super);
    function CanvasZonePropertyPaneControl(zone, render) {
        var _this = _super.call(this) || this;
        _this._zone = zone;
        _this._render = render;
        return _this;
    }
    CanvasZonePropertyPaneControl._getImageSource = function (controlType) {
        var leafName;
        switch (controlType) {
            case CanvasControlType_1.default.TwoColumns:
                leafName = 'two_column.png';
                break;
            case CanvasControlType_1.default.ThreeColumns:
                leafName = 'three_column.png';
                break;
            case CanvasControlType_1.default.OneThirdColumnLeft:
                leafName = office_ui_fabric_react_1.getRTL() ? 'onethird_column_right.png' : 'onethird_column_left.png';
                break;
            case CanvasControlType_1.default.OneThirdColumnRight:
                leafName = office_ui_fabric_react_1.getRTL() ? 'onethird_column_left.png' : 'onethird_column_right.png';
                break;
            default:
                leafName = 'one_column.png';
                break;
        }
        return __webpack_require__(248)("./" + leafName);
    };
    CanvasZonePropertyPaneControl.prototype._internalGetPropertyPaneData = function () {
        return {
            webPartId: this._zone.index.toString(),
            title: CanvasStrings_resx_1.default.SectionPropertyPaneTitle,
            configuration: {
                pages: this._getProperyPanePages()
            },
            onPropertyPaneFieldChanged: undefined,
            onConfigurationEvent: undefined,
            onRendered: undefined,
            properties: {},
            isReactive: true
        };
    };
    CanvasZonePropertyPaneControl.prototype._internalDispose = function () {
        this._zone.dispose();
    };
    CanvasZonePropertyPaneControl.prototype._internalOnPropertyPaneFieldChanged = function (propertyPath, newValue) {
        this._zone.changeZone(newValue);
        this._render();
    };
    CanvasZonePropertyPaneControl.prototype._getProperyPanePages = function () {
        if (!CanvasStore_1.default.isPolarisMultiColumnEditEnabled) {
            return undefined;
        }
        var currentColumnSize = this._zone.layoutType;
        var imageSize = { width: 40, height: 28 };
        var oneColumnSource = CanvasZonePropertyPaneControl._getImageSource(CanvasControlType_1.default.OneColumn);
        var twoColumnSource = CanvasZonePropertyPaneControl._getImageSource(CanvasControlType_1.default.TwoColumns);
        var threeColumnSource = CanvasZonePropertyPaneControl._getImageSource(CanvasControlType_1.default.ThreeColumns);
        var oneThirdColumnSource = CanvasZonePropertyPaneControl._getImageSource(CanvasControlType_1.default.OneThirdColumnLeft);
        var twoThirdColumnSource = CanvasZonePropertyPaneControl._getImageSource(CanvasControlType_1.default.OneThirdColumnRight);
        return [{
                groups: [
                    {
                        groupName: CanvasStrings_resx_1.default.SectionPropertyPaneColumnGroupName,
                        groupFields: [
                            sp_webpart_base_1.PropertyPaneChoiceGroup('selectedLayout', {
                                options: [
                                    {
                                        key: CanvasControlType_1.default.OneColumn,
                                        checked: CanvasControlType_1.default.OneColumn === currentColumnSize,
                                        imageSrc: oneColumnSource,
                                        selectedImageSrc: oneColumnSource,
                                        imageSize: imageSize,
                                        text: CanvasStrings_resx_1.default.ToolboxOneColumnPart
                                    },
                                    {
                                        key: CanvasControlType_1.default.TwoColumns,
                                        checked: CanvasControlType_1.default.TwoColumns === currentColumnSize,
                                        imageSrc: twoColumnSource,
                                        selectedImageSrc: twoColumnSource,
                                        imageSize: { width: 42, height: 28 },
                                        text: CanvasStrings_resx_1.default.ToolboxTwoColumnPart
                                    },
                                    {
                                        key: CanvasControlType_1.default.ThreeColumns,
                                        checked: CanvasControlType_1.default.ThreeColumns === currentColumnSize,
                                        imageSrc: threeColumnSource,
                                        selectedImageSrc: threeColumnSource,
                                        imageSize: imageSize,
                                        text: CanvasStrings_resx_1.default.ToolboxThreeColumnPart
                                    },
                                    {
                                        key: CanvasControlType_1.default.OneThirdColumnLeft,
                                        checked: CanvasControlType_1.default.OneThirdColumnLeft === currentColumnSize,
                                        imageSrc: oneThirdColumnSource,
                                        selectedImageSrc: oneThirdColumnSource,
                                        imageSize: imageSize,
                                        text: CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart
                                    },
                                    {
                                        key: CanvasControlType_1.default.OneThirdColumnRight,
                                        checked: CanvasControlType_1.default.OneThirdColumnRight === currentColumnSize,
                                        imageSrc: twoThirdColumnSource,
                                        selectedImageSrc: twoThirdColumnSource,
                                        imageSize: imageSize,
                                        text: CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart
                                    }
                                ]
                            })
                        ]
                    }
                ]
            }];
    };
    return CanvasZonePropertyPaneControl;
}(sp_webpart_base_1.BasePropertyPaneControl));
exports.default = CanvasZonePropertyPaneControl;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(99);


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(100);


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_webpart_base_1 = __webpack_require__(17);
var CanvasWebPartHost = (function () {
    function CanvasWebPartHost(serviceScope, handleResize, handleCanvasChanged, reclaimFocus, setSelectedWebPartId) {
        this._handleCanvasChanged = handleCanvasChanged;
        this._handleResize = handleResize;
        this._reclaimFocus = reclaimFocus;
        this._serviceScope = serviceScope;
        this._setSelectedWebPartId = setSelectedWebPartId;
        this.webPartConfigurationEventCallback = this.webPartConfigurationEventCallback.bind(this);
    }
    Object.defineProperty(CanvasWebPartHost.prototype, "serviceScope", {
        get: function () {
            return this._serviceScope;
        },
        enumerable: true,
        configurable: true
    });
    CanvasWebPartHost.prototype.setDirty = function (wpInstanceId) {
        if (this._handleCanvasChanged) {
            this._handleCanvasChanged();
        }
    };
    CanvasWebPartHost.prototype.webPartConfigurationEventCallback = function (event, data) {
        if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneOpened) {
            this._handleResize(document.querySelector('.ControlZone--selected'), 500, 44);
        }
        else if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneClosed ||
            event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneLostFocus) {
            this._reclaimFocus();
        }
        else if (event === sp_webpart_base_1.WebPartConfigurationEvent.PropertyPaneWebPartsSwitched &&
            this._setSelectedWebPartId &&
            data) {
            this._setSelectedWebPartId(data.instanceId);
        }
    };
    return CanvasWebPartHost;
}());
exports.default = CanvasWebPartHost;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_core_library_1 = __webpack_require__(4);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var CanvasSection_1 = __webpack_require__(50);
var CanvasFullWidthSection_1 = __webpack_require__(21);
var Toolbar_1 = __webpack_require__(26);
var CanvasDragZone_1 = __webpack_require__(15);
__webpack_require__(201);
var CanvasControlType_1 = __webpack_require__(6);
var CanvasStrings_resx_1 = __webpack_require__(8);
var CanvasA11y_1 = __webpack_require__(14);
var CanvasZone = (function (_super) {
    __extends(CanvasZone, _super);
    function CanvasZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.state = {
            isToolbarFixed: false,
            accessibleLabel: ''
        };
        _this._store = _this.context.store;
        _this._isTabPressed = false;
        return _this;
    }
    CanvasZone.prototype.componentDidMount = function () {
        if (this._domElement) {
            this._domElement.addEventListener('keydown', this._handleKeydownCapture, true);
            this._domElement.addEventListener('focus', this._handleZoneFocus, true);
            this._domElement.addEventListener('blur', this._handleZoneBlur, true);
            if (this.props.selectedPosition.zoneIndex === this.props.zone.index &&
                !this._isChildElement(document.activeElement)) {
                this.focus();
            }
        }
    };
    CanvasZone.prototype.componentWillUnmount = function () {
        if (this._domElement) {
            this._domElement.removeEventListener('keydown', this._handleKeydownCapture, true);
            this._domElement.removeEventListener('focus', this._handleZoneFocus, true);
            this._domElement.removeEventListener('blur', this._handleZoneBlur, true);
        }
    };
    CanvasZone.prototype.focus = function () {
        if (this._domElement) {
            this._domElement.focus();
        }
    };
    CanvasZone.prototype.render = function () {
        var _this = this;
        var displayMode = this._store.displayMode;
        var _a = this.props, fullWidth = _a.fullWidth, zone = _a.zone, selectedPosition = _a.selectedPosition, shouldCenterAlign = _a.shouldCenterAlign;
        var isZoneOnlySelected = selectedPosition.zoneIndex === zone.index &&
            !selectedPosition.controlIndex;
        var isControlWithinZoneSelected = selectedPosition.zoneIndex === zone.index &&
            (!!selectedPosition.controlIndex || this._store.toolboxProps.isOpen);
        var isCurZoneEmpty = true;
        var sectionComponents = [];
        var sections = zone.sections;
        sections.forEach(function (curSection, curIdx) {
            if (fullWidth) {
                sectionComponents.push(React.createElement(CanvasFullWidthSection_1.default, { zoneIndex: zone.index, section: curSection, selectedPosition: selectedPosition, key: curSection.index }));
            }
            else {
                sectionComponents.push(React.createElement(CanvasSection_1.default, { zoneIndex: zone.index, section: curSection, selectedPosition: selectedPosition, key: curSection.index }));
            }
            if (isCurZoneEmpty && !curSection.isEmpty()) {
                isCurZoneEmpty = false;
            }
        });
        var isReadMode = displayMode === sp_core_library_1.DisplayMode.Read;
        var layoutZoneClassName = office_ui_fabric_react_1.css('CanvasZone', 'ms-Grid-row', {
            'CanvasZone--edit': !isReadMode,
            'CanvasZone--fullWidth': fullWidth,
            'CanvasZone--read': isReadMode,
            'CanvasZone--selected': isZoneOnlySelected,
            'CanvasZone--controlSelected': isControlWithinZoneSelected,
            'CanvasZone--empty': isCurZoneEmpty,
            'CanvasZone--centerAlign': shouldCenterAlign
        });
        return (React.createElement("div", { className: layoutZoneClassName, ref: function (ref) { return _this._domElement = ref; }, "data-automation-id": 'CanvasZone', "data-drag-tag": CanvasDragZone_1.default.zoneDragTag, onClickCapture: !isReadMode && this._handleClickCapture, tabIndex: !isReadMode && 0, "aria-label": !isReadMode && this.state.accessibleLabel },
            sectionComponents,
            React.createElement(Toolbar_1.default, { ref: function (ref) { return _this._toolbarElement = ref; }, className: office_ui_fabric_react_1.css('CanvasZoneToolbar', { 'FixedToolbar': this.state.isToolbarFixed }), controlType: zone.layoutType, controlPosition: { zoneIndex: zone.index, sectionIndex: undefined, controlIndex: undefined }, displayMode: displayMode, id: zone.index.toString(), row: undefined, onConfigureButtonClick: this._onToolbarEditClick, onDeleteButtonClick: this._store.handleDeleteZoneButtonClicked, fixedPosition: this.state.fixedPosition })));
    };
    CanvasZone.prototype.handleScroll = function () {
        var zoneRect = this._domElement.getBoundingClientRect();
        var canvasRect = this._store.canvasElement.getBoundingClientRect();
        var stickTop = this._store.scrollableParent.getBoundingClientRect().top;
        var shouldToolbarStick = stickTop > zoneRect.top && stickTop < zoneRect.bottom - this._toolbarElement.getHeight();
        if (shouldToolbarStick !== this.state.isToolbarFixed) {
            this.setState({
                isToolbarFixed: shouldToolbarStick,
                fixedPosition: shouldToolbarStick ? {
                    top: stickTop,
                    left: office_ui_fabric_react_1.getRTL() ? canvasRect.right - 32  : canvasRect.left
                } : undefined
            });
        }
    };
    CanvasZone.prototype._handleKeydownCapture = function (evt) {
        this._isTabPressed = false;
        if (this._domElement) {
            if (CanvasA11y_1.isEscape(evt)) {
                this._store.a11yManager.navigateTo(this._domElement);
                evt.preventDefault();
            }
            else if (CanvasA11y_1.isKey(CanvasA11y_1.KeyCodes.F10, evt, true)) {
                this._store.a11yManager.navigateTo(this._toolbarElement.toolBarElement);
                this._store.a11yManager.ariaAlert(CanvasStrings_resx_1.default.ToolbarNavigationArrowKeys);
                evt.preventDefault();
            }
            else if (CanvasA11y_1.isKey(CanvasA11y_1.KeyCodes.P, evt, true)) {
                this._onToolbarEditClick();
                evt.preventDefault();
            }
            else if (CanvasA11y_1.isTab(evt) || CanvasA11y_1.isShiftTab(evt)) {
                this._isTabPressed = true;
            }
        }
    };
    CanvasZone.prototype._handleZoneFocus = function (evt) {
        var displayMode = this._store.displayMode;
        if (displayMode === sp_core_library_1.DisplayMode.Edit &&
            document.activeElement === this._domElement) {
            if (this.state.accessibleLabel === '') {
                var label = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.AriaWebPartOrSectionEnterTemplate || '', this._getSectionContextualAriaLabel(), CanvasStrings_resx_1.default.SectionAriaLabel);
                this.setState({
                    accessibleLabel: label
                });
                this._clearAccessibleLabel();
            }
            this._selectZone();
        }
    };
    CanvasZone.prototype._getSectionContextualAriaLabel = function () {
        var zone = this.props.zone;
        var sections = zone.sections;
        var contextualLabel = '';
        var isCurZoneEmpty = true;
        sections.forEach(function (curSection) {
            var controls = curSection.controls;
            controls.forEach(function (control) {
                var webPartName = '';
                if (control.controlType === CanvasControlType_1.default.RTE) {
                    webPartName = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.CanvasZoneAriaWebpartName, CanvasStrings_resx_1.default.TextWebPartDisplayName);
                }
                else {
                    var webPartProps = control;
                    webPartName = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.CanvasZoneAriaWebpartName, webPartProps.webPartData.title);
                }
                if (contextualLabel === '') {
                    contextualLabel = webPartName;
                }
                else {
                    contextualLabel = odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.WebPartsInSectionLabel, contextualLabel, webPartName);
                }
            });
            if (isCurZoneEmpty && !curSection.isEmpty()) {
                isCurZoneEmpty = false;
            }
        });
        if (isCurZoneEmpty) {
            contextualLabel = CanvasStrings_resx_1.default.EmptySectionAriaLabel;
        }
        return odsp_utilities_bundle_1.StringHelper.format(CanvasStrings_resx_1.default.SectionContextualAriaLabel, this._getAccessibleSectionLabel(this.props.zone.layoutType), contextualLabel);
    };
    CanvasZone.prototype._handleZoneBlur = function (evt) {
        var target = evt.relatedTarget;
        if (this._isTabPressed &&
            !this._isChildElement(target)) {
            this._store.selectedZoneIndex = -1;
        }
        this._isTabPressed = false;
    };
    CanvasZone.prototype._onToolbarEditClick = function () {
        if (this.props.zone && this.props.zone.index !== undefined) {
            this._store.handleConfigureZoneButtonClicked(this.props.zone.index.toString(), this.focus);
            this._selectZone();
        }
    };
    CanvasZone.prototype._handleClickCapture = function (e) {
        if (e.target !== this._domElement) {
            return;
        }
        if (this.props.zone && this.props.zone.index !== undefined) {
            this._selectZone();
        }
    };
    CanvasZone.prototype._selectZone = function () {
        this._store.selectedZoneIndex = this.props.zone.index;
    };
    CanvasZone.prototype._isChildElement = function (elem) {
        return this._domElement && this._domElement.contains(elem);
    };
    CanvasZone.prototype._getAccessibleSectionLabel = function (layoutType) {
        switch (layoutType) {
            case CanvasControlType_1.default.OneColumn:
                return CanvasStrings_resx_1.default.ToolboxOneColumnPart;
            case CanvasControlType_1.default.TwoColumns:
                return CanvasStrings_resx_1.default.ToolboxTwoColumnPart;
            case CanvasControlType_1.default.ThreeColumns:
                return CanvasStrings_resx_1.default.ToolboxThreeColumnPart;
            case CanvasControlType_1.default.OneThirdColumnRight:
                return CanvasStrings_resx_1.default.ToolboxOneThirdRightColumnPart;
            case CanvasControlType_1.default.OneThirdColumnLeft:
                return CanvasStrings_resx_1.default.ToolboxOneThirdLeftColumnPart;
            case CanvasControlType_1.default.FullWidth:
                return CanvasStrings_resx_1.default.ToolboxFullWidthColumnPart;
            default:
                return undefined;
        }
    };
    CanvasZone.prototype._clearAccessibleLabel = function () {
        var _this = this;
        this._async.setTimeout(function () {
            _this.setState({
                accessibleLabel: ''
            });
        }, 100);
    };
    return CanvasZone;
}(office_ui_fabric_react_1.BaseComponent));
CanvasZone.contextTypes = {
    store: React.PropTypes.object.isRequired
};
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "focus", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "handleScroll", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "_handleKeydownCapture", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "_handleZoneFocus", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "_handleZoneBlur", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "_onToolbarEditClick", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "_handleClickCapture", null);
__decorate([
    office_ui_fabric_react_1.autobind
], CanvasZone.prototype, "_clearAccessibleLabel", null);
exports.default = CanvasZone;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(101);


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var reactDOM = __webpack_require__(13);
var sp_core_library_1 = __webpack_require__(4);
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_2 = __webpack_require__(4);
var office_ui_fabric_react_1 = __webpack_require__(0);
var CanvasComponent_1 = __webpack_require__(194);
var CreateEmptyZoneLayout_1 = __webpack_require__(25);
var CanvasStore_1 = __webpack_require__(9);
var Canvas = (function () {
    function Canvas(container, canvasOptions) {
        if (CanvasStore_1.default.isLayoutSupported) {
            __webpack_require__(204);
        }
        else {
            __webpack_require__(203);
        }
        this._render = this._render.bind(this);
        this._container = container;
        this._store = new CanvasStore_1.default(canvasOptions.serviceScope, this._render, canvasOptions.mode, canvasOptions.serializedCanvasContent, canvasOptions.handleCanvasChanged, canvasOptions.scrollThreshold, canvasOptions.handleViewportRendered, canvasOptions.shouldCenterAlign);
    }
    Canvas.prototype.render = function (serializedCanvas) {
        this._internalDispose();
        this._store.webPartManager.disposeWebparts();
        window.addEventListener('blur', this._store.handleWindowBlur, true);
        this._store.deserialize(serializedCanvas);
        this._render();
        if (!this._store.webPartsCount) {
            this._store.onViewportWebPartsRendered(sp_telemetry_1._PerformanceLogger.now());
        }
    };
    Object.defineProperty(Canvas.prototype, "count", {
        get: function () {
            return this._store.controlsProps.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Canvas.prototype, "previewImageUrl", {
        get: function () {
            return this._store.tryGeneratePreviewImageUrl();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Canvas.prototype, "displayMode", {
        get: function () {
            return this._store.displayMode;
        },
        set: function (newMode) {
            this._store.displayMode = newMode;
        },
        enumerable: true,
        configurable: true
    });
    Canvas.prototype.dispose = function () {
        this._internalDispose();
        if (!sp_core_library_2._SPKillSwitch.isActivated(Canvas._unmountLayoutKillSwitch, '03/28/2017', 'Unmount page layout')) {
            this._store.dispose();
        }
    };
    Canvas.prototype.openToolbox = function (row) {
        var didToolboxOpen = false;
        if (this._store.displayMode === sp_core_library_1.DisplayMode.Edit &&
            0 <= row &&
            row <= this._store.controlsProps.length) {
            var hint = document.querySelectorAll('.CanvasToolboxHint')[row];
            if (CanvasStore_1.default.isLayoutSupported) {
                this._store.openToolbox(CreateEmptyZoneLayout_1.CreateEmptyZoneLayout(row), hint.offsetTop);
            }
            else {
                this._store.openToolbox(row, hint.offsetTop);
            }
            didToolboxOpen = true;
        }
        return didToolboxOpen;
    };
    Canvas.prototype.serialize = function (toJson) {
        return this._store.serialize(toJson);
    };
    Canvas.prototype.fetchWebparts = function (force) {
        return this._store.fetchWebparts(force);
    };
    Canvas.prototype._internalDispose = function () {
        window.removeEventListener('blur', this._store.handleWindowBlur, true);
        reactDOM.unmountComponentAtNode(this._container);
    };
    Canvas.prototype._render = function () {
        var props = {
            store: this._store
        };
        var coreElement = React.createElement(CanvasComponent_1.default, props);
        this._coreComponent = reactDOM.render(coreElement, this._container);
    };
    return Canvas;
}());
Canvas._unmountLayoutKillSwitch = sp_core_library_2.Guid.tryParse('{7FA46D79-8E10-4B16-AC6B-7EE901B81746}');
__decorate([
    office_ui_fabric_react_1.autobind
], Canvas.prototype, "serialize", null);
exports.default = Canvas;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(102);


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(103);


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var CanvasStrings_resx_1 = __webpack_require__(8);
function ConfirmationDialog(props) {
    var isOpen = props.isOpen, message = props.message, onConfirmation = props.onConfirmation, onDismiss = props.onDismiss, title = props.title;
    return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: isOpen, onDismiss: onDismiss, title: title, subText: message },
        React.createElement(office_ui_fabric_react_1.DialogFooter, null,
            React.createElement(office_ui_fabric_react_1.Button, { buttonType: office_ui_fabric_react_1.ButtonType.primary, onClick: onConfirmation, ariaLabel: CanvasStrings_resx_1.default.ConfirmationDialogYes, "data-automation-id": 'confirmButton' }, CanvasStrings_resx_1.default.ConfirmationDialogYes),
            React.createElement(office_ui_fabric_react_1.Button, { onClick: onDismiss, ariaLabel: CanvasStrings_resx_1.default.ConfirmationDialogNo, "data-automation-id": 'cancelButton' }, CanvasStrings_resx_1.default.ConfirmationDialogNo))));
}
exports.default = ConfirmationDialog;
ConfirmationDialog.contextTypes = {
    store: React.PropTypes.object.isRequired
};


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_1 = __webpack_require__(4);
var sp_webpart_base_1 = __webpack_require__(17);
var CanvasA11y_1 = __webpack_require__(14);
var WebPartZone = (function (_super) {
    __extends(WebPartZone, _super);
    function WebPartZone(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this._webPartManager = _this.context.store.webPartManager;
        _this.handleConfigureButtonClicked = _this.handleConfigureButtonClicked.bind(_this);
        _this.state = {
            displayMode: _this.props.displayMode
        };
        return _this;
    }
    WebPartZone.prototype.componentDidMount = function () {
        var _this = this;
        var store = this.context.store;
        var context = {
            domElement: this._webPartDiv,
            instanceId: this.props.id,
            manifest: this.props.webPartManifest,
            displayMode: this.props.displayMode,
            webPartData: this.props.webPartData,
            addedFromPersistedData: this.props.addedFromPersistedData,
            onViewportWebPartsRendered: this._onViewportWebPartsRendered.bind(this),
            totalWebparts: store.webPartsCount
        };
        this._loadWebPartPromise = this._webPartManager.loadWebPart(context).then(function () {
            try {
                if (_this.state.displayMode === sp_core_library_1.DisplayMode.Edit && _this.props.id === store.selectedControlId) {
                    store.webPartManager.setPropertyPaneState(_this.props.id);
                }
                _this._isLoaded = true;
            }
            catch (err) {
                sp_telemetry_1._TraceLogger.logError(WebPartZone._logSource, err, 'didMount.set');
            }
        }, function (error) {
            sp_telemetry_1._TraceLogger.logError(WebPartZone._logSource, error, 'didMount.load');
            if (window['_isTransitioning']) {
                location.reload(true);
            }
        });
    };
    WebPartZone.prototype.shouldComponentUpdate = function (newProps, newState) {
        return false;
    };
    WebPartZone.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { ref: function (htmlElement) { return _this._webPartDiv = htmlElement; }, style: { width: '100%' } }));
    };
    Object.defineProperty(WebPartZone.prototype, "instanceId", {
        get: function () {
            return this.props.id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WebPartZone.prototype, "isFocusable", {
        get: function () {
            return !!CanvasA11y_1.getFirstFocusableChild(this._webPartDiv);
        },
        enumerable: true,
        configurable: true
    });
    WebPartZone.prototype.focus = function () {
        if (!this.context.store.a11yManager.navigateInside(this._webPartDiv)) {
            this.context.store.a11yManager.navigateOutOf(this._webPartDiv);
        }
    };
    WebPartZone.prototype.handleConfigureButtonClicked = function (shouldToggle) {
        if (this._isLoaded) {
            this._webPartManager.setPropertyPaneState(this.props.id, shouldToggle ? sp_webpart_base_1.PropertyPaneState.Toggle : sp_webpart_base_1.PropertyPaneState.Open);
        }
    };
    WebPartZone.prototype.handleDeleteButtonClicked = function () {
        var _this = this;
        this._loadWebPartPromise.then(function () { return _this._webPartManager.onWebPartDelete(_this.props.id); });
    };
    WebPartZone.prototype.serialize = function () {
        var webPartData = this._isLoaded ? this._webPartManager.serialize(this.props.id).get(this.props.id) : this.props.webPartData;
        var serialization = JSON.parse(JSON.stringify(this.props));
        serialization.webPartData = webPartData;
        return serialization;
    };
    WebPartZone.prototype.setDisplayMode = function (newDisplayMode) {
        var _this = this;
        this.setState({
            displayMode: newDisplayMode
        });
        var qos = this.context.store.createQosScope("SetWebPartDisplayModeTo" + newDisplayMode);
        this._loadWebPartPromise.then(function () {
            _this._webPartManager.setDisplayMode(newDisplayMode, _this.props.id);
            qos.writeSuccess();
        }, function (error) { return qos.writeUnexpectedFailure('Rejected', error, { 'id': _this.props.webPartId }); });
    };
    WebPartZone.prototype._onViewportWebPartsRendered = function (endTime) {
        this.context.store.onViewportWebPartsRendered(endTime);
    };
    return WebPartZone;
}(React.Component));
WebPartZone.contextTypes = {
    store: React.PropTypes.object.isRequired
};
WebPartZone.webPartManagerInitialized = false;
WebPartZone._logSource = sp_telemetry_1._LogSource.create('WebPartZone');
exports.default = WebPartZone;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(106);


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var office_ui_fabric_react_1 = __webpack_require__(0);
var ToolbarButton_1 = __webpack_require__(22);
var CanvasA11y_1 = __webpack_require__(14);
var office_ui_fabric_react_2 = __webpack_require__(0);
__webpack_require__(209);
var DISPLAYBUTTON = 'displayButton';
var ToolbarSubmenu = (function (_super) {
    __extends(ToolbarSubmenu, _super);
    function ToolbarSubmenu(props) {
        var _this = _super.call(this, props) || this;
        _this._hasExplicitActiveButton = false;
        _this.state = {
            isOpen: props.isOpen
        };
        return _this;
    }
    ToolbarSubmenu.prototype.componentDidMount = function () {
        document.addEventListener('click', this._handleDocumentClick);
    };
    ToolbarSubmenu.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this._isKeyboardNav && !this.state.isOpen && this._focusElement) {
            this._focusElement.focus();
            this._focusElement = undefined;
            this._isKeyboardNav = false;
        }
        if (this._isKeyboardNav && this.state.isOpen && this._menuElement) {
            CanvasA11y_1.navigateInside(this._menuElement);
            this._isKeyboardNav = false;
        }
    };
    ToolbarSubmenu.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.isOpen !== nextProps.isOpen) {
            this.setState({ isOpen: nextProps.isOpen });
        }
    };
    ToolbarSubmenu.prototype.componentWillUnmount = function () {
        document.removeEventListener('click', this._handleDocumentClick);
    };
    ToolbarSubmenu.prototype.render = function () {
        var openedCssClass = this.state.isOpen ? 'is-open' : '';
        var wideCssClass = this.props.isWide ? 'ToolbarSubmenu--wide' : '';
        var activeButton = this._getActiveButton();
        this._bindButtonClickHandlers();
        var buttonElements = [];
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var buttonProps = _a[_i];
            buttonProps.tabIndex = this.state.isOpen ? 0 : -1;
            if (buttonProps === activeButton) {
                buttonProps.isActive = true;
            }
            buttonElements.push(React.createElement(ToolbarButton_1.default, __assign({}, buttonProps)));
        }
        return (React.createElement("div", { className: "ToolbarSubmenu " + openedCssClass + " " + wideCssClass },
            React.createElement(ToolbarButton_1.default, { className: 'ToolbarSubmenu-displayButton', fabricIconKey: activeButton.fabricIconKey, iconClassName: activeButton.iconClassName, key: 'displayButton', onClick: this._handleClickOnDisplayButton, label: activeButton.label, tabIndex: this.state.isOpen ? -1 : 0, title: activeButton.title, onKeyDown: this._handleSubmenuItemsKeyDown, automationId: DISPLAYBUTTON, onBlur: this.props.onBlur }),
            React.createElement("i", { className: 'ms-Icon ms-Icon--CaretDownSolid8 ToolbarSubmenu-caret' }),
            React.createElement(office_ui_fabric_react_1.FocusZone, { isCircularNavigation: true },
                React.createElement("div", { role: 'presentation', className: 'ToolbarSubmenu-menuItems', ref: this._resolveRef('_menuElement'), onKeyDown: this._handleSubmenuKeyDown, "data-automation-id": 'subMenuContainer' }, buttonElements))));
    };
    ToolbarSubmenu.prototype._bindButtonClickHandlers = function () {
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var buttonProps = _a[_i];
            buttonProps.onClick = this._handleOnButtonClick.bind(this, buttonProps.onClick);
        }
    };
    ToolbarSubmenu.prototype._getActiveButton = function () {
        this._hasExplicitActiveButton = false;
        for (var _i = 0, _a = this.props.buttons; _i < _a.length; _i++) {
            var button = _a[_i];
            if (button.isActive) {
                this._hasExplicitActiveButton = true;
                return button;
            }
        }
        return this.props.buttons[0];
    };
    ToolbarSubmenu.prototype._handleSubmenuKeyDown = function (e) {
        if (this.state.isOpen &&
            (e.key === 'ArrowRight' || e.key === 'ArrowLeft')) {
            this._isKeyboardNav = true;
            this._handleCloseSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleSubmenuItemsKeyDown = function (e) {
        if (e.key === 'ArrowDown') {
            this._isKeyboardNav = true;
            this._handleOpenSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleClickOnDisplayButton = function () {
        if (this.state.isOpen) {
            this._handleCloseSubmenu();
        }
        else {
            this._handleOpenSubmenu();
        }
    };
    ToolbarSubmenu.prototype._handleOpenSubmenu = function () {
        this._focusElement = document.activeElement;
        this.props.onOpen();
        this.setState({ isOpen: true });
    };
    ToolbarSubmenu.prototype._handleCloseSubmenu = function (isDocumentClick) {
        this.setState({ isOpen: false });
        this.props.onClose(isDocumentClick);
    };
    ToolbarSubmenu.prototype._handleOnButtonClick = function (onClickCallback) {
        onClickCallback();
        this._handleCloseSubmenu();
    };
    ToolbarSubmenu.prototype._handleDocumentClick = function (evt) {
        var currentTarget = evt.target;
        if (this.state.isOpen &&
            currentTarget.getAttribute('data-automation-id') !== DISPLAYBUTTON &&
            currentTarget.parentElement &&
            currentTarget.parentElement.getAttribute('data-automation-id') !== DISPLAYBUTTON) {
            this._handleCloseSubmenu(true);
        }
    };
    return ToolbarSubmenu;
}(office_ui_fabric_react_2.BaseComponent));
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_bindButtonClickHandlers", null);
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_handleSubmenuKeyDown", null);
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_handleSubmenuItemsKeyDown", null);
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_handleClickOnDisplayButton", null);
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_handleOpenSubmenu", null);
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_handleCloseSubmenu", null);
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_handleOnButtonClick", null);
__decorate([
    office_ui_fabric_react_2.autobind
], ToolbarSubmenu.prototype, "_handleDocumentClick", null);
exports.default = ToolbarSubmenu;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(107);


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(108);


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(109);


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = __webpack_require__(4);
var CanvasControlType_1 = __webpack_require__(6);
var GENERIC_ITEM_ID = '00000000-0000-0000-0000-000000000000';
var VIDEO_MANIFEST_ID = '275c0095-a77e-4f6d-a2a0-6a7626911518';
var STREAM_FLIGHT_ID = 947;
var FEATURED_ITEM_IDS = [
    'd1d91016-032f-456d-98a4-721247c305e8_0',
    'b7dd04e1-19ce-4b24-9132-b60a1c2b910d_0',
    '6410b3b6-d440-4663-8744-378976dc041e_0',
    '490d7c76-1824-45b2-9de3-676421c997fa_0',
    'daf0b71c-6de8-4ef7-b511-faae7c388708_0' 
];
var ToolBoxItemClassifier = (function () {
    function ToolBoxItemClassifier() {
        var _this = this;
        this._toolBoxItemIdToPropsMap = new Map();
        this._fullWidthToolBoxItemIdToPropsMap = new Map();
        FEATURED_ITEM_IDS.forEach(function (id) {
            _this._toolBoxItemIdToPropsMap.set(id, []);
        });
        this._toolBoxItemIdToPropsMap.set(GENERIC_ITEM_ID, []);
    }
    ToolBoxItemClassifier.prototype.registerItem = function (itemId, itemProps) {
        var registeredItemProps = this._toolBoxItemIdToPropsMap.get(itemId);
        var fullWidthItemProps = this._fullWidthToolBoxItemIdToPropsMap.get(itemId);
        if (Array.isArray(registeredItemProps)) {
            registeredItemProps.push(itemProps);
        }
        else {
            if (!this._isStreamWebPartEnabled(itemId, itemProps)) {
                return;
            }
            this._toolBoxItemIdToPropsMap.get(GENERIC_ITEM_ID).push(itemProps);
        }
    };
    ToolBoxItemClassifier.prototype.classify = function (isFeatured, sortPredicate) {
        var toolBoxItemProps = [];
        if (isFeatured) {
            this._toolBoxItemIdToPropsMap.forEach(function (items, id) {
                if (id !== GENERIC_ITEM_ID && items.length > 0) {
                    toolBoxItemProps.push(items[0]);
                }
            });
        }
        else {
            toolBoxItemProps = this._toolBoxItemIdToPropsMap.get(GENERIC_ITEM_ID);
        }
        if (Boolean(sortPredicate)) {
            toolBoxItemProps = toolBoxItemProps.sort(sortPredicate);
        }
        return toolBoxItemProps;
    };
    ToolBoxItemClassifier.prototype._isStreamWebPartEnabled = function (itemId, itemProps) {
        if (itemId && itemId.indexOf(VIDEO_MANIFEST_ID) === 0) {
            var isWebPart = itemProps && itemProps.itemProps &&
                itemProps.itemProps.controlType === CanvasControlType_1.default.WebPartZone;
            if (isWebPart) {
                var webPartProps = itemProps.itemProps;
                if (webPartProps && webPartProps.webPartData && webPartProps.webPartData.properties &&
                    webPartProps.webPartData.properties.isStream === true) {
                    return sp_core_library_1._SPFlight.isEnabled(STREAM_FLIGHT_ID);
                }
            }
        }
        return true;
    };
    return ToolBoxItemClassifier;
}());
exports.default = ToolBoxItemClassifier;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(110);


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
__webpack_require__(27);
var CanvasStrings_resx_1 = __webpack_require__(8);
var Toolbox_1 = __webpack_require__(58);
var ToolboxItem_1 = __webpack_require__(57);
var ToolboxGroup_1 = __webpack_require__(56);
__webpack_require__(27);
var EmbeddedToolbox = (function (_super) {
    __extends(EmbeddedToolbox, _super);
    function EmbeddedToolbox(props, context) {
        return _super.call(this, props, context) || this;
    }
    EmbeddedToolbox.prototype._getToolboxContent = function () {
        var _a = this.props, onItemClick = _a.onItemClick, toolboxItems = _a.toolboxItems;
        var embeddedItemViews = [];
        toolboxItems.forEach(function (item) {
            item.onClick = onItemClick;
            item.embeddedToolbox = true;
            embeddedItemViews.push(React.createElement(ToolboxItem_1.default, __assign({}, item)));
        });
        var embeddedGroup = React.createElement(ToolboxGroup_1.default, { groupName: CanvasStrings_resx_1.default.ToolboxGroupNameFullWidth, key: CanvasStrings_resx_1.default.ToolboxGroupNameFullWidth, hasHeader: true, embeddedToolbox: true }, embeddedItemViews);
        return React.createElement("div", null, embeddedGroup);
    };
    EmbeddedToolbox.prototype._handleKeyDownCapture = function (e) {
    };
    EmbeddedToolbox.prototype._getCanvasToolBoxClassName = function () {
        return 'CanvasToolbox CanvasToolbox--Embedded';
    };
    EmbeddedToolbox.prototype._getCanvasToolBoxContainerClassName = function () {
        return 'CanvasToolboxContainer CanvasToolboxContainer--Embedded';
    };
    return EmbeddedToolbox;
}(Toolbox_1.default));
exports.default = EmbeddedToolbox;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(112);
var styles = {
    screenReaderOnly: 'screenReaderOnly_55c07e91',
};
exports.default = styles;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var sp_core_library_1 = __webpack_require__(4);
var CKEDITOR_PATH_KEY = 'CKEDITOR_BASEPATH';
var COMMENTS_FLIGHT_ID = 942; 
var RESOURCES_PATH = __webpack_require__.p;
var CKLoader = (function () {
    function CKLoader() {
    }
    CKLoader._setup = function (editor) {
        CKLoader._editorModule = editor;
        if (sp_core_library_1._SPFlight.isEnabled(COMMENTS_FLIGHT_ID)) {
            CKEDITOR.disableAutoInline = true;
        }
    };
    CKLoader.prototype.loadModule = function (editorSrc) {
        if (!CKLoader._editorPromise) {
            window[CKEDITOR_PATH_KEY] = editorSrc || odsp_utilities_bundle_1.Uri.concatenate(RESOURCES_PATH, '/ckeditor/');
            CKLoader._editorPromise = new Promise(function (complete) {
                if (editorSrc) {
                    __webpack_require__.e/* require.ensure */(0).then((function (require) {
                        var editor = __webpack_require__(78);
                        CKLoader._setup(editor);
                        complete(editor);
                    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
                }
                else {
                    __webpack_require__.e/* require.ensure */(0).then((function (require) {
                        var editor = __webpack_require__(81);
                        CKLoader._setup(editor);
                        complete(editor);
                    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
                }
            });
            CKLoader._editorPromise.catch(function (error) {
                sp_telemetry_1._TraceLogger.logError(CKLoader.logSource, error);
            });
        }
        return CKLoader._editorPromise;
    };
    return CKLoader;
}());
CKLoader.logSource = sp_telemetry_1._LogSource.create('SPRteCKLoader');
exports.default = CKLoader;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(113);


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function Base64MimeType(encoded) {
    var result = undefined;
    var mime = encoded.match(/data:([a-zA-Z0-9]+\/[a-zA-Z0-9-.+]+).*,.*/);
    if (mime && mime.length) {
        result = mime[1];
    }
    return result;
}
exports.Base64MimeType = Base64MimeType;
function Base64toBlob(b64Data, contentType) {
    if (contentType === void 0) { contentType = ''; }
    var sliceSize = 512;
    var byteCharacters = atob(b64Data);
    var byteArrays = [];
    var length = byteCharacters.length;
    var byteNumbers;
    for (var offset = 0; offset < length; offset += sliceSize) {
        var slice = byteCharacters.slice(offset, offset + sliceSize);
        byteNumbers = [];
        for (var i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
        }
        var byteArray = new Uint8Array(byteNumbers);
        byteArrays.push(byteArray);
        byteNumbers.length = 0;
    }
    var blob = new Blob(byteArrays, { type: contentType });
    return blob;
}
exports.Base64toBlob = Base64toBlob;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var React = __webpack_require__(1);
__webpack_require__(220);
var RteStrings_resx_1 = __webpack_require__(12);
var SPRteFormattingBar = (function (_super) {
    __extends(SPRteFormattingBar, _super);
    function SPRteFormattingBar(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isFaded: false
        };
        return _this;
    }
    SPRteFormattingBar.prototype.componentDidMount = function () {
        this._domNode.addEventListener('keydown', this.props.onKeyDown);
    };
    SPRteFormattingBar.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.position.top !== nextProps.position.top) {
            this.setState({
                isFaded: true
            });
        }
    };
    SPRteFormattingBar.prototype.componentDidUpdate = function () {
        var _this = this;
        if (this.state.isFaded) {
            window.setTimeout(function () {
                _this.setState({
                    isFaded: false
                });
            }, 300);
        }
    };
    SPRteFormattingBar.prototype.render = function () {
        var style = this.props.position;
        var className = office_ui_fabric_react_1.css('SPRteFormattingBar', 'rteFlyout-visible', 'stack-panel-class', 'ms-u-slideUpIn10', {
            'faded': this.state.isFaded
        });
        return (React.createElement("div", { role: 'toolbar', "aria-label": RteStrings_resx_1.default.FormattingBarAccessibleLabel, className: className, ref: this._resolveRef('_domNode'), style: style, "data-automation-id": 'toolbar' },
            React.createElement(office_ui_fabric_react_1.FocusZone, { isCircularNavigation: true }, this.props.buttons)));
    };
    return SPRteFormattingBar;
}(office_ui_fabric_react_1.BaseComponent));
exports.default = SPRteFormattingBar;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(114);


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var RteStrings_resx_1 = __webpack_require__(12);
var office_ui_fabric_react_1 = __webpack_require__(0);
var RteA11y_1 = __webpack_require__(28);
var SPRteLinkDialog_module_scss_1 = __webpack_require__(222);
var SPRteLinkDialog = (function (_super) {
    __extends(SPRteLinkDialog, _super);
    function SPRteLinkDialog(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isURLValid: true
        };
        return _this;
    }
    SPRteLinkDialog.prototype.render = function () {
        var _a = this.props, editorElement = _a.editorElement, isOpen = _a.isOpen, onDismiss = _a.onDismiss, onSaveClicked = _a.onSaveClicked, onCancelClicked = _a.onCancelClicked, textFieldValue = _a.textFieldValue, selectedText = _a.selectedText, onUnlink = _a.onUnlink, isCKEditorFlighted = _a.isCKEditorFlighted;
        return (React.createElement(office_ui_fabric_react_1.Dialog, { isOpen: isOpen, type: office_ui_fabric_react_1.DialogType.normal, onDismiss: onDismiss, title: RteStrings_resx_1.default.LinkDialogTitle, isBlocking: true, elementToFocusOnDismiss: editorElement, containerClassName: isCKEditorFlighted && SPRteLinkDialog_module_scss_1.default.LinkDialogContainer },
            React.createElement(office_ui_fabric_react_1.TextField, { label: RteStrings_resx_1.default.LinkDialogTextFieldLabel, ariaLabel: RteStrings_resx_1.default.LinkDialogTextFieldAriaLabel, onChanged: this._handleTextFieldChange, onGetErrorMessage: this._getErrorMessage, onKeyDown: this._handleKeyDown, placeholder: 'http://', defaultValue: textFieldValue, componentRef: this._resolveRef('_textField'), "data-automation-id": 'linkDialogTextField' }),
            isCKEditorFlighted &&
                React.createElement("div", null,
                    React.createElement(office_ui_fabric_react_1.TextField, { label: RteStrings_resx_1.default.LinkDialogDisplayTextFieldLabel, ariaLabel: RteStrings_resx_1.default.LinkDialogDisplayTextFieldLabel, onKeyDown: this._handleKeyDown, defaultValue: selectedText, componentRef: this._resolveRef('_displayTextField'), "data-automation-id": 'displayTextField' })),
            React.createElement(office_ui_fabric_react_1.DialogFooter, null,
                React.createElement(office_ui_fabric_react_1.Button, { buttonType: office_ui_fabric_react_1.ButtonType.primary, disabled: !this.state.isURLValid, onClick: this._handleSaveClicked, ariaLabel: RteStrings_resx_1.default.RichTextLinkDialogSaveButtonLabel, "data-automation-id": 'confirmButton' }, RteStrings_resx_1.default.RichTextLinkDialogSaveButtonLabel),
                isCKEditorFlighted &&
                    textFieldValue !== 'http://' &&
                    React.createElement(office_ui_fabric_react_1.Button, { onClick: onUnlink, "data-automation-id": 'removeLinkButton' }, RteStrings_resx_1.default.FormattingBarUnlinkButtonTitle),
                React.createElement(office_ui_fabric_react_1.Button, { onClick: onCancelClicked, ariaLabel: RteStrings_resx_1.default.RichTextLinkDialogCancelButtonLabel, "data-automation-id": 'cancelButton' }, RteStrings_resx_1.default.RichTextLinkDialogCancelButtonLabel))));
    };
    SPRteLinkDialog.prototype.componentDidUpdate = function (prevProps) {
        if (this._textField && this.props.isOpen && !this._initCursorSet) {
            this._initCursorSet = true;
            this._textField.select();
            var textValue = this._textField.value;
            if (textValue) {
                this._textField.setSelectionStart(textValue.length);
                this._textField.setSelectionEnd(textValue.length);
            }
        }
        else if (!this.props.isOpen) {
            this._initCursorSet = false;
        }
    };
    SPRteLinkDialog.prototype.componentWillReceiveProps = function (newProps) {
        this.state = {
            isURLValid: this._isURLValid(newProps.textFieldValue)
        };
    };
    Object.defineProperty(SPRteLinkDialog.prototype, "textFieldValue", {
        get: function () {
            var url = '';
            if (this._textField) {
                url = this._textField.value;
                if (!this._hasProtocol(url)) {
                    url = 'http://' + url;
                }
            }
            return url;
        },
        enumerable: true,
        configurable: true
    });
    SPRteLinkDialog.prototype._getErrorMessage = function () {
        return !this._isURLValid(this.textFieldValue) && this.textFieldValue !== '' ?
            RteStrings_resx_1.default.LinkDialogErrorNotSupportedLink : '';
    };
    SPRteLinkDialog.prototype._handleKeyDown = function (evt) {
        if (RteA11y_1.isEnter(evt) && this._isURLValid(this.textFieldValue)) {
            this._onSaveClicked();
            evt.stopPropagation();
            evt.preventDefault();
        }
    };
    SPRteLinkDialog.prototype._handleSaveClicked = function () {
        if (this._isURLValid(this.textFieldValue)) {
            this._onSaveClicked();
        }
    };
    SPRteLinkDialog.prototype._onSaveClicked = function () {
        if (this.props.isCKEditorFlighted) {
            this.props.onSaveClicked(this._displayTextField.value);
        }
        else {
            this.props.onSaveClicked();
        }
    };
    SPRteLinkDialog.prototype._handleTextFieldChange = function () {
        this.setState({
            isURLValid: this._isURLValid(this.textFieldValue)
        });
    };
    SPRteLinkDialog.prototype._hasProtocol = function (url) {
        var hasProtocolRegex = new RegExp('^([A-Za-z0-9]+:(\/\/)?|#|\/|\\\\).+', 'i');
        return hasProtocolRegex.test(url);
    };
    SPRteLinkDialog.prototype._isURLValid = function (url) {
        return this.props.validationRegex.test(url);
    };
    return SPRteLinkDialog;
}(office_ui_fabric_react_1.BaseComponent));
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteLinkDialog.prototype, "_getErrorMessage", null);
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteLinkDialog.prototype, "_handleKeyDown", null);
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteLinkDialog.prototype, "_handleSaveClicked", null);
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteLinkDialog.prototype, "_onSaveClicked", null);
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteLinkDialog.prototype, "_handleTextFieldChange", null);
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteLinkDialog.prototype, "_isURLValid", null);
exports.default = SPRteLinkDialog;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(115);
var styles = {
    LinkDialogContainer: 'LinkDialogContainer_0b185234',
};
exports.default = styles;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_1 = __webpack_require__(4);
var QuillLoader_1 = __webpack_require__(225);
__webpack_require__(224);
var RteStrings_resx_1 = __webpack_require__(12);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var HTMLCleanupUtils_1 = __webpack_require__(62);
var QuillEditor = (function () {
    function QuillEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback) {
        this._platform = new odsp_utilities_bundle_1.PlatformDetection();
        this._config = config;
        this._editorElement = editorElement;
        this._handleSelectionChange = selectionChangeCallback;
        this._handleTextChange = textChangeCallback;
        this._initialize(currentHTML);
    }
    QuillEditor.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus) {
        return new Promise(function (resolve) {
            QuillEditor.moduleLoader.loadModule().then(function () {
                var editor = new QuillEditor(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback);
                resolve(editor);
            });
        });
    };
    QuillEditor._createQosScope = function (scenario) {
        return new sp_telemetry_1._QosMonitor("Quill" + scenario);
    };
    QuillEditor._handleMonitoredException = function (qos, err) {
        qos.writeUnexpectedFailure('Exception', err);
    };
    QuillEditor.prototype.clearFormatting = function (start, end) {
        var formats = {};
        for (var _i = 0, _a = this._config.supportedFormatsArray; _i < _a.length; _i++) {
            var format = _a[_i];
            formats[format.editorKey] = false;
        }
        this.format(start, end, formats);
    };
    QuillEditor.prototype.destroy = function () {
        if (this._quill) {
            var previousHTML = this.getHTML();
            this._quill = undefined;
            return previousHTML;
        }
        return undefined;
    };
    QuillEditor.prototype.focus = function () {
        if (this._editorElement && this._editorElement['setActive']) {
            this._quillEditorElement['setActive']();
        }
        else {
            this._quill.focus();
        }
    };
    QuillEditor.prototype.formatTable = function (format, target) {
    };
    QuillEditor.prototype.getSelectedLink = function () {
        return '';
    };
    QuillEditor.prototype.format = function (start, end, formats, applyAllFormatsToLine) {
        var lineFormats = applyAllFormatsToLine ? formats : {};
        var nonLineFormats = {};
        if (!applyAllFormatsToLine) {
            var _loop_1 = function (formateditorKey) {
                var format = this_1._config.supportedFormatsArray
                    .filter(function (testFormat) { return testFormat.editorKey === formateditorKey; })[0];
                if (format && format.isLine) {
                    lineFormats[format.editorKey] = formats[format.editorKey];
                }
                else {
                    nonLineFormats[format.editorKey] = formats[format.editorKey];
                }
            };
            var this_1 = this;
            for (var formateditorKey in formats) {
                _loop_1(formateditorKey);
            }
        }
        this._quill.formatLine(start, end - start, lineFormats);
        if (!applyAllFormatsToLine) {
            if (nonLineFormats.hasOwnProperty('link') &&
                this.isFormatAppliedToRange(start, end, this._config.formats.get('link'))) {
                if (start === end) {
                    var linkElement = this._findWrappingElementByTagName(start, 'A');
                    if (linkElement) {
                        if (nonLineFormats['link']) {
                            linkElement.setAttribute('href', nonLineFormats['link']);
                            linkElement.setAttribute('target', '_blank');
                        }
                        else {
                            var container = linkElement.parentElement;
                            if (container) {
                                var textNode = document.createTextNode(linkElement.textContent);
                                container.insertBefore(textNode, linkElement);
                                container.removeChild(linkElement);
                            }
                        }
                        nonLineFormats['link'] = undefined;
                    }
                }
                else if (nonLineFormats['link']) {
                    var linkElement = void 0;
                    var linkAtEnd = this._findWrappingElementByTagName(end, 'A');
                    if (end - start > 1) {
                        var linkAtStart = this._findWrappingElementByTagName(start + 1, 'A');
                        linkElement = linkAtStart && linkAtEnd && linkAtStart.isEqualNode(linkAtEnd) ? linkAtEnd : undefined;
                    }
                    else {
                        linkElement = linkAtEnd;
                    }
                    if (linkElement) {
                        linkElement.setAttribute('href', nonLineFormats['link']);
                        linkElement.setAttribute('target', '_blank');
                        nonLineFormats['link'] = undefined;
                    }
                }
            }
            if (start === end) {
                for (var format in nonLineFormats) {
                    this._quill.format(format, nonLineFormats[format]);
                }
            }
            else {
                this._quill.formatText(start, end - start, nonLineFormats);
            }
        }
    };
    QuillEditor.prototype.getBounds = function (position) {
        return this._quill.getBounds(position);
    };
    QuillEditor.prototype.getFormatValue = function (start, end, format) {
        if (format.key === 'link') {
            var linkElement = void 0;
            var linkAtEnd = this._findWrappingElementByTagName(end, 'A');
            if (end - start > 1) {
                var linkAtStart = this._findWrappingElementByTagName(start + 1, 'A');
                linkElement = linkAtStart && linkAtEnd && linkAtStart.isEqualNode(linkAtEnd) ? linkAtEnd : undefined;
            }
            else {
                linkElement = linkAtEnd;
            }
            return linkElement ? linkAtEnd.getAttribute('href') : undefined;
        }
        else {
            var activeFormats = this._quill.getFormat(start, end);
            return activeFormats[format.editorKey];
        }
    };
    QuillEditor.prototype.getSelection = function () {
        var range = this._quill.getSelection();
        return range ? {
            start: range.index,
            end: range.index + range.length
        } : undefined;
    };
    QuillEditor.prototype.getText = function (range) {
        return range ?
            this._quill.getText(range.start, range.end - range.start) :
            this._quill.getText();
    };
    QuillEditor.prototype.getHTML = function () {
        return this._quillEditorElement ? this._quillEditorElement.innerHTML : '';
    };
    QuillEditor.prototype.getEditorType = function () {
        return 'Quill';
    };
    QuillEditor.prototype.isFormatAppliedToRange = function (start, end, format) {
        var activeFormats = this._quill.getFormat(start, end - start);
        return format.editorValue !== undefined ?
            activeFormats[format.editorKey] === format.editorValue :
            activeFormats.hasOwnProperty(format.editorKey);
    };
    QuillEditor.prototype.setSelection = function (range) {
        this._quill.setSelection(range.start, range.end - range.start);
    };
    QuillEditor.prototype._findWrappingElementByTagName = function (position, tagName) {
        if (this._quillModule && tagName === 'A') {
            var _linkFormat = this._quillModule.import('formats/link');
            var link = this._quill.scroll.descendants(_linkFormat, Math.max(0, position - 1))[0];
            return link ? link.domNode : undefined;
        }
        return undefined;
    };
    QuillEditor.prototype._handleSelectionChangeConvert = function (range) {
        var newRange = range ? {
            start: range.index,
            end: range.index + range.length
        } : undefined;
        this._handleSelectionChange(newRange);
    };
    QuillEditor.prototype._addMatcher = function (quill, tagName, formatName, quillModule) {
        quill.clipboard.addMatcher(tagName, function (node, delta) {
            try {
                sp_telemetry_1._EngagementLogger.logEvent(formatName + '.Paste');
                return delta.compose(new quillModule.imports.delta().retain(delta.length(), { formatName: true }));
            }
            catch (e) {
                return delta;
            }
        });
    };
    QuillEditor.prototype._initialize = function (currentHTML) {
        var _this = this;
        QuillEditor.moduleLoader.loadModule().then(function (quillModule) {
            var quillFormatKeys = _this._config.supportedFormatsArray
                .filter(function (format) { return format.isEditorNative; })
                .map(function (format) { return format.editorKey; })
                .filter(function (formatKey, index, self) { return self.indexOf(formatKey) === index; }); 
            _this._quillModule = quillModule;
            var quill = new quillModule(_this._editorElement, {
                formats: quillFormatKeys,
                readOnly: false,
                styles: false,
                placeholder: RteStrings_resx_1.default.TextWebPartPlaceholder
            });
            var container = document.createElement('DIV');
            container.innerHTML = currentHTML;
            var divs = container.querySelectorAll('div');
            for (var i = 0; i < divs.length; i++) {
                var div = divs[i];
                var newElement = div.classList.contains('quote-true') ?
                    document.createElement('BLOCKQUOTE') :
                    document.createElement('P');
                div.classList.remove('quote-true');
                for (var j = 0; j < div.classList.length; j++) {
                    newElement.classList.add(div.classList[j]);
                }
                if (div.hasAttribute('style')) {
                    newElement.setAttribute('style', div.getAttribute('style'));
                }
                newElement.innerHTML = div.innerHTML;
                div.parentElement.insertBefore(newElement, div);
                div.parentElement.removeChild(div);
            }
            var newTags = { 'b': 'strong', 'i': 'em' };
            for (var tag in newTags) {
                var elements = container.querySelectorAll(tag);
                for (var i = 0; i < elements.length; i++) {
                    var element = elements[i];
                    var newElement = document.createElement(newTags[tag]);
                    newElement.innerHTML = element.innerHTML;
                    element.parentElement.insertBefore(newElement, element);
                    element.parentElement.removeChild(element);
                }
            }
            currentHTML = HTMLCleanupUtils_1.StripOutNewLinesAndSpacesFromInnerHTML(container.innerHTML);
            _this._quillEditorElement = _this._editorElement.querySelector('.ql-editor');
            _this._quillEditorElement.innerHTML = currentHTML;
            quill.on('text-change', _this._handleTextChange);
            quill.on('selection-change', _this._handleSelectionChangeConvert);
            _this._quill = quill;
            if (!sp_core_library_1._SPKillSwitch.isActivated(sp_core_library_1.Guid.tryParse('b5f407f5-9f8c-4def-850a-32438487ca2d'), '10/16/2016', 'QuillPasteMatchers')) {
                quill.clipboard.addMatcher('h1', function (node, delta) {
                    try {
                        sp_telemetry_1._EngagementLogger.logEvent('h1.Paste');
                        return delta.compose(new quillModule.imports.delta().retain(delta.length(), { header: 2 }));
                    }
                    catch (e) {
                        return delta;
                    }
                });
                _this._addMatcher(quill, 'p[class*="MsoQuote"]', 'blockquote', quillModule);
                _this._addMatcher(quill, 'a', 'link', quillModule);
                _this._addMatcher(quill, 'table', 'Table', quillModule);
                _this._addMatcher(quill, 'img', 'Image', quillModule);
                quill.clipboard.addMatcher('p[class*="MsoList"]', function (node, delta) {
                    var qos = QuillEditor._createQosScope('PasteMsoList');
                    try {
                        var style = node.getAttribute('style');
                        var x = 1;
                        var maxLevel = 10; 
                        if (style && style.indexOf('level') !== -1) {
                            while (style.indexOf('level' + x) === -1 && x <= maxLevel) {
                                ++x;
                            }
                        }
                        else {
                            qos.writeExpectedFailure('NonLevelListFormat',  undefined, { 'style': style });
                        }
                        if (node.firstChild.nodeType === Node.COMMENT_NODE) {
                            node.removeChild(node.firstChild);
                        }
                        var type = 'ordered';
                        var firstChild = node.firstChild;
                        if (/mso-list\s*:\s*Ignore/i.test(style) ||
                            firstChild.nodeType !== Node.TEXT_NODE &&
                                !/^(:?\s|&nbsp;)+$/.test(firstChild.textContent) &&
                                firstChild.nextSibling.nodeType !== Node.TEXT_NODE) {
                            type = 'bullet';
                        }
                        sp_telemetry_1._EngagementLogger.logEvent(type + 'ListItem.Paste');
                        var attr = { list: type };
                        if (x > 1) {
                            attr.indent = x - 1;
                        }
                        var textContent = node.textContent;
                        var deltaLength = delta.length();
                        var length_1 = deltaLength - textContent.length;
                        var res = textContent.match(/^\s*\S+\s*/);
                        if (res && res[0]) {
                            length_1 += res[0].length;
                        }
                        var tempDelta = delta.compose(new quillModule.imports.delta().delete(length_1 - 1));
                        delta = tempDelta.compose(new quillModule.imports.delta().retain(tempDelta.length(), attr));
                        qos.writeSuccess();
                    }
                    catch (e) {
                        QuillEditor._handleMonitoredException(qos, e);
                    }
                    return delta;
                });
            }
        });
    };
    return QuillEditor;
}());
QuillEditor.moduleLoader = new QuillLoader_1.default();
__decorate([
    office_ui_fabric_react_1.autobind
], QuillEditor.prototype, "focus", null);
__decorate([
    office_ui_fabric_react_1.autobind
], QuillEditor.prototype, "format", null);
__decorate([
    office_ui_fabric_react_1.autobind
], QuillEditor.prototype, "getSelection", null);
__decorate([
    office_ui_fabric_react_1.autobind
], QuillEditor.prototype, "_findWrappingElementByTagName", null);
__decorate([
    office_ui_fabric_react_1.autobind
], QuillEditor.prototype, "_handleSelectionChangeConvert", null);
exports.default = QuillEditor;


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(116);


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var QuillLoader = (function () {
    function QuillLoader() {
    }
    QuillLoader.prototype.loadModule = function () {
        if (!QuillLoader._quillPromise) {
            QuillLoader._quillPromise = new Promise(function (complete) {
                __webpack_require__.e/* require.ensure */(1).then((function (require) {
                    var quill = __webpack_require__(79);
                    QuillLoader._quillModule = quill;
                    complete(quill);
                }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);
            });
            QuillLoader._quillPromise.catch(function (error) {
                sp_telemetry_1._TraceLogger.logError(QuillLoader.logSource, error);
            });
        }
        return QuillLoader._quillPromise;
    };
    return QuillLoader;
}());
QuillLoader.logSource = sp_telemetry_1._LogSource.create('SPRteQuillLoader');
exports.default = QuillLoader;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(117);


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RteStrings_resx_1 = __webpack_require__(12);
var SPRteQuillConfiguration = (function () {
    function SPRteQuillConfiguration() {
        this._supportedFormatsArray = [
            {
                key: 'bold',
                editorKey: 'bold',
                browserKey: 'bold',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Bold',
                    shortcut: 'Ctrl+B',
                    title: RteStrings_resx_1.default.FormattingBarBoldButtonTitle
                }
            },
            {
                key: 'italic',
                editorKey: 'italic',
                browserKey: 'italic',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Italic',
                    shortcut: 'Ctrl+I',
                    title: RteStrings_resx_1.default.FormattingBarItalicButtonTitle
                }
            },
            {
                key: 'underline',
                editorKey: 'underline',
                browserKey: 'underline',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Underline',
                    shortcut: 'Ctrl+U',
                    title: RteStrings_resx_1.default.FormattingBarUnderlineButtonTitle
                }
            },
            {
                key: 'link',
                editorKey: 'link',
                isBlockStyle: false,
                isLine: false,
                isEditorNative: true,
                masks: ['underline'],
                button: {
                    canBeActive: true,
                    fabricIconKey: 'Link',
                    shortcut: 'Ctrl+K',
                    title: RteStrings_resx_1.default.FormattingBarLinkButtonTitle
                }
            },
            {
                key: 'alignLeft',
                editorKey: 'align',
                editorValue: false,
                browserKey: 'justifyLeft',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignLeft',
                    title: RteStrings_resx_1.default.FormattingBarAlignLeftButtonTitle
                }
            },
            {
                browserKey: 'justifyCenter',
                key: 'alignCenter',
                editorKey: 'align',
                editorValue: 'center',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignCenter',
                    title: RteStrings_resx_1.default.FormattingBarAlignCenterButtonTitle
                }
            },
            {
                key: 'alignRight',
                editorKey: 'align',
                editorValue: 'right',
                browserKey: 'justifyRight',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'AlignRight',
                    title: RteStrings_resx_1.default.FormattingBarAlignRightButtonTitle
                }
            },
            {
                key: 'bullet',
                editorKey: 'list',
                editorValue: 'bullet',
                browserKey: 'insertUnorderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'BulletedList',
                    title: RteStrings_resx_1.default.FormattingBarBulletListButtonTitle
                }
            },
            {
                key: 'list',
                editorKey: 'list',
                editorValue: 'ordered',
                browserKey: 'insertOrderedList',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    fabricIconKey: 'NumberedList',
                    title: RteStrings_resx_1.default.FormattingBarNumberedListButtonTitle
                }
            },
            {
                key: 'h2',
                editorKey: 'header',
                editorValue: 2,
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading2ButtonTitle,
                    className: 'ToolbarButton--h2'
                }
            },
            {
                key: 'h3',
                editorKey: 'header',
                editorValue: 3,
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading3ButtonTitle,
                    className: 'ToolbarButton--h3'
                }
            },
            {
                key: 'h4',
                editorKey: 'header',
                editorValue: 4,
                isBlockStyle: true,
                isLine: true,
                isEditorNative: false,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarHeading4ButtonTitle,
                    className: 'ToolbarButton--h4'
                }
            },
            {
                key: 'blockquote',
                editorKey: 'blockquote',
                isBlockStyle: true,
                isLine: true,
                isEditorNative: true,
                button: {
                    canBeActive: true,
                    title: RteStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    label: RteStrings_resx_1.default.FormattingBarQuoteButtonTitle,
                    className: 'ToolbarButton--blockquote'
                }
            },
            {
                key: 'indent',
                editorKey: 'indent',
                isBlockStyle: false,
                isLine: true,
                isEditorNative: true
            }
        ];
        this._formats = new Map();
        for (var _i = 0, _a = this._supportedFormatsArray; _i < _a.length; _i++) {
            var format = _a[_i];
            this._formats.set(format.key, format);
        }
        var maskingFormats = this._supportedFormatsArray.filter(function (format) { return !!format.masks; });
        for (var _b = 0, maskingFormats_1 = maskingFormats; _b < maskingFormats_1.length; _b++) {
            var maskingFormat = maskingFormats_1[_b];
            for (var _c = 0, _d = maskingFormat.masks; _c < _d.length; _c++) {
                var maskedFormatKey = _d[_c];
                var maskedFormat = this._formats.get(maskedFormatKey);
                if (!maskedFormat.maskedBy) {
                    maskedFormat.maskedBy = [maskingFormat.key];
                }
                else {
                    maskedFormat.maskedBy.push(maskingFormat.key);
                }
            }
        }
    }
    Object.defineProperty(SPRteQuillConfiguration.prototype, "editorElementClassName", {
        get: function () {
            return 'ql-editor';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteQuillConfiguration.prototype, "formats", {
        get: function () {
            return this._formats;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRteQuillConfiguration.prototype, "supportedFormatsArray", {
        get: function () {
            return this._supportedFormatsArray;
        },
        enumerable: true,
        configurable: true
    });
    return SPRteQuillConfiguration;
}());
exports.default = SPRteQuillConfiguration;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var SPRte_1 = __webpack_require__(60);
var office_ui_fabric_react_1 = __webpack_require__(0);
var SPRteTouchDevice = (function (_super) {
    __extends(SPRteTouchDevice, _super);
    function SPRteTouchDevice(props) {
        return _super.call(this, props) || this;
    }
    SPRteTouchDevice._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var left = isRtl ? 254 : undefined;
        var top = 198;
        var position = 'fixed';
        var right = undefined;
        return { left: left, top: top, position: position, right: right };
    };
    SPRteTouchDevice.prototype.componentWillUnmount = function () {
        _super.prototype.componentWillUnmount.call(this);
    };
    SPRteTouchDevice.prototype._afterEditorCreated = function (editor) {
        _super.prototype._afterEditorCreated.call(this, editor);
    };
    SPRteTouchDevice.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    SPRteTouchDevice.prototype._getFormattingBarPosition = function () {
        return SPRteTouchDevice._getFormattingBarDefaultPosition(this._isRtl);
    };
    SPRteTouchDevice.prototype._handleScroll = function () {
    };
    SPRteTouchDevice.prototype._handleSelectionChange = function (range, forceUpdate) {
        if (range) {
            this.setState({ currentSubmenuOpen: undefined });
            if (this._restoreOnFocus()) {
                this._updateFormattingBar(false);
                return;
            }
        }
        if (!range) {
            return;
        }
        else {
            this._updateSelection(range, forceUpdate);
        }
    };
    return SPRteTouchDevice;
}(SPRte_1.default));
__decorate([
    office_ui_fabric_react_1.autobind
], SPRteTouchDevice.prototype, "_handleSelectionChange", null);
exports.default = SPRteTouchDevice;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var CKTextEditor_1 = __webpack_require__(30);
var CKEditorForWebPartRte = (function (_super) {
    __extends(CKEditorForWebPartRte, _super);
    function CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback) {
        var _this = _super.call(this, config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startUpFocus, onReadyCallback) || this;
        _this._ckEditorConfig = {
            allowedContent: true,
            disableNativeSpellChecker: false,
            on: {
                change: _this._handleTextChange,
                selectionChange: _this._handleSelectionChangeConvert
            },
            removePlugins: 'toolbar,contextmenu,menubutton,scayt,liststyle,tabletools,magicline,link ,resize,autogrow,elementspath',
            extraPlugins: 'justify',
            removeButtons: '',
            stylesSet: false,
            toolbar: [],
            startupFocus: _this._startupFocus,
            fullPage: false,
            resize_enabled: false,
            width: '100%',
            height: 200
        };
        _this._initialize(currentHTML);
        return _this;
    }
    CKEditorForWebPartRte.createNewEditor = function (config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus) {
        return new Promise(function (resolve) {
            CKEditorForWebPartRte.moduleLoader.loadModule(config.editorSource).then(function () {
                var editor = new CKEditorForWebPartRte(config, currentHTML, editorElement, selectionChangeCallback, textChangeCallback, startupFocus, function () { resolve(editor); });
            }).catch(function (error) {
                sp_telemetry_1._TraceLogger.logError(CKEditorForWebPartRte.logSource, error);
            });
        });
    };
    CKEditorForWebPartRte.prototype._initialize = function (currentHTML) {
        if (!this._ckEditorConfig) {
            return;
        }
        var textPart = document.createElement('textarea');
        this._editorElement.appendChild(textPart);
        this._editor = CKEDITOR.replace(textPart, this._ckEditorConfig);
        this._editor.setData(currentHTML);
        this._addCustomToolbarCommands();
    };
    return CKEditorForWebPartRte;
}(CKTextEditor_1.default));
CKEditorForWebPartRte.logSource = sp_telemetry_1._LogSource.create('CKEditorForWebPartRte');
exports.default = CKEditorForWebPartRte;


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ReactDom = __webpack_require__(13);
var sp_telemetry_1 = __webpack_require__(5);
var odsp_utilities_bundle_1 = __webpack_require__(7);
var office_ui_fabric_react_1 = __webpack_require__(0);
var sp_lodash_subset_1 = __webpack_require__(11);
var BaseRte_1 = __webpack_require__(59);
var CKEditorForWebPartRte_1 = __webpack_require__(229);
var SPRteCKEditorConfiguration_1 = __webpack_require__(61);
var RteA11y_1 = __webpack_require__(28);
var RteStrings_resx_1 = __webpack_require__(12);
var WebPartRte = (function (_super) {
    __extends(WebPartRte, _super);
    function WebPartRte(props) {
        var _this = _super.call(this, props, WebPartRte.defaultOptions) || this;
        _this.TAG_NAME = 'WebPartRte.';
        return _this;
    }
    WebPartRte._getFormattingBarDefaultPosition = function (isRtl) {
        if (isRtl === void 0) { isRtl = false; }
        var left = isRtl ? undefined : 0;
        var top = -202;
        var position = 'relative';
        var right = isRtl ? 0 : undefined;
        return { left: left, top: top, position: position, right: right };
    };
    WebPartRte.prototype.focus = function () {
        _super.prototype.focus.call(this);
    };
    WebPartRte.prototype._initState = function () {
        this.state = {
            displayMode: this.props.displayMode,
            formattingBarPosition: WebPartRte._getFormattingBarDefaultPosition(this._isRtl),
            isFormattingBarHidden: false,
            isLinkDialogOpen: false
        };
    };
    WebPartRte.prototype._afterEditorCreated = function (editor) {
        this._editor = editor;
        this._handleTextChange();
        var formattingbarElement = ReactDom.findDOMNode(this._formattingbar);
        this._editorElement.style.position = 'relative';
        this._editorElement.style.top = formattingbarElement.offsetHeight + "px";
        formattingbarElement.style.top = "-" + this._editorElement.offsetHeight + "px";
        this._editorElement.setAttribute('aria-label', odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextEditorIframeTitle, this.props.ariaLabel || '', RteStrings_resx_1.default.RichTextEditorAriaLabel));
        var iframe = this._editorElement.querySelector('iframe');
        if (iframe) {
            iframe.contentDocument.addEventListener('paste', this._onBeforePaste, true);
            iframe.contentDocument.addEventListener('keydown', this._handleKeyDown);
        }
    };
    WebPartRte.prototype._finalizeAction = function (ariaActionName) {
        _super.prototype._finalizeAction.call(this, ariaActionName);
        if (this.props.onChanged) {
            this.props.onChanged(this._editor ? this._editor.getHTML() : this.props.innerHTML);
        }
    };
    WebPartRte.prototype._handleKeyDown = function (evt) {
        if (RteA11y_1.isKey(RteA11y_1.KeyCodes.F10, evt, true) && this._formattingbarElement) {
            sp_telemetry_1._EngagementLogger.logEvent(this.TAG_NAME + 'ToolbarByKeyboardShortcut.Focus', evt.type);
            RteA11y_1.navigateInside(this._formattingbarElement);
            var screenReaderInstruction = odsp_utilities_bundle_1.StringHelper.format(RteStrings_resx_1.default.RichTextNavigationAltF10Keys, RteStrings_resx_1.default.ToolbarNavigationArrowKeys, RteStrings_resx_1.default.ToolbarNavigationShiftTabKey);
            RteA11y_1.ariaAlert(screenReaderInstruction);
            evt.stopPropagation();
            evt.preventDefault();
        }
        else if (RteA11y_1.isKey('K'.charCodeAt(0), evt, false, true)) {
            this._handleLink();
            evt.stopPropagation();
            evt.preventDefault();
        }
        else {
            this._redispatchKeyboardEvent(evt);
        }
    };
    WebPartRte.prototype._redispatchKeyboardEvent = function (evt) {
        var emptyEvent = document.createEvent('Event');
        emptyEvent.initEvent(evt.type, true, true);
        var clonedEvent = sp_lodash_subset_1.merge(emptyEvent, {
            keyCode: evt.keyCode,
            code: evt.code,
            which: evt.which,
            altKey: evt.altKey,
            ctrlKey: evt.ctrlKey
        });
        if (this._editorElement) {
            this._editorElement.dispatchEvent(clonedEvent);
        }
    };
    return WebPartRte;
}(BaseRte_1.BaseRte));
WebPartRte.defaultOptions = {
    editor: CKEditorForWebPartRte_1.default,
    config: new SPRteCKEditorConfiguration_1.default(),
    loader: CKEditorForWebPartRte_1.default.moduleLoader
};
__decorate([
    office_ui_fabric_react_1.autobind
], WebPartRte.prototype, "_handleKeyDown", null);
exports.default = WebPartRte;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var decorators_1 = __webpack_require__(71);
var sp_core_library_1 = __webpack_require__(4);
var SuiteNavManagerConfiguration_1 = __webpack_require__(243);
var ApplicationCustomizerLoader_1 = __webpack_require__(233);
var BaseApplication = (function () {
    function BaseApplication() {
        this._shell = undefined;
        this._domElement = undefined;
        this._applicationCustomizerLoader = undefined;
        this['__type'] = 'BaseApplication';
    }
    Object.defineProperty(BaseApplication.prototype, "shell", {
        get: function () {
            return this._shell;
        },
        set: function (value) {
            throw new Error('The property cannot be assigned because it is read-only');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseApplication.prototype, "domElement", {
        get: function () {
            return this._domElement;
        },
        set: function (value) {
            throw new Error('The property cannot be assigned because it is read-only');
        },
        enumerable: true,
        configurable: true
    });
    BaseApplication.prototype._load = function (shell) {
        this._shell = shell;
        this.onLoad();
    };
    BaseApplication.prototype.onLoad = function () {
    };
    BaseApplication.prototype._render = function (domElement) {
        this._domElement = domElement;
        this.onRender();
        if (this._shell.manifestPreloads.clientSideApplicationId !== BaseApplication.classicPagesComponentId
            && this._shell.manifestPreloads.clientSideApplicationId !== BaseApplication.workbenchComponentId) {
            this._loadApplicationCustomizers();
        }
    };
    BaseApplication.prototype.onRender = function () {
    };
    BaseApplication.prototype.getBrowserCompatibility = function () {
        return {
            supportLevel: sp_core_library_1.BrowserSupportLevel.None,
            warning: undefined
        };
    };
    BaseApplication.prototype.suiteNavConfiguration = function () {
        return new SuiteNavManagerConfiguration_1.default({
            currentUICultureName: this._shell.pageContext.cultureInfo.currentUICultureName,
            disableSuiteNav: this._shouldDisableSuiteNav(),
            settingsData: this._shell.pageContext.legacyPageContext.MenuData ?
                this._shell.pageContext.legacyPageContext.MenuData.SettingsData :
                undefined,
            signoutUrl: this._shell.pageContext.legacyPageContext.MenuData ?
                this._shell.pageContext.legacyPageContext.MenuData.SignOutUrl :
                undefined,
            siteClientTag: this._shell.pageContext.legacyPageContext.siteClientTag,
            systemUserKey: this._shell.pageContext.legacyPageContext.systemUserKey,
            webServerRelativeUrl: this._shell.pageContext.web.serverRelativeUrl
        });
    };
    BaseApplication.prototype._shouldDisableSuiteNav = function () {
        var urlQueryParams = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        return window.location.hostname === 'localhost' ||
            urlQueryParams.getValue('disableSuiteNav') === 'true' ?
            true :
            false;
    };
    BaseApplication.prototype._loadApplicationCustomizers = function () {
        if (true) {
            this._applicationCustomizerLoader =
                new ApplicationCustomizerLoader_1.default(this.shell.serviceScope, this.shell.pageContext, this.shell.spHttpClient, this.shell.manifestPreloads.customActions);
            this._applicationCustomizerLoader.loadExtensions();
            this._applicationCustomizerLoader.notifyRendered();
        }
        else {
            sp_telemetry_1._TraceLogger.logVerbose(BaseApplication.logSource, 'Application Customizer is not supported for OnPrem and local workbench.');
        }
    };
    return BaseApplication;
}());
BaseApplication.classicPagesComponentId = 'eb4b666b-5c29-4dad-9a99-23613f21a2b7';
BaseApplication.workbenchComponentId = '8be81a5c-af38-4bb2-af97-afa3b64dfbed';
BaseApplication.logSource = sp_telemetry_1._LogSource.create('BaseApplication');
__decorate([
    decorators_1.virtual
], BaseApplication.prototype, "getBrowserCompatibility", null);
exports.default = BaseApplication;


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var SPGlobalErrorHandler = (function () {
    function SPGlobalErrorHandler() {
    }
    SPGlobalErrorHandler.basicTracingHandler = function (message, filename, lineno, colno, error) {
        var eventName = 'window.onerror';
        if (SPGlobalErrorHandler._isFromFile(filename, 'QUILL')) {
            SPGlobalErrorHandler._logErrorFromFile(message, lineno, colno, error, eventName, SPGlobalErrorHandler._quillLogSource);
        }
        else if (SPGlobalErrorHandler._isFromFile(filename, 'CKEDITOR')) {
            SPGlobalErrorHandler._logErrorFromFile(message, lineno, colno, error, eventName, SPGlobalErrorHandler._ckLogSource);
        }
        else {
            var genericError = error ||
                new Error("Error:" + message + ", file:" + filename + ", line:" + lineno + ", column:" + colno);
            sp_telemetry_1._TraceLogger.logError(SPGlobalErrorHandler._genericLogSource, genericError, eventName);
        }
    };
    SPGlobalErrorHandler._isFromFile = function (filename, match) {
        return filename && filename.toUpperCase().indexOf(match) !== -1;
    };
    SPGlobalErrorHandler._logErrorFromFile = function (message, lineno, colno, error, eventName, logSource) {
        var fileError = error ||
            new Error("Error:" + message + ", line:" + lineno + ", column:" + colno);
        sp_telemetry_1._TraceLogger.logError(logSource, fileError, eventName);
    };
    return SPGlobalErrorHandler;
}());
SPGlobalErrorHandler._quillLogSource = sp_telemetry_1._LogSource.create('QuillGlobalError');
SPGlobalErrorHandler._ckLogSource = sp_telemetry_1._LogSource.create('CKGlobalError');
SPGlobalErrorHandler._genericLogSource = sp_telemetry_1._LogSource.create('OtherGlobalError');
exports.default = SPGlobalErrorHandler;


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_1 = __webpack_require__(4);
var sp_extension_base_1 = __webpack_require__(33);
var BaseApplicationCustomizer_1 = __webpack_require__(64);
var ApplicationCustomizerContext_1 = __webpack_require__(63);
var ClientSideCustomAction_1 = __webpack_require__(234);
var PlaceholderManager_1 = __webpack_require__(31);
var ApplicationCustomizerLoader = (function () {
    function ApplicationCustomizerLoader(serviceScope, pageContext, spHttpClient, customActions) {
        var _this = this;
        this._customActionContext = new ClientSideCustomAction_1.ClientSideCustomActionContext();
        sp_core_library_1.Validate.isNotNullOrUndefined(serviceScope, 'serviceScope');
        sp_core_library_1.Validate.isNotNullOrUndefined(pageContext, 'pageContext');
        sp_core_library_1.Validate.isNotNullOrUndefined(spHttpClient, 'spHttpClient');
        this._extensionManager = new sp_extension_base_1._ExtensionManager(serviceScope, BaseApplicationCustomizer_1.default);
        this._pageContext = pageContext;
        this._spHttpClient = spHttpClient;
        this._customActions = customActions ? customActions : [];
        for (var _i = 0, _a = this._customActions; _i < _a.length; _i++) {
            var customAction = _a[_i];
            if (customAction.location === ClientSideCustomAction_1.CustomActionLocations.APPLICATION_CUSTOMIZER) {
                var clientSideCustomAction = ClientSideCustomAction_1.default._tryCreateFromPreloadedCustomAction(customAction);
                if (clientSideCustomAction) {
                    this._customActionContext.customActions.push(clientSideCustomAction);
                }
            }
        }
        serviceScope.whenFinished(function () {
            _this._placeholderManager = serviceScope.consume(PlaceholderManager_1.default.serviceKey);
        });
    }
    ApplicationCustomizerLoader.prototype.loadExtensions = function () {
        this._parseCustomActionsQueryParameter();
        var customActions = this._customActionContext.getAll();
        for (var _i = 0, customActions_1 = customActions; _i < customActions_1.length; _i++) {
            var customAction = customActions_1[_i];
            if (customAction.location === ClientSideCustomAction_1.CustomActionLocations.APPLICATION_CUSTOMIZER) {
                this._createApplicationCustomizer(customAction);
            }
        }
    };
    ApplicationCustomizerLoader.prototype.notifyRendered = function () {
        this._extensionManager.waitForInitialization()
            .then(function (extensions) {
            for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {
                var extension = extensions_1[_i];
                try {
                    extension.onRender();
                }
                catch (error) {
                    var manifest = extension.context.manifest;
                    sp_telemetry_1._TraceLogger.logError(ApplicationCustomizerLoader._logSource, new Error("The onRender() API threw an exception for application customizer '" + manifest.alias + "'. Error information is '" + error.message + ".")); 
                }
            }
        });
    };
    ApplicationCustomizerLoader.prototype._createApplicationCustomizer = function (customAction) {
        this._extensionManager.createExtension(customAction.clientSideComponentId.toString(), customAction.clientSideComponentProperties, function (extensionContextParameters) {
            return new ApplicationCustomizerContext_1.default(extensionContextParameters, {});
        }).catch(function (error) {
            sp_telemetry_1._TraceLogger.logError(ApplicationCustomizerLoader._logSource, new Error("Failed to create application customizer '" + customAction.tag + "'. Error information is '" + error.message + "'.")); 
        });
    };
    ApplicationCustomizerLoader.prototype._parseCustomActionsQueryParameter = function () {
        var parameters = new sp_core_library_1.UrlQueryParameterCollection(window.location.href);
        var parameterValue = parameters.getValue('customActions');
        if (parameterValue) {
            try {
                var decodedParameterValue = decodeURIComponent(parameterValue);
                var queryValue = JSON.parse(decodedParameterValue);
                if (queryValue) {
                    for (var _i = 0, _a = Object.keys(queryValue); _i < _a.length; _i++) {
                        var key = _a[_i];
                        var clientSideComponentId = sp_core_library_1.Guid.tryParse(key);
                        var location_1 = queryValue[key].location;
                        var properties = queryValue[key].properties;
                        this._customActionContext.debugCustomActions.push(ClientSideCustomAction_1.default._tryCreateFromDebugData(location_1, clientSideComponentId, properties ? JSON.stringify(properties) : ''));
                    }
                }
            }
            catch (e) {
                sp_telemetry_1._TraceLogger.logError(ApplicationCustomizerLoader._logSource, new Error('Failed to parse the "customActions" URL query parameter:' + e.message));
                console.error('The "customActions" URL query parameter is improperly formatted: '
                    + decodeURIComponent(parameterValue));
            }
        }
    };
    return ApplicationCustomizerLoader;
}());
ApplicationCustomizerLoader._logSource = sp_telemetry_1._LogSource.create('ApplicationCustomizerLoader');
exports.default = ApplicationCustomizerLoader;


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var sp_page_context_1 = __webpack_require__(23);
var sp_core_library_1 = __webpack_require__(4);
var ClientSideCustomAction = (function () {
    function ClientSideCustomAction() {
    }
    ClientSideCustomAction._tryCreateFromPreloadedCustomAction = function (customAction) {
        var typedCustomAction = undefined;
        try {
            typedCustomAction = new ClientSideCustomAction();
            sp_core_library_1.Validate.isNonemptyString(customAction.clientSideComponentId, 'customAction.clientSideComponentId');
            sp_core_library_1.Validate.isNonemptyString(customAction.location, 'customAction.location');
            typedCustomAction.title = customAction.title;
            typedCustomAction.location = customAction.location;
            typedCustomAction.clientSideComponentId = sp_core_library_1.Guid.parse(customAction.clientSideComponentId);
            typedCustomAction.clientSideComponentProperties = customAction.clientSideComponentProperties;
            typedCustomAction.registrationType = customAction.registrationType;
            typedCustomAction.registrationId = customAction.registrationId;
            typedCustomAction.sequence = customAction.sequence;
            typedCustomAction.requireSiteAdministrator = customAction.requireSiteAdministrator;
            var rights = customAction.rights;
            if (rights && rights.High !== undefined && rights.Low !== undefined) {
                typedCustomAction.rights = new sp_page_context_1.SPPermission(customAction.rights);
            }
            else {
                sp_telemetry_1._TraceLogger.logVerbose(ClientSideCustomAction._logSource, "The rights object has invalid format. One of High or Low fields cannot be undefined. Object value is '" + JSON.stringify(rights)); 
            }
        }
        catch (error) {
            sp_telemetry_1._TraceLogger.logError(ClientSideCustomAction._logSource, new Error("Failed to create client side custom action. Error information is " + error.message)); 
        }
        return typedCustomAction;
    };
    ClientSideCustomAction._tryCreateFromDebugData = function (location, clientSideComponentId, clientSideComponentProperties) {
        sp_core_library_1.Validate.isNotNullOrUndefined(clientSideComponentId, 'clientSideComponentId');
        sp_core_library_1.Validate.isNonemptyString(location, 'location');
        var customAction = new ClientSideCustomAction();
        customAction.location = location;
        customAction.clientSideComponentId = clientSideComponentId;
        customAction.clientSideComponentProperties = clientSideComponentProperties;
        return customAction;
    };
    Object.defineProperty(ClientSideCustomAction.prototype, "tag", {
        get: function () {
            return this.location + "." + this.clientSideComponentId.toString();
        },
        enumerable: true,
        configurable: true
    });
    return ClientSideCustomAction;
}());
ClientSideCustomAction._logSource = sp_telemetry_1._LogSource.create('ClientSideCustomAction');
exports.default = ClientSideCustomAction;
var ClientSideCustomActionContext = (function () {
    function ClientSideCustomActionContext() {
        this.customActions = [];
        this.debugCustomActions = [];
    }
    ClientSideCustomActionContext.prototype.getAll = function () {
        return this.debugCustomActions.concat(this.customActions);
    };
    return ClientSideCustomActionContext;
}());
exports.ClientSideCustomActionContext = ClientSideCustomActionContext;
var CustomActionLocations = (function () {
    function CustomActionLocations() {
    }
    return CustomActionLocations;
}());
CustomActionLocations.APPLICATION_CUSTOMIZER = 'ClientSideExtension.ApplicationCustomizer';
CustomActionLocations.LISTVIEW_COMMANDSET_CONTEXTMENU = 'ClientSideExtension.ListViewCommandSet.ContextMenu';
CustomActionLocations.LISTVIEW_COMMANDSET_COMMANDBAR = 'ClientSideExtension.ListViewCommandSet.CommandBar';
CustomActionLocations.LISTVIEW_COMMANDSET_DEFAULT = 'ClientSideExtension.ListViewCommandSet';
exports.CustomActionLocations = CustomActionLocations;


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(118);
var styles = {
    spPageContentTransition: 'spPageContentTransition_68c35b48',
};
exports.default = styles;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var odsp_utilities_bundle_1 = __webpack_require__(7);
var odsp_utilities_bundle_2 = __webpack_require__(7);
var odsp_utilities_bundle_3 = __webpack_require__(7);
var sp_telemetry_1 = __webpack_require__(5);
var sp_http_1 = __webpack_require__(20);
var sp_page_context_1 = __webpack_require__(23);
var SPWebTemplateIds_1 = __webpack_require__(237);
var load_themed_styles_1 = __webpack_require__(2);
var SPThemeProvider = (function () {
    function SPThemeProvider(serviceScope) {
        var _this = this;
        if (true) {
            window['__loadTheme'] = load_themed_styles_1.loadTheme; 
        }
        serviceScope.whenFinished(function () {
            _this._pageContext = serviceScope.consume(sp_page_context_1.PageContext.serviceKey);
            _this._httpClient = serviceScope.consume(sp_http_1.SPHttpClient.serviceKey);
            _this._themeProvider = new odsp_utilities_bundle_3.ThemeProvider(_this.loadData.bind(_this));
            try {
                var contextUri = new odsp_utilities_bundle_3.Uri(window.location.href);
                _this._themeOverride = contextUri.getQueryParameter('ThemeOverride');
            }
            catch (ignoredUrlException) {
            }
        });
    }
    SPThemeProvider.prototype.loadThemedStyles = function () {
        var cacheToken = this.getCacheToken();
        this._themeProvider.loadThemeTokenMap(cacheToken)
            .then(function (palette) {
            load_themed_styles_1.loadTheme(palette);
        });
    };
    SPThemeProvider.prototype.loadData = function () {
        var _this = this;
        var tagName = 'SPThemeProvider.loadData';
        var qosMonitor = new sp_telemetry_1._QosMonitor(tagName);
        if (this._pageContext.legacyPageContext.themedCssFolderUrl) {
            var getThemeDataUrl_1 = odsp_utilities_bundle_3.WebTheme.makeWebThemeRestUrl(this._pageContext.site.serverRelativeUrl, this._pageContext.cultureInfo.currentUICultureName, this._themeOverride);
            return new odsp_utilities_bundle_1.Promise(function (resolve, reject) {
                _this._httpClient.get(getThemeDataUrl_1, sp_http_1.SPHttpClient.configurations.v1)
                    .then(function (response) {
                    if (response.status === 200) {
                        return response.json()
                            .then(function (json) {
                            var themeDataRaw = JSON.parse(json.value);
                            if (themeDataRaw) {
                                var themeData = odsp_utilities_bundle_3.WebTheme.processRawThemeData(themeDataRaw);
                                themeData.cacheToken = _this._pageContext.legacyPageContext.themedCssFolderUrl;
                                qosMonitor.writeSuccess();
                                resolve(themeData);
                            }
                            else {
                                qosMonitor.writeUnexpectedFailure();
                                resolve(undefined);
                            }
                        });
                    }
                    else {
                        qosMonitor.writeUnexpectedFailure(tagName, new Error(response.statusText));
                        resolve(undefined);
                    }
                });
            });
        }
        else if (this._pageContext.legacyPageContext.groupColor) {
            var htmlThemeColor = this._pageContext.legacyPageContext.groupColor;
            var rgbaThemeColor = odsp_utilities_bundle_2.RgbaColor.fromHtmlColor(htmlThemeColor);
            if (rgbaThemeColor) {
                var fabTheme = {
                    backgroundImageUri: undefined,
                    cacheToken: this.getCacheToken(),
                    isDefault: false,
                    isInverted: false,
                    palette: odsp_utilities_bundle_2.FabricTheming.generateFabricColors(rgbaThemeColor),
                    version: '1'
                };
                return odsp_utilities_bundle_1.Promise.wrap(fabTheme);
            }
            else {
                return odsp_utilities_bundle_1.Promise.wrap();
            }
        }
        else {
            qosMonitor.writeSuccess();
            return odsp_utilities_bundle_1.Promise.wrap(this.createDefaultTheme());
        }
    };
    SPThemeProvider.prototype.createDefaultTheme = function () {
        var themeData = {
            backgroundImageUri: undefined,
            cacheToken: undefined,
            isDefault: undefined,
            isInverted: false,
            palette: undefined,
            version: '1.0'
        };
        return themeData;
    };
    SPThemeProvider.prototype.getCacheToken = function () {
        var webTemplate = String(this._pageContext.web.templateName);
        var groupColor = webTemplate === SPWebTemplateIds_1.default.teamSite ||
            webTemplate === SPWebTemplateIds_1.default.groupSite ? this._pageContext.legacyPageContext.groupColor : undefined;
        var groupColorToken = groupColor && (groupColor + ';web#' + webTemplate);
        return this._themeOverride || this._pageContext.legacyPageContext.themedCssFolderUrl || groupColorToken;
    };
    return SPThemeProvider;
}());
exports.default = SPThemeProvider;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SPWebTemplateIds = (function () {
    function SPWebTemplateIds() {
    }
    return SPWebTemplateIds;
}());
SPWebTemplateIds.teamSite = '1';
SPWebTemplateIds.groupSite = '64';
exports.default = SPWebTemplateIds;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var sp_core_library_1 = __webpack_require__(4);
var sp_page_context_1 = __webpack_require__(23);
var sp_http_1 = __webpack_require__(20);
var SuiteNavManager_1 = __webpack_require__(69);
var SPPageChrome_1 = __webpack_require__(68);
var Shell = (function () {
    function Shell() {
    }
    Shell.getInstance = function () {
        if (Shell._instance === undefined) {
            Shell._instance = new Shell();
        }
        return Shell._instance;
    };
    Object.defineProperty(Shell.prototype, "serviceScope", {
        get: function () {
            return this._rootServiceScope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "pageContext", {
        get: function () {
            return this._pageContext;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "httpClient", {
        get: function () {
            return this._httpClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "spHttpClient", {
        get: function () {
            return this._spHttpClient;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "suiteNavManager", {
        get: function () {
            return this._suiteNav;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "environment", {
        get: function () {
            return this._environment;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "manifestPreloads", {
        get: function () {
            return this._manifestPreloads;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Shell.prototype, "pageManager", {
        get: function () {
            return this._pageManager;
        },
        enumerable: true,
        configurable: true
    });
    Shell.prototype.start = function (module, preloadedData) {
        var application = module.default ||
            module;
        this._initializePreload(preloadedData, application);
        sp_telemetry_1._PerformanceLogger.markApplicationStart();
        return this._startApplication(application, preloadedData);
    };
    Shell.prototype._startApplication = function (application, preloadedData) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            if (application['__type'] !== 'BaseApplication') {
                reject(new Error('The application is not a subclass of BaseApplication'));
                return;
            }
            var qosMonitor = new sp_telemetry_1._QosMonitor('ClientApplication');
            var qosApplicationData = {
                alias: application.alias || preloadedData.manifests[0].alias,
                isInternal: preloadedData.manifests[0].isInternal,
                manifestId: preloadedData.manifests[0].id
            };
            try {
                _this._application = application;
                _this._application._load(_this);
                if (sp_core_library_1.Environment.type !== sp_core_library_1.EnvironmentType.ClassicSharePoint) {
                    _this._spPageChrome = SPPageChrome_1.default.getInstance(_this._rootServiceScope);
                    _this._suiteNav = new SuiteNavManager_1.default(_this._application.suiteNavConfiguration(), _this._spPageChrome.suiteNavDiv, _this.serviceScope);
                    if (!_this._application.suiteNavConfiguration().isSuiteNavDisabled()) {
                        _this.suiteNavManager.loadSuiteNav();
                    }
                    _this._application._render(_this._spPageChrome.appDiv);
                }
                qosMonitor.writeSuccess(qosApplicationData);
                resolve(_this._application);
            }
            catch (e) {
                qosMonitor.writeUnexpectedFailure('GeneralError', e, qosApplicationData);
                reject(e);
            }
        });
    };
    Shell.prototype._initializePreload = function (preloadedData, application) {
        sp_telemetry_1._TraceLogger.logVerbose(Shell._logSource, 'Starting sp-client-preview');
        this._rootServiceScope = sp_core_library_1.ServiceScope.startNewRoot();
        this._rootServiceScope.provide(sp_telemetry_1._logSourceServiceKey, Shell._logSource);
        this._pageManager = this._rootServiceScope
            .createDefaultAndProvide(sp_page_context_1.PageManager.serviceKey);
        this._pageContext = this._rootServiceScope
            .createDefaultAndProvide(sp_page_context_1.PageContext.serviceKey);
        this._httpClient = this._rootServiceScope.createAndProvide(sp_http_1.HttpClient.serviceKey, sp_http_1.HttpClient);
        this._spHttpClient = this._rootServiceScope.createAndProvide(sp_http_1.SPHttpClient.serviceKey, sp_http_1.SPHttpClient);
        var graphContext;
        if (true) {
            this._rootServiceScope.createAndProvide(sp_http_1.GraphHttpClient.serviceKey, sp_http_1.GraphHttpClient);
            graphContext = this._rootServiceScope.createAndProvide(sp_http_1._GraphHttpClientContext.serviceKey, sp_http_1._GraphHttpClientContext);
        }
        this._rootServiceScope.finish();
        var INVALID_PAGE_ITEM_ID = -1;
        if (preloadedData.spPageContextInfo.pageItemId === INVALID_PAGE_ITEM_ID &&
            preloadedData.item &&
            preloadedData.item.ID !== INVALID_PAGE_ITEM_ID) {
            preloadedData.spPageContextInfo.pageItemId = preloadedData.item.ID;
        }
        this._pageManager.navigateToPage(preloadedData.spPageContextInfo.webServerRelativeUrl, 
        sp_page_context_1.SharePointPageContextDataProvider._createPageContextData(preloadedData.spPageContextInfo), 
        preloadedData.spPageContextInfo);
        if (true) {
            graphContext.initialize(this._pageManager.pageContext.web.serverRelativeUrl);
        }
        this._initializeDigestCache(this._rootServiceScope, preloadedData);
        this._manifestPreloads = preloadedData;
        this._manifestPreloads.spPageContextInfo = undefined;
    };
    Shell.prototype._initializeDigestCache = function (serviceScope, preloadedData) {
        if (preloadedData.contextWebInfo && preloadedData.spPageContextInfo) {
            serviceScope.whenFinished(function () {
                var digestCache = serviceScope.consume(sp_http_1.DigestCache.serviceKey);
                sp_telemetry_1._TraceLogger.logVerbose(Shell._logSource, 'Shell: Added preloaded FormDigestValue to cache');
                var expirationTimestamp = performance.now()
                    + 1000 * preloadedData.contextWebInfo.FormDigestTimeoutSeconds;
                digestCache.addDigestToCache(preloadedData.spPageContextInfo.webServerRelativeUrl, preloadedData.contextWebInfo.FormDigestValue, expirationTimestamp);
                digestCache.addDigestToCache(preloadedData.spPageContextInfo.webAbsoluteUrl, preloadedData.contextWebInfo.FormDigestValue, expirationTimestamp);
            });
        }
    };
    return Shell;
}());
Shell._logSource = sp_telemetry_1._LogSource.create('Shell');
Shell._instance = undefined;
exports.default = Shell;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Shell_1 = __webpack_require__(238);
var _spShell = Shell_1.default.getInstance();
exports.default = _spShell;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sp_telemetry_1 = __webpack_require__(5);
var FlexPaneWrapper = (function () {
    function FlexPaneWrapper() {
    }
    FlexPaneWrapper.prototype.OnFlexPaneVisibilityChanged = function (callback) {
        try {
            return O365Shell.FlexPane.OnFlexPaneVisibilityChanged(callback);
        }
        catch (e) {
            this._createFlexPaneWrapperErrorLogEntry('OnFlexPaneVisibilityChanged', e);
        }
    };
    FlexPaneWrapper.prototype.OpenFlexPaneForProvider = function (provider) {
        try {
            O365Shell.FlexPane.OpenFlexPaneForProvider(provider);
        }
        catch (e) {
            this._createFlexPaneWrapperErrorLogEntry('OpenFlexPaneForProvider', e);
        }
    };
    FlexPaneWrapper.prototype._createFlexPaneWrapperErrorLogEntry = function (moduleName, errorMessage) {
        sp_telemetry_1._TraceLogger.logVerbose(FlexPaneWrapper.logSource, 'FlexPaneWrapper ' + moduleName + ' ' + errorMessage);
    };
    return FlexPaneWrapper;
}());
FlexPaneWrapper.logSource = sp_telemetry_1._LogSource.create('FlexPaneWrapper');
exports.default = FlexPaneWrapper;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var NavigationWrapper = (function () {
    function NavigationWrapper() {
    }
    NavigationWrapper.prototype.OnLinkClick = function (callback) {
        return O365Shell.Navigation.OnLinkClick(callback);
    };
    NavigationWrapper.prototype.OnHamburgerButtonClick = function (callback) {
        return O365Shell.Navigation.OnHamburgerButtonClick(callback);
    };
    return NavigationWrapper;
}());
exports.default = NavigationWrapper;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var FlexPaneWrapper_1 = __webpack_require__(240);
var NavigationWrapper_1 = __webpack_require__(241);
var O365ShellWrapper = (function () {
    function O365ShellWrapper() {
        this._postRenderSignal = new Promise(function () {
            return;
        });
        this.FlexPane = new FlexPaneWrapper_1.default();
        this.Navigation = new NavigationWrapper_1.default();
    }
    O365ShellWrapper.prototype.SetData = function (shellData) {
        O365Shell.SetData(shellData);
    };
    O365ShellWrapper.prototype.Render = function (renderSettings, postRendercallback) {
        O365Shell.Render(renderSettings, postRendercallback);
    };
    O365ShellWrapper.prototype.RenderAsync = function (renderSettings, renderCallback, postRenderCallback) {
        O365Shell.RenderAsync(renderSettings, renderCallback, postRenderCallback);
    };
    O365ShellWrapper.prototype.LoadShellPlus = function () {
        O365Shell.LoadShellPlus();
    };
    O365ShellWrapper.prototype.DoesShellExist = function () {
        return typeof O365Shell !== 'undefined';
    };
    O365ShellWrapper.prototype.OnHasMember = function (memberName, callback) {
        var _this = this;
        if (this._hasMember(memberName)) {
            callback();
        }
        else {
            this._postRenderSignal.then(function () { return _this.OnHasMember(memberName, callback); });
        }
    };
    O365ShellWrapper.prototype._hasMember = function (memberName) {
        return this.DoesShellExist() && Boolean(O365Shell[memberName]);
    };
    return O365ShellWrapper;
}());
exports.default = O365ShellWrapper;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavLinkIds_1 = __webpack_require__(246);
var SuiteNavManagerConfiguration = (function () {
    function SuiteNavManagerConfiguration(suiteNavConfig) {
        this._currentUICultureName = suiteNavConfig.currentUICultureName;
        this._settingsLinks = suiteNavConfig.settingsData;
        this._signoutUrl = suiteNavConfig.signoutUrl;
        this._siteClientTag = suiteNavConfig.siteClientTag;
        this._systemUserKey = suiteNavConfig.systemUserKey;
        this._webServerRelativeUrl = suiteNavConfig.webServerRelativeUrl;
        this._isSuiteNavDisabled = suiteNavConfig.disableSuiteNav ? true : false;
        this._o365ShellRenderSettings = {
            disableDelayLoad: false,
            disableShellPlus: false,
            layout: 'Mouse',
            top: undefined
        };
        this._hamburgerMenuCallback = undefined;
        this._suiteNavPostRenderCallback = undefined;
    }
    SuiteNavManagerConfiguration.prototype.isSuiteNavDisabled = function () {
        return this._isSuiteNavDisabled;
    };
    SuiteNavManagerConfiguration.prototype.disableSuiteNav = function () {
        this._isSuiteNavDisabled = true;
    };
    SuiteNavManagerConfiguration.prototype.modifySuiteNavData = function (suiteNavData) {
        suiteNavData.CurrentMainLinkElementID = SuiteNavLinkIds_1.default.SITES;
        suiteNavData.CurrentWorkloadSettingsSubLinks =
            this._settingsLinks && this._settingsLinks.length > 0 ? this._settingsLinks : undefined;
        suiteNavData.FeedbackLink = undefined;
        if (suiteNavData.SignOutLink) {
            suiteNavData.SignOutLink.Url = this._signoutUrl;
        }
        if (suiteNavData.HelpLink) {
            suiteNavData.HelpLink.Url = 'https://go.microsoft.com/fwlink/p/?linkid=827181';
        }
        return suiteNavData;
    };
    ;
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "systemUserKey", {
        get: function () {
            return this._systemUserKey || '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "cacheToken", {
        get: function () {
            var clientTag = this._siteClientTag;
            if (clientTag !== undefined) {
                return clientTag.substring(0, clientTag.indexOf('$$'));
            }
            return '';
        },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "o365ShellRenderSettings", {
        get: function () {
            return this._o365ShellRenderSettings;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "currentUICultureName", {
        get: function () {
            return this._currentUICultureName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "webServerRelativeUrl", {
        get: function () {
            return this._webServerRelativeUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "hamburgerCallback", {
        get: function () {
            return this._hamburgerMenuCallback;
        },
        set: function (hamburgerCallback) {
            this._hamburgerMenuCallback = hamburgerCallback;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SuiteNavManagerConfiguration.prototype, "suiteNavPostRenderCallback", {
        get: function () {
            return this._suiteNavPostRenderCallback;
        },
        set: function (suiteNavPostRenderCallback) {
            this._suiteNavPostRenderCallback = suiteNavPostRenderCallback;
        },
        enumerable: true,
        configurable: true
    });
    return SuiteNavManagerConfiguration;
}());
exports.default = SuiteNavManagerConfiguration;


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavManager_1 = __webpack_require__(69);
var ISuiteNavDataSource_1 = __webpack_require__(32);
var sp_telemetry_1 = __webpack_require__(5);
var sp_http_1 = __webpack_require__(20);
var OnPremSuiteNavDataSource = (function () {
    function OnPremSuiteNavDataSource(httpClient, currentUICultureName, webServerRelativeUrl) {
        this.suiteNavService = ISuiteNavDataSource_1.SuiteNavSource.OnPrem;
        this._currentUICultureName = currentUICultureName;
        this._spHttpClient = httpClient;
        this._siteRelUrl = webServerRelativeUrl === '/' ? '' : webServerRelativeUrl;
    }
    OnPremSuiteNavDataSource.prototype.loadData = function () {
        var _this = this;
        var url = this._siteRelUrl
            + '/_api/Microsoft.SharePoint.Portal.SuiteNavData.GetSuiteNavData?v=2&Locale='
            + this._currentUICultureName;
        return this._spHttpClient.get(url, sp_http_1.SPHttpClient.configurations.v1)
            .then(function (response) {
            if (response.status !== 200) {
                _this._logAndThrowSuiteNavLoadingError();
            }
            return response.json().then(function (jsonString) {
                if (jsonString.value === '') {
                    _this._logAndThrowSuiteNavLoadingError();
                }
                else {
                    var suiteNavResponse = JSON.parse(jsonString.value);
                    if (!suiteNavResponse.NavBarData.Dimensions) {
                        suiteNavResponse.NavBarData.Dimensions = { Top: SuiteNavManager_1.default._defaultSuiteNavHeight };
                    }
                    return suiteNavResponse;
                }
            });
        });
    };
    OnPremSuiteNavDataSource.prototype._logAndThrowSuiteNavLoadingError = function () {
        sp_telemetry_1._TraceLogger.logVerbose(OnPremSuiteNavDataSource._logSource, 'Failed to retrieve Hybrid SuiteNavData');
        throw new Error('Failed to retrieve Hybrid SuiteNavData');
    };
    return OnPremSuiteNavDataSource;
}());
OnPremSuiteNavDataSource._logSource = sp_telemetry_1._LogSource.create('OnPremSuiteNavDataSource');
exports.default = OnPremSuiteNavDataSource;


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ISuiteNavDataSource_1 = __webpack_require__(32);
var sp_telemetry_1 = __webpack_require__(5);
var sp_http_1 = __webpack_require__(20);
var SPOSuiteNavDataSource = (function () {
    function SPOSuiteNavDataSource(httpClient, currentUICultureName, webServerRelativeUrl) {
        this.suiteNavService = ISuiteNavDataSource_1.SuiteNavSource.SPO;
        this._currentUICultureName = currentUICultureName;
        this._spHttpClient = httpClient;
        this._siteRelUrl = webServerRelativeUrl === '/' ? '' : webServerRelativeUrl;
    }
    SPOSuiteNavDataSource.prototype.loadData = function () {
        var url = this._siteRelUrl
            + '/_layouts/15/online/handlers/SpoSuiteLinks.ashx?Locale='
            + this._currentUICultureName
            + '&v=2&mobilereq=0&msajax=1';
        return this._spHttpClient.post(url, sp_http_1.SPHttpClient.configurations.v1, {})
            .then(function (response) {
            if (response.status !== 200 || response.headers.get('SharePointError')) {
                sp_telemetry_1._TraceLogger.logVerbose(SPOSuiteNavDataSource._logSource, 'Failed to retrieve SPO SuiteNavData');
                return Promise.reject('Failed to retrieve SPO SuiteNavData');
            }
            return response.json().then(function (jsonResponse) {
                return jsonResponse;
            });
        });
    };
    return SPOSuiteNavDataSource;
}());
SPOSuiteNavDataSource._logSource = sp_telemetry_1._LogSource.create('SPOSuiteNavDataSource');
exports.default = SPOSuiteNavDataSource;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SuiteNavLinkIds = (function () {
    function SuiteNavLinkIds() {
    }
    return SuiteNavLinkIds;
}());
SuiteNavLinkIds.CUSTOM_SETTINGS_1 = 'WorkloadSettingsSubLinks1';
SuiteNavLinkIds.CUSTOM_SETTINGS_2 = 'WorkloadSettingsSubLinks2';
SuiteNavLinkIds.CUSTOM_SETTINGS_3 = 'WorkloadSettingsSubLinks3';
SuiteNavLinkIds.FEEDBACK = 'ShellFeedback';
SuiteNavLinkIds.DIAGNOSTICS = 'Diagnostics';
SuiteNavLinkIds.O365_SETTINGS = 'ShellO365Settings'; 
SuiteNavLinkIds.ADD_APP = 'SuiteMenu_zz5_MenuItemCreate'; 
SuiteNavLinkIds.CREATE_PAGE = 'SuiteMenu_MenuItemCreatePage'; 
SuiteNavLinkIds.SITE_CONTENTS = 'SuiteMenu_zz6_MenuItem_ViewAllSiteContents'; 
SuiteNavLinkIds.SITE_SETTINGS = 'SuiteMenu_zz7_MenuItem_Settings'; 
SuiteNavLinkIds.USER_ACTIVITY = 'UserActivity'; 
SuiteNavLinkIds.ABOUT_ME = 'ShellAboutMe'; 
SuiteNavLinkIds.SETTINGS = 'ShellSettings'; 
SuiteNavLinkIds.MY_SETTINGS = 'SuiteMenu_zz2_ID_PersonalInformation'; 
SuiteNavLinkIds.SIGN_OUT = 'ShellSignout';
SuiteNavLinkIds.HELP = 'HelpLink';
SuiteNavLinkIds.COMMUNITY = 'ShellCommunity';
SuiteNavLinkIds.PRIVACY = 'ShellPrivacy';
SuiteNavLinkIds.LEGAL = 'ShellLegal';
SuiteNavLinkIds.MAIL = 'ShellMail'; 
SuiteNavLinkIds.CALENDAR = 'ShellCalendar';
SuiteNavLinkIds.PEOPLE = 'ShellPeople';
SuiteNavLinkIds.ONEDRIVE = 'ShellDocuments'; 
SuiteNavLinkIds.WORD = 'ShellWordOnline';
SuiteNavLinkIds.EXCEL = 'ShellExcelOnline';
SuiteNavLinkIds.POWERPOINT = 'ShellPowerPointOnline';
SuiteNavLinkIds.ONENOTE = 'ShellOneNoteOnline';
SuiteNavLinkIds.SITES = 'ShellSites';
SuiteNavLinkIds.YAMMER = 'ShellYammer';
SuiteNavLinkIds.TASKS = 'ShellTasks';
SuiteNavLinkIds.POWER_BI = 'ShellPowerBI';
SuiteNavLinkIds.DELVE = 'ShellOfficeGraph'; 
SuiteNavLinkIds.VIDEO = 'ShellVideo';
SuiteNavLinkIds.ALCHEMY = 'ShellAlchemy';
SuiteNavLinkIds.SMILE = 'ShellSendASmile';
exports.default = SuiteNavLinkIds;


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(119);
var styles = {
    showPane: 'showPane_3767c5d3',
    spPropertyPaneContainer: 'spPropertyPaneContainer_3767c5d3',
    shrinkContent: 'shrinkContent_3767c5d3',
};
exports.default = styles;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./full_width.png": 70,
	"./one_column.png": 249,
	"./onethird_column_left.png": 250,
	"./onethird_column_right.png": 251,
	"./three_column.png": 252,
	"./two_column.png": 253
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 248;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "one_column_0a5013471c4fab412dce91159f48555f.png";

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "onethird_column_left_3a58a004c5cc5c8fbfa6cdb70b575b84.png";

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "onethird_column_right_1c376414ef7486b206e5add3ae930b57.png";

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "three_column_a335949966ad0850405aea67e35ab447.png";

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "two_column_9cc4a0b9af173936aee8fb41f9fec772.png";

/***/ }),
/* 254 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_254__;

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(13);
var sp_a11y_1 = __webpack_require__(34);
var sp_application_base_1 = __webpack_require__(77);
var sp_loader_1 = __webpack_require__(35);
var sp_core_library_1 = __webpack_require__(4);
var ErrorDialog_1 = __webpack_require__(72);
var Workbench_1 = __webpack_require__(73);
var PageStore_1 = __webpack_require__(75);
var spWebpartWorkbench_resx_1 = __webpack_require__(74);
__webpack_require__(76);
var SpWebpartWorkbench = (function (_super) {
    __extends(SpWebpartWorkbench, _super);
    function SpWebpartWorkbench() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpWebpartWorkbench.prototype.onLoad = function () {
        var _this = this;
        this._pageStore = new PageStore_1.PageStore(this.shell.serviceScope);
        if (window.ENVIRONMENTTYPE !== 'Local') {
            sp_loader_1.SPComponentLoader._forceLocalManifests()
                .then(function () {
                console.debug(spWebpartWorkbench_resx_1.default.SuccessfullyLoadedText); 
                _this._pageStore.setPageReady();
            }, function (error) {
                var errorMessage = sp_core_library_1.Text.format(spWebpartWorkbench_resx_1.default.ErrorLoadingText, error.toString());
                console.error(errorMessage); 
                _this._renderErrorDialog();
                _this._pageStore.setPageReady();
            });
        }
        else {
            this._pageStore.setPageReady();
        }
    };
    SpWebpartWorkbench.prototype.onRender = function () {
        ReactDOM.render(React.createElement(sp_a11y_1.AccessibleRegion, { name: 'SharePointWorkbench' },
            React.createElement(Workbench_1.WorkBench, { pageStore: this._pageStore })), this.domElement);
    };
    SpWebpartWorkbench.prototype._renderErrorDialog = function () {
        if (!this._errorDialog) {
            var div = document.createElement('div');
            this._errorDialog = ReactDOM.render(React.createElement(ErrorDialog_1.default, null), div);
            document.body.insertBefore(div, document.body.lastChild.nextSibling);
        }
        this._errorDialog.open();
    };
    return SpWebpartWorkbench;
}(sp_application_base_1.BaseApplication));
exports.default = new SpWebpartWorkbench();


/***/ })
/******/ ])});;
//# sourceMappingURL=sp-webpart-workbench.js.map