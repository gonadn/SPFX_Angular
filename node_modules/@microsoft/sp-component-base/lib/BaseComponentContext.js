"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var decorators_1 = require("@microsoft/decorators");
var sp_core_library_1 = require("@microsoft/sp-core-library");
var sp_telemetry_1 = require("@ms/sp-telemetry");
var BaseComponentContext = (function () {
    function BaseComponentContext(parameters) {
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters, 'parameters');
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.manifest, 'manifest');
        this._manifest = parameters.manifest;
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.parentServiceScope, 'parentServiceScope');
        this._serviceScope = parameters.parentServiceScope.startNewChild();
        sp_core_library_1.Validate.isNotNullOrUndefined(parameters.loggingTag, 'loggingTag');
        this.serviceScope.provide(sp_telemetry_1._logSourceServiceKey, sp_telemetry_1._LogSource.create(parameters.loggingTag));
    }
    Object.defineProperty(BaseComponentContext.prototype, "manifest", {
        get: function () { return this._manifest; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseComponentContext.prototype, "serviceScope", {
        get: function () { return this._serviceScope; },
        enumerable: true,
        configurable: true
    });
    BaseComponentContext.prototype.getBaseManifest = function () { return this._manifest; };
    return BaseComponentContext;
}());
__decorate([
    decorators_1.virtual
], BaseComponentContext.prototype, "manifest", null);
exports.default = BaseComponentContext;
